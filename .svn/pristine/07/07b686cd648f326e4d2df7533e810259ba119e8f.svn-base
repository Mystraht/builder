<?php
include_once('ApplicationModel.class.php');

class BuildingModel extends ApplicationModel
{

    public function __construct()
    {
        
    }

    public function validate($params, $type) {
        $errorMessage = '';
		$errorMessage .= $this->isPresent($params, 'token', "Le token est absent\n");
		
        if ($type == 'index') {
			return $errorMessage;
        }

        if ($type == 'create') {
			$errorMessage .= $this->isPresent($params, 'x', "La position X est absent\n");
			$errorMessage .= $this->isPresent($params, 'y', "La position Y est absent\n");
        
			return $errorMessage;
        }
	
		if ($type == 'move') {
            $errorMessage .= $this->isPresent($params, 'x_start', "La position x initiale est absente\n");
            $errorMessage .= $this->isPresent($params, 'y_start', "La position X initiale est absente\n");
			$errorMessage .= $this->isPresent($params, 'x_end', "La position x de destination est absente\n");
			$errorMessage .= $this->isPresent($params, 'y_end', "La position y de destination est absente\n");
        
			return $errorMessage;
		}
		
        if ($type == 'destroy') {
            $errorMessage .= $this->isPresent($params, 'x', "La position x est absente\n");
            $errorMessage .= $this->isPresent($params, 'y', "La position X est absente\n");
        
			return $errorMessage;
        }        
		
		if ($type == 'collect') {
            $errorMessage .= $this->isPresent($params, 'x', "La position x est absente\n");
            $errorMessage .= $this->isPresent($params, 'y', "La position X est absente\n");
        
			return $errorMessage;
        }		
		
		if ($type == 'upgrade') {
            $errorMessage .= $this->isPresent($params, 'x', "La position x est absente\n");
            $errorMessage .= $this->isPresent($params, 'y', "La position X est absente\n");
        
			return $errorMessage;
        }			
		
		if ($type == 'hardBuild') {
            $errorMessage .= $this->isPresent($params, 'x', "La position x est absente\n");
            $errorMessage .= $this->isPresent($params, 'y', "La position X est absente\n");
        
			return $errorMessage;
        }		
		
		if ($type == 'changeColor') {
            $errorMessage .= $this->isPresent($params, 'x', "La position x est absente\n");
            $errorMessage .= $this->isPresent($params, 'y', "La position X est absente\n");
            $errorMessage .= $this->isPresent($params, 'color', "La couleur est absente\n");
        
			return $errorMessage;
        }
        
        return $errorMessage;
    }
}

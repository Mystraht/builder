package com.isartdigital.builder.game.sprites;

import com.isartdigital.utils.Debug;
import com.isartdigital.utils.events.MouseEventType;
import com.isartdigital.utils.game.BoxType;
import com.isartdigital.utils.game.GameStage;
import com.isartdigital.utils.game.IPoolableObject;
import com.isartdigital.utils.game.iso.IZSortable;
import com.isartdigital.utils.game.PoolableObject;
import pixi.display.FlumpMovie;
import pixi.extras.MovieClip;
import pixi.interaction.EventTarget;

/**
 * Classe des tiles
 * @author Dorian MILLIERE
 */
class Tile extends PoolableObject implements IZSortable
{
	public static var list:Array<Tile> = new Array<Tile>();
	
	private var tilesCount:Int = 9;
	private var tileColor:Int;
	
	public var colMin:UInt;
	public var colMax:UInt;
	public var rowMin:UInt;
	public var rowMax:UInt;
	
	public var isBuildable:Bool = true;
	public var isWalkable:Bool = true;
	
	public function new() 
	{
		super();
		boxType = BoxType.NONE;
		interactive = true;
	}

	override function init(?pName:String = null):Void 
	{
		Tile.list.push(this);
		
		colMin = Math.floor(toModel().y);
		colMax = Math.floor(toModel().y) + 1;
		rowMin = Math.floor(toModel().x);
		rowMax = Math.floor(toModel().x) + 1;

		assetName = "Ground";
		setState(DEFAULT_STATE);
		
		
		if (pName == null) {
			setRandomColor();
		} else {
			name = pName;
			tileColor = cast(pName, Int);
			cast(anim, FlumpMovie).gotoAndStop(tileColor);
		}
		
		GameStage.getInstance().getTilesContainer().addChild(this);
	}
	
	
	private function setRandomColor():Void {
		var random:Int = Math.floor(Math.random() * tilesCount);
		tileColor = random;
		cast(anim, FlumpMovie).gotoAndStop(tileColor);
	}
	
	override private function removeFromList () : Void {
		list.splice(list.indexOf(this), 1);
	}
	
	override function getInstance():Dynamic 
	{
		return this;
	}
	
	override public function destroy():Void 
	{
		parent.removeChild(this);
		removeFromList();
		super.destroy();
	}
	
}
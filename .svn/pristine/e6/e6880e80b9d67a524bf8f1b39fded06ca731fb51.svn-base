<?php
include_once('ApplicationController.class.php');

class LanternsController extends ApplicationController
{
	public function __construct()
	{
		
	}

	public function index($params)
	{
		$userId = self::getUserIdByToken($params['token']);
		
		if (!$userId) return Utils::formatErrorMessage(ERROR_BAD_TOKEN, "Bad token");

		$data = self::getLanterns($userId);

		return json_encode([
			'data' => $data,
			'error' => false,
			'errorCode' => -1,
			'errorMessage' => ''
		]);
	}

	public function create($params)
	{
		$userId = self::getUserIdByToken($params['token']);
		if (!$userId) return Utils::formatErrorMessage(ERROR_BAD_TOKEN, "Bad token");   

		if (!self::isValidLanternPosition($params['x'], $params['y'])) 
			return Utils::formatErrorMessage(ERROR_BAD_LANTERN_POSITION, "Bad lantern position");
		
		//TO DO vérifier que la lanterne n'existe pas déjà
			
		$settings = file_get_contents(__DIR__ . "./../../../assets/json/buildingsSettings.json", FILE_USE_INCLUDE_PATH);
		$settings = json_decode($settings, true);	
		
		$lanternsSettings = $settings['lanterns'];
		
		$resourceId = ResourcesController::getResourceIdByName($params['hard'] === 'true' ? 'spice' : $lanternsSettings['resource_price']);
		
		//TO DO formule de calcule du prix des lanternes
		$count = ($params['hard'] === 'true') ? $lanternsSettings['hard_price'] : $lanternsSettings['price'];
		
		echo $params['hard']."count".$count."resourceId : ".$resourceId;
		
		if (!ResourcesController::spendResource($resourceId, $count, $userId))
			return Utils::formatErrorMessage(ERROR_NO_MONEY, "Pas assez de resources pour cette item");
			
		$date = date("Y-m-d H:i:s");
		
		$request = $GLOBALS['app']['db']->prepare('INSERT INTO lantern_users VALUES (NULL, ?, ?, ?, ?, ?)');
		$request->execute(array($userId, $date, $date, $params['x'], $params['y']));

		return Utils::SuccessMessage();
	}

	/**
	 * Récupère la liste des lanterns du joueurs
	 */
	public static function getLanterns($userId) {
		$sql = "SELECT x, y 
				FROM lantern_users
				WHERE user_id = '" . $userId . "'";
				
		
		$result = $GLOBALS['app']['db']->fetchAll($sql);
		return $result;
	}

	/**
	 * Verifie si la lantern est à une position valide
	 * @param x position en x de la lanterne
	 * @param y position en y de la lanterne
	 */
	public static function isValidLanternPosition($x, $y) {
		$lanternsPlacement = file_get_contents(__DIR__ . "./../../../assets/json/lanternsPlacement.json", FILE_USE_INCLUDE_PATH);
        $lanternsPlacement = json_decode($lanternsPlacement, true);

        for ($i=0; $i < count($lanternsPlacement); $i++) { 
			if ($lanternsPlacement[$i]['x'] == $x && $lanternsPlacement[$i]['y'] == $y) {
				return true;
			}
        }
        return false;
	}

}

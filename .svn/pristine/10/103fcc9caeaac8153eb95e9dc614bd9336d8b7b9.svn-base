<?php
use Symfony\Component\HttpFoundation\Request;
use Silex\Application;

require_once __DIR__ . '/../app/controllers/UsersController.class.php';
require_once __DIR__ . '/../app/models/UserModel.class.php';
require_once __DIR__ . '/../Utils.class.php';
require_once __DIR__ . '/../app/models/ResourceModel.class.php';
require_once __DIR__ . '/../app/controllers/ResourcesController.class.php';

$basePath = '/v1';

$UsersController = new UsersController();
$ResourcesController = new ResourcesController();

$UserModel = new UserModel();
$ResourceModel = new ResourceModel();

/*
 * Main path
 */

$app->get('/', function (Request $request) use ($app, $UsersController) {
    return $app->redirect('doc/index.html');
});


/*
 * Users
 */

$app->get($basePath . '/users', function (Request $request) use ($app, $UsersController) {
    return $UsersController->index();
});

$app->get($basePath . '/users/login', function (Request $request) use ($app, $UsersController, $UserModel) {
    $params = $request->query->all();
    $errorMessage = $UserModel->validate($params, 'login');

    if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
    else return $UsersController->login($params);
});

$app->post($basePath . '/users/create', function (Request $request) use ($app, $UsersController, $UserModel) {
    $params = $request->query->all();
    $errorMessage = $UserModel->validate($params, 'create');

    if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
    else return $UsersController->create($params);
});

$app->post($basePath . '/users/createFB', function (Request $request) use ($app, $UsersController, $UserModel) {
    $params = $request->query->all();
    $errorMessage = $UserModel->validate($params, 'createFB');
	
    if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
    else return $UsersController->createFB($params);
});

$app->delete($basePath . '/users/destroy', function (Request $request) use ($app, $UsersController, $UserModel) {
    $params = $request->query->all();
    $errorMessage = $UserModel->validate($params, 'destroy');

    if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
    else return $UsersController->destroy($params);
});



/*
 * Resources
 */

$app->get($basePath . '/resources', function (Request $request) use ($app, $ResourcesController, $ResourceModel) {
	$params = $request->query->all();
	$errorMessage = $ResourceModel->validate($params);
	
	if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
	else return $ResourcesController->index($params);
});

$app->get($basePath . '/resources/offering', function (Request $request) use ($app, $ResourcesController, $ResourceModel) {
	$params = $request->query->all();
	$errorMessage = $ResourceModel->validate($params);
	
	if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
	else return $ResourcesController->getResource($params, "offering");
});

$app->get($basePath . '/resources/gold', function (Request $request) use ($app, $ResourcesController, $ResourceModel) {
	$params = $request->query->all();
	$errorMessage = $ResourceModel->validate($params);
	
	if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
	else return $ResourcesController->getResource($params, "gold");
});

$app->get($basePath . '/resources/spice', function (Request $request) use ($app, $ResourcesController, $ResourceModel) {
	$params = $request->query->all();
	$errorMessage = $ResourceModel->validate($params);
	
	if ($errorMessage) return Utils::formatErrorMessage($errorMessage);
	else return $ResourcesController->getResource($params, "spice");
});
{
"version":3,
"file":"Builder.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/std/Lambda.hx","C:/HaxeToolkit/haxe/std/List.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/HaxeToolkit/haxe/std/UInt.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/Main.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/Api.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/Buildings.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/Gifts.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/Lanterns.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/Resources.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/User.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/api/Utils.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/GameManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/manager/BackgroundManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/manager/ClippingManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/manager/Manager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/manager/ExperienceManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/manager/Maps.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/manager/RessourceManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/map/GMap.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/map/GMapCreator.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/pooling/PoolObject.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/GameObject.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/StateMachine.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/StateGraphic.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/Background.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/Citizen.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/SpriteObject.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/Tile.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/Building.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingConstructor.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingDefinition.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingDestructor.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingHarvester.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingMover.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingPosition.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingTile.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/BuildingUtils.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/utils/CameraUtils.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/utils/TypeDefUtils.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/CheatPanel.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/UIComponent.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/Screen.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/GraphicLoader.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/UIManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/BaseBuildingHUD.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/ConfirmPanel.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/CurrencyAsset.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/GoldCurrency.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/Hud.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/LevelCurrency.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/OfferingsCurrency.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/SpiceCurrency.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/BuildingInShop.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/BuildingInfo.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/ItemBuilding.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/RewardBuilding.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/ShopBuilding.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/ShopRessource.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/items/UpgradeComfirm.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/Popin.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/popin/Confirm.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/popin/LanternConfirm.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/popin/MainBuildingInfo.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/popin/ParadeConfirm.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/popin/ParadeReward.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/popin/UpgradeReward.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/screens/Shop.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/screens/TitleCard.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/Button.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ButtonsBuilding.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ColorButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/DeleteButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/DisableButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/DotButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/GoldButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/LeftButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/MoveButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/OfferingButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ParadeButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/RewardButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/RightButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopOnglet.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopBuildingButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopBuyHardButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopBuySoftButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopCloseButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ShopRessourceButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/SpiceButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/UpgradeButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/UpgradeDisableButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/UpgradeValideButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/uimodule/ValideButton.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/services/Ads.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/services/FacebookPicture.hx","C:/HaxeToolkit/haxe/std/haxe/Http.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/services/HttpService.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/services/Users.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/Config.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/Debug.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/Localization.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/facebook/Facebook.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/Camera.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/CollisionManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/Filter.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/GameStage.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/factory/AnimFactory.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/factory/FlumpMovieAnimFactory.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/factory/FlumpSpriteAnimFactory.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/factory/MovieClipAnimFactory.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/game/iso/IsoManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/loader/GameLoader.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/sounds/SoundManager.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/system/DeviceCapabilities.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/UIAsset.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/UIBuilder.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/ui/UIPosition.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/DisplayObjectKey.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/MoviePlayer.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/json/FlumpJSON.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/FlumpLibrary.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/Keyframe.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/Label.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/Layer.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/Symbol.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/MovieSymbol.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/Point.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/Rectangle.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/flump/library/SpriteSymbol.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/haxe/ds/ArraySort.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/IntMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/Browser.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/actuators/GenericActuator.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/actuators/SimpleActuator.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/easing/Expo.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/Actuate.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/MotionPath.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/actuators/MethodActuator.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/actuators/MotionPathActuator.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/actuators/PropertyDetails.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/easing/Bounce.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/easing/Elastic.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/easing/Linear.hx","C:/HaxeToolkit/haxe/lib/actuate/1,8,6/motion/easing/Quad.hx","C:/HaxeToolkit/haxe/lib/Pathfinder/0,2,18/pathfinder/Coordinate.hx","C:/HaxeToolkit/haxe/lib/Pathfinder/0,2,18/pathfinder/Node.hx","C:/HaxeToolkit/haxe/lib/Pathfinder/0,2,18/pathfinder/Pathfinder.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/pixi/display/FlumpMovie.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/pixi/display/FlumpResource.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/pixi/display/FlumpSprite.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/pixi/display/PixiLayer.hx","C:/HaxeToolkit/haxe/lib/pixi-flump-runtime/0,1,1/src/pixi/loaders/FlumpParser.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/const/BuildingComponents.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/const/BuildingEvents.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/const/BuildingNames.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/sprites/buildings/exceptions/BuildingException.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/type/JsonNames.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/game/type/ModelElementNames.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/hud/BaseBuildingHUDEvent.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/builder/ui/screens/ShopEvent.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/events/EventType.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/events/FacebookEventType.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/events/LoadEventType.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/events/MouseEventType.hx","C:/Users/Roman/Desktop/PROJET_BUILDER/Deliveries/development/src/com/isartdigital/utils/events/TouchEventType.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\tvar x = (cast s).charCodeAt(index);\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with 'using Lambda' and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic {\n\t\ttry return untyped o[field] catch( e : Dynamic ) return null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static inline function getClass<T>( o : T ) : Class<T> {\n\t\treturn if (o == null) null else @:privateAccess js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"__meta__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n#if ((flash || flash9doc || cs) && !doc_gen)\n/**\n\tThe unsigned Int type is only defined for Flash and C#. It's currently\n\thandled the same as a normal Int.\n**/\n@:coreType\n@:notNull\n@:runtimeValue\n@:analyzer(no_const_propagation)\nabstract UInt to Int from Int\n{\n\t@:commutative @:op(A+B) private static function addI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A+B) private static function addF(lhs:UInt, rhs:Float):Float;\n\t@:op(A+B) private static function add(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A*B) private static function mulI(lhs:UInt, rhs:Int):UInt;\n\t@:commutative @:op(A*B) private static function mulF(lhs:UInt, rhs:Float):Float;\n\t@:op(A*B) private static function mul(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A%B) private static function modI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A%B) private static function modF(lhs:UInt, rhs:Float):Float;\n\t@:op(A%B) private static function mod(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A-B) private static function subI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A-B) private static function subF(lhs:UInt, rhs:Float):Float;\n\t@:op(A-B) private static function sub(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A/B) private static function divI(lhs:UInt, rhs:Int):Float;\n\t@:op(A/B) private static function divF(lhs:UInt, rhs:Float):Float;\n\t@:op(A/B) private static function div(lhs:UInt, rhs:UInt):Float;\n\n\t@:commutative @:op(A|B) private static function orI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A|B) private static function or(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A^B) private static function xorI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A^B) private static function xor(lhs:UInt, rhs:UInt):UInt;\n\n\t@:commutative @:op(A&B) private static function andI(lhs:UInt, rhs:Int):UInt;\n\t@:op(A&B) private static function and(lhs:UInt, rhs:UInt):UInt;\n\n\t@:op(A<<B) private static function shl(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>B) private static function shr(lhs:UInt, rhs:Int):UInt;\n\t@:op(A>>>B) private static function ushr(lhs:UInt, rhs:Int):UInt;\n\n\t@:op(A>B) private static function gt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gte(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<B) private static function lt(lhs:UInt, rhs:UInt):Bool;\n\t@:op(A<=B) private static function lte(lhs:UInt, rhs:UInt):Bool;\n\n\t@:op(A>B) private static function gtf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>B) private static function gtf(lhs:Float, rhs:UInt):Bool;\n\t@:op(A>=B) private static function gtef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A>=B) private static function gtef(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<B) private static function ltf(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<B) private static function ltf(lhs:Float, rhs:UInt):Bool;\n\t@:op(A<=B) private static function ltef(lhs:UInt, rhs:Float):Bool;\n\t@:op(A<=B) private static function ltef(lhs:Float, rhs:UInt):Bool;\n\n\t@:op(~A) private static function bneg(t:UInt):UInt;\n\n\t@:commutative @:op(A == B) private static function equalsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsInt<T:Int>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A == B) private static function equalsFloat<T:Float>(a:UInt, b:T):Bool;\n\t@:commutative @:op(A != B) private static function notEqualsFloat<T:Float>(a:UInt, b:T):Bool;\n\n\t@:op(++A) private function prefixIncrement():UInt;\n\t@:op(A++) private function postfixIncrement():UInt;\n\t@:op(--A) private function prefixDecrement():UInt;\n\t@:op(A--) private function postfixDecrement():UInt;\n}\n#else\n/**\n\tThe unsigned Int type is only defined for Flash and C#.\n\tSimulate it for other platforms.\n**/\nabstract UInt(Int) from Int to Int {\n\n\t@:op(A + B) private static inline function add(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() + b.toInt();\n\t}\n\n\t@:op(A / B) private static inline function div(a:UInt, b:UInt):Float {\n\t\treturn a.toFloat() / b.toFloat();\n\t}\n\n\t@:op(A * B) private static inline function mul(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() * b.toInt();\n\t}\n\n\t@:op(A - B) private static inline function sub(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() - b.toInt();\n\t}\n\n\t@:op(A > B) private static #if !js inline #end function gt(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() > b.toInt();\n\t}\n\n\t@:op(A >= B) private static #if !js inline #end function gte(a:UInt, b:UInt):Bool {\n\t\tvar aNeg = a.toInt() < 0;\n\t\tvar bNeg = b.toInt() < 0;\n\t\treturn\n\t\t\tif( aNeg != bNeg ) aNeg;\n\t\t\telse a.toInt() >= b.toInt();\n\t}\n\n\t@:op(A < B) private static inline function lt(a:UInt, b:UInt):Bool {\n\t\treturn gt(b, a);\n\t}\n\n\t@:op(A <= B) private static inline function lte(a:UInt, b:UInt):Bool {\n\t\treturn gte(b, a);\n\t}\n\n\t@:op(A & B) private static inline function and(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() & b.toInt();\n\t}\n\n\t@:op(A | B) private static inline function or(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() | b.toInt();\n\t}\n\n\t@:op(A ^ B) private static inline function xor(a:UInt, b:UInt):UInt {\n\t\treturn a.toInt() ^ b.toInt();\n\t}\n\n\t@:op(A << B) private static inline function shl(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() << b;\n\t}\n\n\t@:op(A >> B) private static inline function shr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >> b;\n\t}\n\n\t@:op(A >>> B) private static inline function ushr(a:UInt, b:Int):UInt {\n\t\treturn a.toInt() >>> b;\n\t}\n\n\t@:op(A % B) private static inline function mod(a:UInt, b:UInt):UInt {\n\t\treturn Std.int( a.toFloat() % b.toFloat() );\n\t}\n\n\t@:commutative @:op(A + B) private static inline function addWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() + b;\n\t}\n\n\t@:commutative @:op(A * B) private static inline function mulWithFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() * b;\n\t}\n\n\t@:op(A / B) private static inline function divFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() / b;\n\t}\n\n\t@:op(A / B) private static inline function floatDiv(a:Float, b:UInt):Float {\n\t\treturn a / b.toFloat();\n\t}\n\n\t@:op(A - B) private static inline function subFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() - b;\n\t}\n\n\t@:op(A - B) private static inline function floatSub(a:Float, b:UInt):Float {\n\t\treturn a - b.toFloat();\n\t}\n\n\t@:op(A > B) private static inline function gtFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() > b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() == b;\n\t}\n\n\t@:commutative @:op(A != B) private static inline function notEqualsInt<T:Int>(a:UInt, b:T):Bool {\n\t\treturn a.toInt() != b;\n\t}\n\n\t@:commutative @:op(A == B) private static inline function equalsFloat<T:Float>(a:UInt, b:T):Bool {\n        return a.toFloat() == b;\n    }\n\n    @:commutative @:op(A != B) private static inline function notEqualsFloat<T:Float>(a:UInt, b:T):Bool {\n        return a.toFloat() != b;\n    }\n\n\t@:op(A >= B) private static inline function gteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() >= b;\n\t}\n\n\n\t@:op(A > B) private static inline function floatGt(a:Float, b:UInt):Bool {\n\t\treturn a > b.toFloat();\n\t}\n\n\t@:op(A >= B) private static inline function floatGte(a:Float, b:UInt):Bool {\n\t\treturn a >= b.toFloat();\n\t}\n\n\t@:op(A < B) private static inline function ltFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() < b;\n\t}\n\n\t@:op(A <= B) private static inline function lteFloat(a:UInt, b:Float):Bool {\n\t\treturn a.toFloat() <= b;\n\t}\n\n\t@:op(A < B) private static inline function floatLt(a:Float, b:UInt):Bool {\n\t\treturn a < b.toFloat();\n\t}\n\n\t@:op(A <= B) private static inline function floatLte(a:Float, b:UInt):Bool {\n\t\treturn a <= b.toFloat();\n\t}\n\n\t@:op(A % B) private static inline function modFloat(a:UInt, b:Float):Float {\n\t\treturn a.toFloat() % b;\n\t}\n\n\t@:op(A % B) private static inline function floatMod(a:Float, b:UInt):Float {\n\t\treturn a % b.toFloat();\n\t}\n\n\t@:op(~A) private inline function negBits():UInt {\n\t\treturn ~this;\n\t}\n\n\t@:op(++A) private inline function prefixIncrement():UInt {\n\t\treturn ++this;\n\t}\n\n\t@:op(A++) private inline function postfixIncrement():UInt {\n\t\treturn this++;\n\t}\n\n\t@:op(--A) private inline function prefixDecrement():UInt {\n\t\treturn --this;\n\t}\n\n\t@:op(A--) private inline function postfixDecrement():UInt {\n\t\treturn this--;\n\t}\n\n\t// TODO: radix is just defined to deal with doc_gen issues\n\tprivate inline function toString(?radix:Int):String {\n\t\treturn Std.string(toFloat());\n\t}\n\n\tprivate inline function toInt():Int {\n\t\treturn this;\n\t}\n\n\t@:to private #if (!js || analyzer) inline #end function toFloat():Float {\n\t\tvar int = toInt();\n\t\tif (int < 0) {\n\t\t\treturn 4294967296.0 + int;\n\t\t}\n\t\telse {\n\t\t\t// + 0.0 here to make sure we promote to Float on some platforms\n\t\t\t// In particular, PHP was having issues when comparing to Int in the == op.\n\t\t\treturn int + 0.0;\n\t\t}\n\t}\n}\n#end\n","package com.isartdigital.builder;\r\n\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.api.Utils;\r\nimport com.isartdigital.builder.game.def.UserInfoDef;\r\nimport com.isartdigital.builder.game.manager.ExperienceManager;\r\nimport com.isartdigital.builder.ui.GraphicLoader;\r\nimport com.isartdigital.builder.ui.hud.GoldCurrency;\r\nimport com.isartdigital.builder.ui.hud.LevelCurrency;\r\nimport com.isartdigital.builder.ui.hud.OfferingsCurrency;\r\nimport com.isartdigital.builder.ui.hud.SpiceCurrency;\r\nimport com.isartdigital.builder.ui.items.BuildingInfo;\r\nimport com.isartdigital.builder.ui.items.BuildingInShop;\r\nimport com.isartdigital.builder.ui.items.ItemBuilding;\r\nimport com.isartdigital.builder.ui.items.RewardBuilding;\r\nimport com.isartdigital.builder.ui.items.ShopBuilding;\r\nimport com.isartdigital.builder.ui.items.UpgradeComfirm;\r\nimport com.isartdigital.builder.ui.screens.TitleCard;\r\nimport com.isartdigital.builder.ui.UIManager;\r\nimport com.isartdigital.builder.ui.uimodule.ColorButton;\r\nimport com.isartdigital.builder.ui.uimodule.DeleteButton;\r\nimport com.isartdigital.builder.ui.uimodule.DisableButton;\r\nimport com.isartdigital.builder.ui.uimodule.DotButton;\r\nimport com.isartdigital.builder.ui.uimodule.GoldButton;\r\nimport com.isartdigital.builder.ui.uimodule.LeftButton;\r\nimport com.isartdigital.builder.ui.uimodule.MoveButton;\r\nimport com.isartdigital.builder.ui.uimodule.OfferingButton;\r\nimport com.isartdigital.builder.ui.uimodule.ParadeButton;\r\nimport com.isartdigital.builder.ui.uimodule.RewardButton;\r\nimport com.isartdigital.builder.ui.uimodule.RightButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopBuildingButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopBuyHardButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopBuySoftButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopCloseButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopRessourceButton;\r\nimport com.isartdigital.builder.ui.uimodule.SpiceButton;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeButton;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeDisableButton;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeValideButton;\r\nimport com.isartdigital.builder.ui.uimodule.ValideButton;\r\nimport com.isartdigital.services.Ads;\r\nimport com.isartdigital.services.Users;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.Debug;\r\nimport com.isartdigital.utils.events.EventType;\r\nimport com.isartdigital.utils.events.LoadEventType;\r\nimport com.isartdigital.utils.facebook.Facebook;\r\nimport com.isartdigital.utils.game.factory.MovieClipAnimFactory;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.game.GameStageScale;\r\nimport com.isartdigital.builder.game.GameManager;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport com.isartdigital.utils.Localization;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport com.isartdigital.utils.ui.UIBuilder;\r\nimport eventemitter3.EventEmitter;\r\nimport haxe.Http;\r\nimport haxe.Json;\r\nimport js.Browser;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.renderers.Detector;\r\nimport pixi.core.renderers.webgl.WebGLRenderer;\r\nimport pixi.interaction.EventTarget;\r\nimport pixi.loaders.Loader;\r\n\r\n/**\r\n * Classe d'initialisation et lancement du jeu\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Main extends EventEmitter\r\n{\r\n\t\r\n\tprivate var increase:Bool = true;\r\n\t/**\r\n\t * chemin vers le fichier de configuration\r\n\t */\r\n\tprivate static inline var CONFIG_PATH:String = \"config.json\";\t\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Main\r\n\t */\r\n\tprivate static var instance: Main;\r\n\t\r\n\t/**\r\n\t * Si le /me a été chargé ou non\r\n\t */\r\n\tprivate var userInfoLoaded:Bool = false;\r\n\t\r\n\t/**\r\n\t * Si les assets on été chargé ou non\r\n\t */\r\n\tprivate var assetsLoaded:Bool = false;\r\n\t\r\n\t/**\r\n\t * renderer (WebGL ou Canvas)\r\n\t */\r\n\tpublic var renderer:WebGLRenderer;\r\n\t\r\n\t/**\r\n\t * Element racine de la displayList\r\n\t */\r\n\tpublic var stage:Container;\r\n\t\r\n\t/**\r\n\t * initialisation générale\r\n\t */\r\n\tprivate static function main ():Void {\r\n\t\tMain.getInstance();\r\n\t}\r\n\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Main {\r\n\t\tif (instance == null) instance = new Main();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * création du jeu et lancement du chargement du fichier de configuration\r\n\t */\r\n\tprivate function new () {\r\n\t\tsuper();\r\n\t\t\r\n\t\tif (Browser.getLocalStorage().getItem('token') == null) {\r\n\t\t\tBrowser.location.href = '../';\r\n\t\t}\r\n\t\t\r\n\t\tApi.getInstance();\r\n\t\tloadUserInfos();\r\n\t\t\r\n\t\tvar lOptions:RenderingOptions = {};\r\n\t\t//lOptions.antialias = true;\r\n\t\t//lOptions.autoResize = true;\r\n\t\tlOptions.backgroundColor = 0x999999;\r\n\t\t//lOptions.resolution = 1;\r\n\t\t//lOptions.transparent = false;\r\n\t\t//lOptions.preserveDrawingBuffer (pour dataToURL)\r\n\t\t\r\n\t\tDeviceCapabilities.scaleViewport();\r\n\t\t\r\n\t\trenderer = Detector.autoDetectRenderer(DeviceCapabilities.width, DeviceCapabilities.height, lOptions);\r\n\t\t\r\n\t\t// positionne tous les éléments graphiques au pixel ce qui evite les effets de flou\r\n\t\tuntyped renderer.roundPixels = true;\r\n\t\t\r\n\t\tBrowser.document.body.appendChild(renderer.view);\r\n\t\t\r\n\t\tstage = new Container();\r\n\t\t\r\n\t\tFacebook.onLogin = onFacebookLogin;\r\n\t\tFacebook.load(\"750435741727559\");\r\n\t\t\r\n\t\tvar lConfig:Loader = new Loader();\r\n\t\t\r\n\t\tlConfig.add(CONFIG_PATH);\r\n\t\tlConfig.once(LoadEventType.COMPLETE, preloadAssets);\r\n\t\t\r\n\t\tlConfig.load();\r\n\t}\r\n\t\r\n\t/**\r\n\t * charge les assets graphiques du preloader principal\r\n\t */\r\n\tprivate function preloadAssets(pLoader:Loader):Void {\r\n\t\t\r\n\t\t// initialise les paramètres de configuration\r\n\t\tConfig.init(Reflect.field(pLoader.resources,CONFIG_PATH).data);\r\n\t\t\r\n\t\t// Active le mode debug\r\n\t\tif (Config.debug) Debug.getInstance().init();\r\n\t\t// défini l'alpha des Boxes de collision\r\n\t\tif (Config.debug && Config.data.boxAlpha != null) StateGraphic.boxAlpha = Config.data.boxAlpha;\r\n\t\t// défini l'alpha des anims\r\n\t\tif (Config.debug && Config.data.animAlpha != null) StateGraphic.animAlpha = Config.data.animAlpha;\r\n\t\t\r\n\t\t// défini le mode de redimensionnement du Jeu pour Desktop (NO_SCALE) et pour le reste (SHOW_ALL)\r\n\t\tif (DeviceCapabilities.system == DeviceCapabilities.SYSTEM_DESKTOP) {\r\n\t\t\tGameStage.getInstance().scaleMode = GameStageScale.NO_SCALE;\r\n\t\t\t// petit hack pour forcer l'utilisation de la texture MD sur Desktop\r\n\t\t\tuntyped DeviceCapabilities.textureRatio = 0.5;\r\n\t\t\tuntyped DeviceCapabilities.textureType = DeviceCapabilities.TEXTURE_MD;\r\n\t\t} else {\r\n\t\t\tGameStage.getInstance().scaleMode = GameStageScale.SHOW_ALL;\r\n\t\t\tDeviceCapabilities.init();\r\n\t\t}\r\n\t\t\r\n\t\t// initialise le GameStage et défini la taille de la safeZone\r\n\t\tGameStage.getInstance().init(render, 2048, 1366, true);\r\n\t\t\r\n\t\t// affiche le bouton FullScreen quand c'est nécessaire\r\n\t\tDeviceCapabilities.displayFullScreenButton();\r\n\t\t\r\n\t\t// Ajoute le GameStage au stage\r\n\t\tstage.addChild(GameStage.getInstance());\r\n\t\t\r\n\t\t// ajoute Main en tant qu'écouteur des évenements de redimensionnement\r\n\t\tBrowser.window.addEventListener(EventType.RESIZE, resize);\r\n\t\tresize();\r\n\t\t\r\n\t\t// lance le chargement des assets graphiques du preloader\r\n\t\tvar lLoader:GameLoader = new GameLoader();\r\n\t\tlLoader.addAssetFile(\"preload.png\");\r\n\t\tlLoader.addAssetFile(\"preload_bg.png\");\t\t\r\n\t\t\r\n\t\tlLoader.once(LoadEventType.COMPLETE, loadAssets);\r\n\t\tlLoader.load();\r\n\t}\r\n\t\r\n\t/**\r\n\t * lance le chargement principal\r\n\t */\r\n\tprivate function loadAssets (pLoader:GameLoader): Void {\r\n\t\t\r\n\t\tvar lLoader:GameLoader = new GameLoader();\r\n\t\t\r\n\t\tlLoader.addTxtFile(\"ui.json\");\r\n\t\t\r\n\t\t//lLoader.addTxtFile(\"boxes.json\");\r\n\t\tlLoader.addSoundFile(\"sounds.json\");\r\n\r\n\t\tlLoader.addTxtFile(\"json/basemap.json\");\r\n\t\tlLoader.addTxtFile(\"json/building.json\");\r\n\t\tlLoader.addTxtFile(\"json/lanternsPlacement.json\");\r\n\t\tlLoader.addTxtFile(\"json/buildingsSettings.json\");\r\n\t\tlLoader.addTxtFile(\"json/ShopSheet.json\");\r\n\t\t\r\n\t\tlLoader.addTxtFile(\"json/en.json\");\r\n\t\tlLoader.addTxtFile(\"json/fr.json\");\r\n\t\tlLoader.addTxtFile(\"json/XP.json\");\r\n\t\t\r\n\t\tlLoader.addAssetFile(\"graphics.json\");\r\n\t\tlLoader.addAssetFile(\"background.json\");\r\n\t\t\r\n\t\tlLoader.addTxtFile(\"hd/ui/textsUI.json\");\r\n\t\t\r\n\t\tlLoader.addAssetFile(DeviceCapabilities.textureType+\"/ingame/library.json\");\r\n\t\tlLoader.addAssetFile(DeviceCapabilities.textureType+\"/ui/library.json\");\r\n\t\t\r\n\t\tlLoader.addFontFile(\"fonts.css\");\r\n\t\t\r\n\t\tlLoader.on(LoadEventType.PROGRESS, onLoadProgress);\r\n\t\tlLoader.once(LoadEventType.COMPLETE, onLoadComplete);\r\n\t\t\r\n\t\t// affiche l'écran de préchargement\r\n\t\tUIManager.getInstance().openScreen(GraphicLoader.getInstance());\r\n\r\n\t\tBrowser.window.requestAnimationFrame(cast gameLoop);\r\n\t\t\r\n\t\tlLoader.load();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Charge le /userInfos du jeu\r\n\t */\r\n\tprivate function loadUserInfos():Void {\r\n\t\tApi.user.getUserInfo(cbOnUserInfosReceipt);\r\n\t}\r\n\t\r\n\tprivate function cbOnUserInfosReceipt(pData:String):Void {\r\n\t\tvar lData:DataDef = cast(Json.parse(pData));\r\n\t\tvar userInfos:UserInfoDef;\r\n\t\t\r\n\t\tif (lData.error) {\r\n\t\t\tUtils.errorHandler(lData.errorCode, lData.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tUsers.setInfos(lData.data);\r\n\t\tuserInfoLoaded = true;\r\n\t\ttryToStartGame();\r\n\t}\r\n\t\r\n\t/**\r\n\t * transmet les paramètres de chargement au préchargeur graphique\r\n\t * @param\tpEvent evenement de chargement\r\n\t */\r\n\tprivate function onLoadProgress (pLoader:GameLoader): Void {\r\n\t\tGraphicLoader.getInstance().update(pLoader.progress/100);\r\n\t}\r\n\t\r\n\t/**\r\n\t * initialisation du jeu\r\n\t * @param\tpEvent evenement de chargement\r\n\t */\r\n\tprivate function onLoadComplete (pLoader:GameLoader): Void {\r\n\t\t\r\n\t\tpLoader.off(LoadEventType.PROGRESS, onLoadProgress);\r\n\t\t\r\n\t\t// transmet au StateGraphic la description des planches de Sprites utilisées par les instances de StateGraphic\r\n\t\tMovieClipAnimFactory.addTextures(GameLoader.getContent(\"graphics.json\"));\r\n\t\tMovieClipAnimFactory.addTextures(GameLoader.getContent(\"assets.json\"));\r\n\t\tMovieClipAnimFactory.addTextures(GameLoader.getContent(\"bakckground.json\"));\r\n\t\t///StateFlumpMoviaddTextures(GameLoader.getContent(\"library.json\"));\r\n\t\t// transmet au StateGraphic la description des boxes de collision utilisées par les instances de StateGraphic\r\n\t\tStateGraphic.addBoxes(GameLoader.getContent(\"\"));\r\n\t\t\r\n\t\t//initialise le builder d'UI\r\n\t\tUIBuilder.init(\"ui.json\", \"com.isartdigital.builder.ui.uimodule\", \"com.isartdigital.builder.ui.hud\", \"com.isartdigital.builder.ui.items\");\r\n\t\tUIBuilder.addTextStyle(Reflect.field(pLoader.resources, \"assets/hd/ui/textsUI.json\").data);\r\n\t\tLocalization.getInstance().setDataLocalization(Reflect.field(pLoader.resources, \"assets/json/\" + Config.language +\".json\").data);\r\n\t\tExperienceManager.getInstance().setDataXP(Reflect.field(pLoader.resources, \"assets/json/XP.json\").data);\r\n\t\tassetsLoaded = true;\r\n\t\ttryToStartGame();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Essaye de charger le jeu (Si les conditions necessaires sont valide)\r\n\t */\r\n\tprivate function tryToStartGame() {\r\n\t\tif (assetsLoaded && userInfoLoaded) {\r\n\t\t\tstartGame();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Démarre le jeu\r\n\t */\r\n\tprivate function startGame() {\r\n\t\t//Ouvre la TitleCard\r\n\t\t//UIManager.getInstance().openScreen(TitleCard.getInstance());\r\n\t\tUIManager.getInstance().startGame();\r\n\t\tGameManager.getInstance().start();\r\n\t\tAds.getImage(cbAds);\r\n\t}\r\n\t\r\n\t/**\r\n\t * game loop\r\n\t */\r\n\tprivate function gameLoop() {\r\n\t\tBrowser.window.requestAnimationFrame(cast gameLoop);\r\n\t\t//Hud.getInstance().refreshHUD();\r\n\t\trender();\t\t\r\n\t\temit(EventType.GAME_LOOP);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ecouteur du redimensionnement\r\n\t * @param\tpEvent evenement de redimensionnement\r\n\t */\r\n\tpublic function resize (pEvent:EventTarget = null): Void {\r\n\t\trenderer.resize(DeviceCapabilities.width, DeviceCapabilities.height);\r\n\t\tGameStage.getInstance().resize();\r\n\t}\r\n\t\r\n\t/**\r\n\t * fait le rendu de l'écran\r\n\t */\r\n\tprivate function render (): Void {\r\n\t\trenderer.render(stage);\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tBrowser.window.removeEventListener(EventType.RESIZE, resize);\r\n\t\tinstance = null;\r\n\t}\r\n\t\r\n\tprivate static function importClasses():Void {\r\n\t\tBuildingInfo;\r\n\t\tBuildingInShop;\r\n\t\tColorButton;\r\n\t\tDotButton;\r\n\t\tDeleteButton;\r\n\t\tDisableButton;\r\n\t\tGoldButton;\r\n\t\tGoldCurrency;\r\n\t\tItemBuilding;\r\n\t\tLeftButton;\r\n\t\tLevelCurrency;\r\n\t\tMoveButton;\r\n\t\tOfferingButton;\r\n\t\tOfferingsCurrency;\r\n\t\tParadeButton;\r\n\t\tRewardBuilding;\r\n\t\tRewardButton;\r\n\t\tRightButton;\r\n\t\tShopBuilding;\r\n\t\tShopBuildingButton;\r\n\t\tShopButton;\r\n\t\tShopBuyHardButton;\r\n\t\tShopBuySoftButton;\r\n\t\tShopCloseButton;\r\n\t\tShopRessourceButton;\r\n\t\tSpiceButton;\r\n\t\tSpiceCurrency;\r\n\t\tUpgradeButton;\r\n\t\tUpgradeComfirm;\r\n\t\tUpgradeDisableButton;\r\n\t\tUpgradeValideButton;\r\n\t\tValideButton;\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fonction appellé quand la connection à facebook est réussi\r\n\t */\r\n\tprivate function onFacebookLogin ():Void  {\r\n\t\tFacebook.api(Facebook.uid, { fields: \"first_name,last_name,bio,email,picture\" }, callBackApi);\r\n\t\t// Facebook.ui( { method: 'share', href: 'https://developers.facebook.com/docs/' }, callBackUI);\r\n\t}\r\n\t\r\n\tprivate function callBackApi(pData:Dynamic):Void {\r\n\t\tif (pData == null) trace(\"Erreur facebook API\");\r\n\t\telse if (pData.error != null) trace (pData.error);\r\n\t\telse {\r\n\t\t\t//FacebookPicture.load(pData.picture.data.url);\r\n\t\t\t//Ads.getImage(cbAds);\r\n\t\t\t//Ads.getMovie(cbAds);\r\n\t\t\t//Wallet.getMoney(pData.email, cbAds);\r\n\t\t\t//Wallet.buy(pData.email, 10, cbAds);$\r\n\t\t\t//Bank.deposit(50, cbAds);\r\n\t\t\t//Bank.refund(50, cbAds);\r\n\t\t};\r\n\t}\r\n\t\r\n\tprivate function cbAds(pData:Dynamic):Void {\r\n\t\tif (pData == null) trace(\"Erreur Ads API\");\r\n\t\telse if (pData.error != null) trace (pData.error);\r\n\t\telse {\r\n\t\t\ttrace(pData);\r\n\t\t};\r\n\t}\r\n\t\r\n\tprivate function callBackUI(pData:Dynamic):Void {\r\n\t\tif (pData == null) trace(\"Erreur facebook API\");\r\n\t\telse if (pData.error_message != null) trace (pData.error_message);\r\n\t\telse trace(pData);\r\n\t}\r\n}","package com.isartdigital.builder.api;\r\nimport com.isartdigital.builder.api.Lanterns;\r\nimport js.Browser;\r\nimport js.html.CreateFileOptions;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass Api \r\n{\t\r\n\tpublic static var domain:String;\r\n\tpublic static var domainProd:String = \"https://fbgame.isartdigital.com/2017_builder/builder2/\";\r\n\tpublic static var domainDev:String = \"https://localhostbuilder.com/\";\r\n\t\r\n\tpublic static var pathApi:String = \"api/v1/\";\r\n\t\r\n\tpublic static var token:String;\r\n\t\r\n\tpublic static var user:User;\r\n\tpublic static var gifts:Gifts;\r\n\tpublic static var resources:Resources;\t\r\n\tpublic static var buildings:Buildings;\r\n\tpublic static var lanterns:Lanterns;\r\n\t\r\n\t\t/**\r\n\t * instance unique de la classe Resources\r\n\t */\r\n\tprivate static var instance: Api;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Api {\r\n\t\tif (instance == null) instance = new Api();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tinstance = this;\r\n\t\t\r\n\t\tdomain = domainDev;\r\n\t\t\r\n\t\ttoken = Browser.getLocalStorage().getItem(\"token\");\r\n\t\t\r\n\t\tuser = User.getInstance();\r\n\t\tresources = Resources.getInstance();\r\n\t\tbuildings = Buildings.getInstance();\r\n\t\tlanterns = Lanterns.getInstance();\r\n\t\tgifts = Gifts.getInstance();\r\n\t}\r\n\r\n}","package com.isartdigital.builder.api;\r\nimport haxe.Http;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass Buildings \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Buildings\r\n\t */\r\n\tprivate static var instance: Buildings;\r\n\t\r\n\tprivate var buildingsPath:String = \"buildings\";\r\n\tprivate var createPath:String = \"/create\";\r\n\tprivate var upgradePath:String = \"/upgrade\";\r\n\tprivate var collectPath:String = \"/collect\";\r\n\tprivate var movePath:String = \"/move\";\r\n\tprivate var hardBuildPath:String = \"/hardBuild\";\r\n\tprivate var changeColorPath:String = \"/changeColor\";\r\n\tprivate var destroyPath:String = \"/destroy\";\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Buildings {\r\n\t\tif (instance == null) instance = new Buildings();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function getAllBuildings(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath, { token: Api.token }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function create(pBuilding:String, pX:Int, pY:Int, pCallBack:String->Void) {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + \"/\" + pBuilding + createPath , { token: Api.token, x: pX, y: pY }));\r\n\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function upgrade(pX:Int, pY:Int,pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + upgradePath, { token: Api.token, x: pX, y: pY }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function collect(pX:Int, pY:Int,pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + collectPath, { token: Api.token, x: pX, y: pY }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function move(pX_start:Int, pY_start:Int, pX_end:Int, pY_end:Int, pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + movePath, { token: Api.token, x_start: pX_start, y_start: pY_start, x_end: pX_end, y_end: pY_end }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function hardBuild(pX:Int, pY:Int, pCallBack:String->Void ):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + hardBuildPath , { token: Api.token, x: pX, y: pY }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function changeColor(pColor:String, pX:Int, pY:Int, pCallBack:String->Void ):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + changeColorPath , { token: Api.token, color: pColor, x: pX, y: pY }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\r\n\tpublic function destroy(pX:Int, pY:Int, pCallBack:String->Void ):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + buildingsPath + destroyPath , { token: Api.token, x: pX, y: pY }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\r\n}","package com.isartdigital.builder.api;\r\nimport haxe.Http;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Roman CHEVASSU\r\n */\r\nclass Gifts \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Lantern\r\n\t */\r\n\tprivate static var instance: Gifts;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Gifts {\r\n\t\tif (instance == null) instance = new Gifts();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate var giftsPath : String = \"gifts\";\r\n\tprivate var createPath : String = \"/create\";\r\n\tprivate var collectPath : String = \"/collect\";\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\r\n\tpublic function getGifts(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + giftsPath, { token: Api.token }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function create(friendUserId, pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + giftsPath + createPath, { token: Api.token, friend_user_id: friendUserId}));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function collect(name, authorName, pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + giftsPath + collectPath, { token: Api.token, name: name, author_name: authorName}));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n}","package com.isartdigital.builder.api;\r\nimport haxe.Http;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Roman CHEVASSU\r\n */\r\nclass Lanterns \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Lantern\r\n\t */\r\n\tprivate static var instance: Lanterns;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Lanterns {\r\n\t\tif (instance == null) instance = new Lanterns();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate var lanternsPath : String = \"lanterns\";\r\n\tprivate var createPath : String = \"/create\";\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\r\n\tpublic function getLanterns(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + lanternsPath, { token: Api.token }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function create(pX: Int, pY:Int, pHardPurchase:Bool, pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + lanternsPath + createPath, { token: Api.token, x:pX , y:pY, hard: pHardPurchase}));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.api;\r\nimport com.isartdigital.builder.game.def.ResourceDef;\r\nimport haxe.Http;\r\nimport haxe.Json;\r\nimport js.Browser;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass Resources\r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Resources\r\n\t */\r\n\tprivate static var instance: Resources;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Resources {\r\n\t\tif (instance == null) instance = new Resources();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate var resourcesPath:String = \"resources\";\r\n\tprivate var goldPath:String = \"/gold\";\r\n\tprivate var spicePath:String = \"/spice\";\r\n\tprivate var offeringPath:String = \"/offering\";\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function get(pCallBack:String->Void) {\r\n\t\t//notre request en ajax\r\n\t\t\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + resourcesPath, { token: Api.token }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function gold (pCallBack:String->Void) {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + resourcesPath + goldPath, { token: Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function spice (pCallBack:String->Void) {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + resourcesPath + spicePath, { token: Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function offering (pCallBack:String->Void) {\t\t\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + resourcesPath + offeringPath, { token: Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n}","package com.isartdigital.builder.api;\r\nimport haxe.Http;\r\nimport js.Browser;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass User\r\n{\r\n\t/**\r\n\t * instance unique de la classe Resources\r\n\t */\r\n\tprivate static var instance: User;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): User {\r\n\t\tif (instance == null) instance = new User();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate var userPath:String = \"users\";\r\n\tprivate var createPath:String = \"/create\";\r\n\tprivate var createFBPath:String = \"/createFB\";\r\n\tpublic  var userInfoPath:String = 'userInfos';\r\n\tpublic  var loginPath:String = \"/login\";\r\n\tprivate var dailyRewardPath:String = \"/dailyreward\";\r\n\tprivate var updatePath:String = \"/update\";\r\n\tprivate var paradePath:String = \"/parade\";\r\n\tprivate var buyPath:String = \"/buy\";\r\n\tprivate var completePath:String = \"/complet\";\r\n\tprivate var ftuePath:String = \"/ftue\";\r\n\tprivate var experiencePath:String = \"/experience\";\r\n\tprivate var destroyPath:String = \"/destroy\";\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function getUserInfo(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userInfoPath, { token: Api.token }));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function getDailyreward(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + dailyRewardPath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function dailyrewardUpdate(pCallBack:String->Void) {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + dailyRewardPath + updatePath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function getParade(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + paradePath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function paradeUpdate(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + paradePath + updatePath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function getFtue(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + ftuePath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function getExperience(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi +userPath + experiencePath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function buy(pName: String, pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi +userPath + experiencePath, { token:Api.token, name:pName}));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(false);\r\n\t}\r\n\t\r\n\tpublic function ftueComplet(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + ftuePath + completePath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n\t\r\n\tpublic function destroy(pCallBack:String->Void):Void {\r\n\t\tvar request = new Http(Utils.formatPath(Api.domain + Api.pathApi + userPath + destroyPath, { token:Api.token } ));\r\n\t\t\r\n\t\trequest.onData = pCallBack;\r\n\t\trequest.request(true);\r\n\t}\r\n}\t","package com.isartdigital.builder.api;\r\nimport com.isartdigital.utils.Debug;\r\nimport js.Browser;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass Utils \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Utils\r\n\t */\r\n\tprivate static var instance: Utils;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Utils {\r\n\t\tif (instance == null) instance = new Utils();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet d'afficher le message d'erreur & opération spécifique à l'erreur\r\n\t * @param\terrorCode code d'erreur du message\r\n\t * \t\t1: Bad token\r\n\t * \t\t2: Model incorrect\r\n\t * @param\terrorMessage\r\n\t */\r\n\tpublic static function errorHandler(errorCode:Int, errorMessage:String):Void {\r\n\t\tif (errorCode == 1) {\r\n\t\t\tBrowser.getLocalStorage().setItem(\"token\", '');\r\n\t\t\tBrowser.location.href = '../';\r\n\t\t}\r\n\t\t\r\n\t\tDebug.error(errorMessage);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de mettre des paramètre dans un lien HTTP (avec un object)\r\n\t * @param\tpath Adresse du lien\r\n\t * @param\tparams Paramètre GET à passer\r\n\t */\r\n\tpublic static function formatPath(path:String, params:Dynamic):String {\r\n\t\tvar paramsStringFormatted:String = path + \"?\";\r\n\t\tvar paramKeys:Array<String> = Reflect.fields(params);\r\n\t\t\r\n\t\tfor (i in 0...paramKeys.length) {\r\n\t\t\tparamsStringFormatted += paramKeys[i] + \"=\" + cast(Reflect.field(params, paramKeys[i])) + \"&\";\r\n\t\t}\r\n\t\t\r\n\t\tparamsStringFormatted = paramsStringFormatted.substring(0, paramsStringFormatted.length - 1);\r\n\t\t\r\n\t\treturn paramsStringFormatted;\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.game;\r\n\r\nimport com.isartdigital.builder.game.map.GMapCreator;\r\nimport motion.Actuate;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.manager.BackgroundManager;\r\nimport com.isartdigital.builder.game.manager.ClippingManager;\r\nimport com.isartdigital.builder.game.manager.ExperienceManager;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.manager.RessourceManager;\r\nimport com.isartdigital.builder.game.sprites.Background;\r\nimport com.isartdigital.builder.game.sprites.buildings.Building;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.builder.game.sprites.Citizen;\r\nimport com.isartdigital.builder.game.sprites.Tile;\r\nimport com.isartdigital.builder.game.utils.TypeDefUtils;\r\nimport com.isartdigital.builder.ui.CheatPanel;\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUD;\r\nimport com.isartdigital.builder.ui.hud.ConfirmPanel;\r\nimport com.isartdigital.builder.ui.hud.Hud;\r\nimport com.isartdigital.builder.ui.UIManager;\r\nimport com.isartdigital.builder.ui.uimodule.ValideButton;\r\nimport com.isartdigital.services.FacebookPicture;\r\nimport com.isartdigital.services.Users;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.Debug;\r\nimport com.isartdigital.utils.events.EventType;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.game.Camera;\r\nimport com.isartdigital.utils.game.GameObject;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport com.isartdigital.utils.game.IStateMachine;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport haxe.Json;\r\nimport js.Browser;\r\nimport js.html.MouseEvent;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\nimport pixi.loaders.Loader;\r\n\r\n/**\r\n * Manager (Singleton) en charge de gérer le déroulement d'une partie\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GameManager\r\n{\r\n\t/**\r\n\t * instance unique de la classe GameManager\r\n\t */\r\n\tprivate static var instance: GameManager;\r\n\r\n\tpublic static inline var EVENT_MOUSE_UP:String = \"EVENT_MOUSE_UP\";\r\n\r\n\tpublic var mousePosition:Point = new Point( -1, -1);\r\n\tpublic var screenRect:Rectangle;\r\n\t\r\n\tpublic function get_ScreenRect():Rectangle {\r\n\t\treturn screenRect;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): GameManager {\r\n\t\tif (instance == null) instance = new GameManager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate function new() {\r\n\t}\r\n\t\r\n\tprivate function refreshMouseCoordinates(pEvent:MouseEvent) {\r\n\t\tvar position:Point = GameStage.getInstance().getGameContainer().toLocal(new Point(pEvent.layerX, pEvent.layerY));\r\n\t\tmousePosition.set(position.x, position.y);\r\n\t}\r\n\r\n\tprivate function emitMouseUp(event:MouseEvent):Void {\r\n\t\tvar position:Point = GameStage.getInstance().getGameContainer().toLocal(new Point(event.layerX, event.layerY));\r\n\t\tMain.getInstance().emit(EVENT_MOUSE_UP, position);\r\n\t}\r\n\t\r\n\t//exemple callback pour api.user.create\r\n\tprivate function cb_createUser (pData:String): Void {\r\n\t\tvar lData:DataDef = cast(Json.parse(pData));\r\n\t\t\r\n\t\tif (lData.error)\r\n\t\t{\r\n\t\t\ttrace(lData.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function cb_resourceAll (pData:String) : Void\r\n\t{\r\n\t\tvar lData:DataDef = cast(Json.parse(pData));\r\n\t\t\r\n\t\tif (lData.error)\r\n\t\t{\r\n\t\t\tDebug.error(lData.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttrace(lData.data);\r\n\t}\r\n\t\r\n\t\r\n\tpublic function start (): Void {\t\t\r\n\t\t//Localization.getInstance().selectJson(\"fr\");\r\n\r\n\t\t// Focus de la camera \r\n\t\tCamera.getInstance().init();\r\n\t\t\r\n\t\t// Event de souris mouseMove\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_MOVE, refreshMouseCoordinates);\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_UP, emitMouseUp);\r\n\r\n\t\t// Initialisation de l'isoManager\r\n\t\tIsoManager.init(Config.tileWidth, Config.tileHeight);\r\n\t\t\r\n\t\t// demande au Manager d'interface de se mettre en mode \"jeu\"\r\n\t\tUIManager.getInstance().startGame();\r\n\t\t\r\n\t\t// enregistre le GameManager en tant qu'écouteur de la gameloop principale\r\n\t\tMain.getInstance().on(EventType.GAME_LOOP, gameLoop);\t\r\n\t\t\r\n\t\t// début de l'initialisation du jeu\r\n\t\tCheatPanel.getInstance().ingame();\r\n\t\tGMapCreator.create();\r\n\t\t\r\n\t\t//Centre la caméra\r\n\t\t//Camera.getInstance().centerView();\r\n\t\t\r\n\t\t//Défini le screen rect\r\n\t\tscreenRect = DeviceCapabilities.getScreenRect(GameStage.getInstance().getGameContainer());\r\n\t\r\n\t\t//MapManagerTest clipping\r\n\t\tvar lTypeDefArray:Array<Dynamic> = new Array<Dynamic> ();\r\n\t\tvar ltd:TileModelDef = TypeDefUtils.tileModelDef;\r\n\t\tvar lbd:BuildingModelDef = TypeDefUtils.buildingModelDef;\r\n\t\tlTypeDefArray.push(ltd);\r\n\t\tlTypeDefArray.push(lbd);\r\n\t\t\t\r\n\t\t//initialise le clipping\r\n\t\tClippingManager.getInstance().setOn(GMap.globalMap, [cast(Tile.list), cast(Building.list)], new Point(Config.tileWidth / 2, Config.tileHeight / 2), lTypeDefArray, [Tile, Building], get_ScreenRect);\r\n\t\t\r\n\t\t/*\r\n\t\tvar lCitizen:Citizen = MapManagerTest Citizen();\r\n\t\tGameStage.getInstance().getGameContainer().addChild(lCitizen);\r\n\t\t\r\n\t\tlCitizen.start();*/\r\n\t\t\r\n\t\t//Localization.getInstance().getText(\"title_screen_play\");\r\n\t\tClippingManager.getInstance().addAllObjetInView();\r\n\t\t\r\n\t\tRessourceManager.getInstance().start();\r\n\t\tExperienceManager.getInstance().getLvl(Users.infos.experience);\r\n\t\t\r\n\t\t//var lTest:ConfirmPanel = MapManagerTest ConfirmPanel();\r\n\t\t//lTest.position.set(screenRect.x + 500, screenRect.y + 500);\r\n\t\t//GameStage.getInstance().getGameContainer().addChild(lTest);\r\n\t}\r\n\t\r\n\t/**\r\n\t * boucle de jeu (répétée à la cadence du jeu en fps)\r\n\t */\r\n\tpublic function gameLoop (pEvent:EventTarget): Void {\r\n\t\t\r\n\t\tBackgroundManager.getInstance().manage();\r\n\t\t\r\n\t\tscreenRect = DeviceCapabilities.getScreenRect(GameStage.getInstance().getGameContainer());\r\n\t\tscreenRect.x = Math.round(screenRect.x);\r\n\t\tscreenRect.y = Math.round(screenRect.y);\r\n\r\n\t\t// le renderer possède une propriété plugins qui contient une propriété interaction de type InteractionManager\r\n\t\t// les instances d'InteractionManager fournissent un certain nombre d'informations comme les coordonnées globales de la souris\r\n\t\t\r\n\t\tClippingManager.getInstance().manage();\r\n\t\t\r\n\t\tdoActions(cast Building.list);\r\n\t\t\r\n\t\t// Pour le debug :\r\n\t\t//GMap.displayTilePositionUnderMouse();\r\n\t\tmoveCitizen();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function doActions (list:Array<IStateMachine>) {\r\n\t\tfor (i in 0...list.length) list[i].doAction();\r\n\t}\r\n\t\t\r\n\tpublic function moveCitizen():Void {\r\n\t\tfor (lCitizen in Citizen.list) {\r\n\t\t\ttrace (lCitizen.destination);\r\n\t\t\tlCitizen.doAction();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tMain.getInstance().off(EventType.GAME_LOOP,gameLoop);\r\n\t\tinstance = null;\r\n\t}\r\n}","package com.isartdigital.builder.game.manager;\r\nimport com.isartdigital.builder.game.sprites.Background;\r\nimport com.isartdigital.builder.game.utils.CameraUtils;\r\nimport com.isartdigital.utils.game.GameStage;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass BackgroundManager \r\n{\r\n\t/**\r\n\t * instance unique de la classe BackgroundManager\r\n\t */\r\n\tprivate static var instance: BackgroundManager;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): BackgroundManager {\r\n\t\tif (instance == null) instance = new BackgroundManager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate var list:Array<Background> = new Array<Background> ();\r\n\t\r\n\tprivate static inline var numberBackground:Int = 15;\r\n\tprivate static inline var widthBackground:Int = 1024;\r\n\tprivate static inline var heightBackground:Int = 683;\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tfillList();\r\n\t}\r\n\t\r\n\tprivate function fillList () : Void {\r\n\t\tfor (i in 0...numberBackground) \r\n\t\t{\r\n\t\t\tfor (j in 0...numberBackground) {\r\n\t\t\t\tvar lBackground:Background = new Background();\r\n\t\t\t\tlBackground.start();\r\n\t\t\t\tGameStage.getInstance().getBackgroundContainer().addChild(lBackground);\r\n\t\t\t\r\n\t\t\t\tlBackground.x = - 7600 + j * widthBackground;\r\n\t\t\t\tlBackground.y = i * heightBackground;\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tlist.push(lBackground);\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function manage () {\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function getBackgroundOutOfScreen () : Array<Background> {\r\n\t\tvar lArray:Array<Background> = new Array <Background> ();\r\n\t\tfor (lBackground in list) {\r\n\t\t\tif (lBackground.x > CameraUtils.ScreenRight()) lArray.push(lBackground);\r\n\t\t\telse if (lBackground.y > CameraUtils.ScreenBottom()) lArray.push(lBackground);\r\n\t\t\telse if (lBackground.y + heightBackground < CameraUtils.ScreenTop()) lArray.push(lBackground);\r\n\t\t\telse if (lBackground.x + widthBackground < CameraUtils.ScreenLeft()) lArray.push(lBackground);\r\n\t\t}\r\n\t\treturn lArray;\r\n\t}\r\n\t\r\n\tpublic function scrollBackground():Void {\r\n\t\tfor (lBackground in getBackgroundOutOfScreen()) {\r\n\t\t\tlist[list.indexOf(lBackground)].destroy();\r\n\t\t\tlist.splice(list.indexOf(lBackground), 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.game.manager;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.sprites.buildings.BuildingDefinition;\r\nimport com.isartdigital.builder.game.sprites.buildings.BuildingUtils;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingDef;\r\nimport com.isartdigital.builder.game.def.PointDef;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.pooling.IPoolObject;\r\nimport com.isartdigital.builder.game.pooling.PoolObject;\r\nimport com.isartdigital.builder.game.sprites.buildings.Building;\r\nimport com.isartdigital.builder.game.sprites.Tile;\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.Debug;\r\nimport com.isartdigital.utils.game.CollisionManager;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport js.html.Rect;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Système de clipping d'objets\r\n * @author Flavien\r\n */\r\nclass ClippingManager\r\n{\r\n\tprivate static var Instance: ClippingManager = null;\r\n\t\r\n\tprivate static inline var SAFE_MARGE_VIEW:Float = 100;\r\n\tprivate static var SAFE_MARGE_MODEL:Float = 0;\r\n\t\r\n\tprivate static var RIGHT_DIRECTION:String = \"RIGHT\";\r\n\tprivate static var LEFT_DIRECTION:String = \"LEFT\";\r\n\tprivate static var DOWN_DIRECTION:String = \"DOWN\";\r\n\tprivate static var UP_DIRECTION:String = \"UP\";\r\n\t\r\n\tprivate var map:Map<Int, Map<Int, Array<Dynamic>>>;\r\n\tprivate var delta:Point = new Point();\r\n\tprivate var typeDefModels:Array<Dynamic> = new Array<Dynamic> ();\r\n\tprivate var classView:Array<Class<IPoolObject>> = new Array<Class<IPoolObject>> ();\r\n\tprivate var screenRectView:Void->Rectangle;\r\n\tprivate var objectListView:Array<Array<IPoolObject>> = new Array<Array<IPoolObject>>();\r\n\tprivate var screenRectModel:Rectangle;\r\n\t\r\n\tprivate var direction:String = \"UP\";\r\n\t\r\n\tprivate var clippingNeed:Point = new Point ();\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): ClippingManager {\r\n\t\tif (Instance == null) Instance = new ClippingManager();\r\n\t\treturn Instance;\r\n\t}\r\n\t\r\n\t//variable d'offset\r\n\tprivate var currentScreenPosition:Point = new Point();\r\n\tprivate var screenPosition:Point = new Point();\r\n\t\r\n\tprivate var TOP_RIGHT:Point = new Point();\r\n\tprivate var BOTTOM_LEFT:Point = new Point();\r\n\tprivate var BOTTOM_RIGHT:Point = new Point();\r\n\tprivate var BOTTOM_RIGHT_RIGHT:Point = new Point();\r\n\t\r\n\t\r\n\t\r\n\tprivate function new() \r\n\t{\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Configue le clipping.\r\n\t * les index de pBuilding doit correspondre aux index de pTypeDef\r\n\t * @param\tpMap MapManagerTest de Modèle\r\n\t * @param\tpDelta delta de clipping\r\n\t * @param\tpDef TypeDef du modèle\r\n\t * @param\tpBuilding Class de sortie qui implémente le pooling\r\n\t * @param\tpScreeRectRef getter du carré de référence\r\n\t */\r\n\tpublic function setOn(pMapModel:Map<Int, Map<Int, Array<Dynamic>>>, pListView:Array<Array<IPoolObject>>, pDelta:Point, pDef:Array<Dynamic>, pBuilding:Array<Class<IPoolObject>>, pScreeRectRef:Void->Rectangle) : Void\r\n\t{\r\n\t\tif (typeDefModels.length != pBuilding.length && pBuilding.length != pListView.length)\r\n\t\t{\r\n\t\t\tDebug.error(\"SetOn Clipping -> pBuilding & pDef doesn't have the same length\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t//TODO test pListView pareil que pBuilding\r\n\t\t\r\n\t\tmap = pMapModel;\r\n\t\tobjectListView = pListView;\r\n\t\tdelta = pDelta;\r\n\t\ttypeDefModels = pDef.copy();\r\n\t\tclassView = pBuilding.copy();\r\n\t\tscreenRectView = pScreeRectRef;\r\n\t\t//trace(\"set on \" + screenRectView().x);\r\n\t\tscreenPosition.set(screenRectView().x, screenRectView().y);\r\n\t\tSAFE_MARGE_MODEL = Math.round(SAFE_MARGE_VIEW / Config.tileHeight);\r\n\t\tSAFE_MARGE_MODEL = Math.round(SAFE_MARGE_VIEW / Config.tileHeight);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Fais le taff\r\n\t */\r\n\tpublic function manage () : Void\r\n\t{\r\n\t\tif (!hadToManage()) return;\r\n\t\t//Debug.info(\"Number of Tile : \" + Tile.list.length);\r\n\t\tremoveObject();\r\n\t\t//Debug.info(\"Number of Tile after remove : \" + Tile.list.length);\r\n\t\t//addAllObjetInView();\r\n\t\tif (clippingNeed.x > 10 || clippingNeed.y > 10) addAllObjetInView();\r\n\t\telse addObject();\r\n\t\t\r\n\t\tIsoManager.sortAll();\t\r\n\t}\r\n\t\r\n\tpublic function addAllObjetInView():Void {\r\n\t\tsetScreenRectModel();\r\n\t\tcreateObjFromModel(getAllRow());\r\n\t}\r\n\t\r\n\tprivate function addObject ():Void {\r\n\t\tsetScreenRectModel();\r\n\t\t\r\n\t\tvar lArray:Array<Dynamic> = new Array<Dynamic> ();\r\n\t\tif (direction == UP_DIRECTION) lArray = getRow(TOP_RIGHT, direction);\r\n\t\telse if (direction == DOWN_DIRECTION) lArray = getRow(BOTTOM_RIGHT, direction);\r\n\t\telse if (direction == LEFT_DIRECTION) lArray = getCol(BOTTOM_LEFT, direction);\r\n\t\telse if (direction == RIGHT_DIRECTION) lArray = getCol(BOTTOM_RIGHT_RIGHT, direction);\r\n\t\t\r\n\t\tcreateObjFromModel(lArray);\r\n\t}\r\n\t\r\n\tprivate function createObjFromModel (pArray:Array<Dynamic>): Void {\r\n\t\tfor (lModel in pArray) {\r\n\t\t\t\r\n\t\t\tvar i:Int = typeDefModels.length;\r\n\t\t\t\r\n\t\t\twhile (--i >= 0) {\r\n\t\t\t\t\r\n\t\t\t\tif (Reflect.field(lModel, \"type\") == ModelElementNames.BUILDING) {\r\n\t\t\t\t\tif (!BuildingUtils.isBuildingOriginInGlobalMapAt(new Point(lModel.x, lModel.y))) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//continue;\r\n\t\t\t\t\tif (lModel.name == null) throw 'ClippingManager :: Building name is null';\r\n\t\t\t\t\tif (modelExist(cast(Building.list), lModel)) continue;\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar buildingDef:BuildingDef = BuildingDefinition.getByName(lModel.name);\r\n\t\t\t\t\tvar lObj:IPoolObject = PoolObject.create(Type.resolveClass(\"com.isartdigital.builder.game.sprites.buildings.Building\"));\r\n\t\t\t\t\tlObj.init(lModel);\r\n\t\t\t\t} else if (Reflect.field(lModel, \"type\") == ModelElementNames.TILE) {\r\n\t\t\t\t\tif (modelExist(cast(Tile.list), lModel)) continue;\r\n\t\t\t\t\tvar lObj:IPoolObject = PoolObject.create(Tile);\r\n\t\t\t\t\tlObj.init(lModel);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function modelExist(pList:Array<IPoolObject>, pModel:Dynamic) : Bool {\r\n\t\tfor (lObj in pList) {\r\n\t\t\tif (IsoManager.isoViewToModel(lObj.position).x != Reflect.getProperty(pModel, \"x\")) continue;\r\n\t\t\tif (IsoManager.isoViewToModel(lObj.position).y != Reflect.getProperty(pModel, \"y\")) continue;\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate function getAllRow () :Array<Dynamic> {\r\n\t\tvar lArray:Array<Dynamic> = new Array<Dynamic>();\r\n\t\t\r\n\t\tvar lPosition:Point = new Point();\r\n\t\t\r\n\t\tvar it:Float = screenRectModel.height * 2 + 10;\r\n\t\twhile (it-- >= 0)\r\n\t\t{\r\n\t\t\tlPosition.set(BOTTOM_RIGHT.x + 2 - Math.ceil(it/ 2) + it % 2, BOTTOM_RIGHT.y + 2 - Math.ceil(it/ 2));\r\n\t\t\t\r\n\t\t\tfor (i in 0...cast(screenRectModel.width + 5)) {\t\t\t\r\n\t\t\t\tlArray = lArray.concat(getObjInPosition(map, lPosition));\r\n\t\t\t\tshiftPosition(lPosition, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn lArray;\r\n\t}\r\n\t\r\n\tprivate function getObjInPosition (pMap:Map<Int, Map<Int, Array<Dynamic>>>, pPosition:Point)\r\n\t{\r\n\t\tvar lArray:Array<Dynamic> = new Array<Dynamic>();\r\n\t\tif (GMap.isPositionExistAt(pPosition, pMap))\r\n\t\t{\t\t\t\t\r\n\t\t\tfor (lObj in pMap[Std.int(pPosition.x)].get(Std.int(pPosition.y)))\r\n\t\t\t{\r\n\t\t\t\tlArray.push(lObj);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn lArray;\r\n\t}\r\n\t\r\n\tprivate function getCol (pStartPosition:Point, pDirection:String) : Array<Dynamic> {\r\n\t\tvar lArray:Array<Dynamic> = new Array<Dynamic> ();\r\n\t\t\r\n\t\tvar lPosition:Point = new Point(pStartPosition.x, pStartPosition.y);\r\n\t\t\r\n\t\twhile (clippingNeed.x-- >= 0) {\r\n\t\t\tfor (i in 0...cast(screenRectModel.height + 5)) {\t\t\t\r\n\t\t\t\tlArray = lArray.concat(getObjInPosition(map, lPosition));\r\n\t\t\t\tshiftPosition(lPosition, true);\r\n\t\t\t}\r\n\t\t\tpDirection == RIGHT_DIRECTION ? pStartPosition.x-- : pStartPosition.x++;\r\n\t\t\tlPosition.set(pStartPosition.x, pStartPosition.y);\r\n\t\t}\r\n\t\t\r\n\t\treturn lArray;\r\n\t}\r\n\t\r\n\tprivate function getRow (pStartPosition:Point, pDirection:String) : Array<Dynamic> {\r\n\t\tvar lArray:Array<Dynamic> = new Array<Dynamic> ();\r\n\t\t\r\n\t\tvar lPosition:Point = new Point(pStartPosition.x, pStartPosition.y);\r\n\t\t\r\n\t\twhile (clippingNeed.y-- >= 0) {\r\n\t\t\tfor (i in 0...cast(screenRectModel.width + 5)) {\t\t\t\r\n\t\t\t\tlArray = lArray.concat(getObjInPosition(map, lPosition));\r\n\t\t\t\tshiftPosition(lPosition, false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tpDirection == DOWN_DIRECTION ? pStartPosition.y++ : pStartPosition.y--;\r\n\t\t\tlPosition.set(pStartPosition.x, pStartPosition.y);\r\n\t\t}\r\n\t\t\r\n\t\treturn lArray;\r\n\t}\r\n\t\r\n\tprivate function shiftPosition(pPoint:Point, pVertical:Bool) : Void\r\n\t{\r\n\t\tpPoint.x--;\r\n\t\tpVertical ? pPoint.y-- : pPoint.y++;\r\n\t}\r\n\t\r\n\tprivate function setScreenRectModel ():Void {\r\n\t\t//var lPosition:Point = IsoManager.isoViewToModel(MapManagerTest Point(screenRectView().x - SAFE_MARGE_MODEL, screenRectView().y - SAFE_MARGE_MODEL));\r\n\t\t\r\n\t\tvar lPosition:Point = IsoManager.isoViewToModel(new Point(screenRectView().x, screenRectView().y));\r\n\t\t\r\n\t\t//var lSize:Point = MapManagerTest Point(Math.round(screenRectView().width / Config.tileWidth) + SAFE_MARGE_MODEL * 2, Math.round(screenRectView().height / Config.tileWidth) + SAFE_MARGE_MODEL * 2);\r\n\t\t\r\n\t\tvar lSize:Point = new Point(Math.round(screenRectView().width / Config.tileWidth), Math.round(screenRectView().height / Config.tileHeight));\r\n\t\t\r\n\t\tscreenRectModel = new Rectangle(lPosition.x, lPosition.y, lSize.x, lSize.y);\r\n\t\t\r\n\t\tTOP_RIGHT.set(Math.round(screenRectView().x + screenRectView().width), Math.round(screenRectView().y));\r\n\t\tTOP_RIGHT = IsoManager.isoViewToModel(TOP_RIGHT);\r\n\t\t\r\n\t\tBOTTOM_LEFT.set(Math.round(screenRectView().x - SAFE_MARGE_VIEW * 1.5), Math.round(screenRectView().y + screenRectView().height + SAFE_MARGE_VIEW));\r\n\t\tBOTTOM_LEFT = IsoManager.isoViewToModel(BOTTOM_LEFT);\r\n\t\t\r\n\t\tBOTTOM_RIGHT.set(Math.round(screenRectView().x + screenRectView().width), Math.round(screenRectView().y + screenRectView().height) + SAFE_MARGE_VIEW / 2 );\t\t\t\r\n\t\tBOTTOM_RIGHT = IsoManager.isoViewToModel(BOTTOM_RIGHT);\r\n\r\n\t\tBOTTOM_RIGHT_RIGHT.set(Math.round(screenRectView().x + screenRectView().width + SAFE_MARGE_VIEW * 1.5), Math.round(screenRectView().y + screenRectView().height + SAFE_MARGE_VIEW ));\r\n\t\tBOTTOM_RIGHT_RIGHT = IsoManager.isoViewToModel(BOTTOM_RIGHT_RIGHT);\r\n\t}\r\n\t\r\n\tprivate function removeObject (): Void\r\n\t{\r\n\t\tfor (lArray in objectListView)\r\n\t\t{\r\n\t\t\tremoveInList(lArray);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function removeInList (pList:Array<IPoolObject>):Void\r\n\t{\r\n\t\tvar i:Int = pList.length;\r\n\t\twhile (i-- > 0)\r\n\t\t{\r\n\t\t\tvar lRect:Rectangle = new Rectangle(pList[i].x, pList[i].y, pList[i].width, pList[i].height);\r\n\t\t\tif (!rectIsInRect(screenRectView(), lRect)) pList[i].remove();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function rectIsInRect(pBase:Rectangle, pRect:Rectangle) : Bool\r\n\t{\r\n\t\t\r\n\t\tif (pBase.contains(pRect.x, pRect.y)) return true;\t\r\n\t\tif (pBase.contains(pRect.x, pRect.y + pRect.height)) return true;\t\r\n\t\tif (pBase.contains(pRect.x + pRect.width, pRect.y)) return true;\t\r\n\t\tif (pBase.contains(pRect.x - pRect.width, pRect.y)) return true;\t\r\n\t\tif (pBase.contains(pRect.x, pRect.y - pRect.height)) return true;\r\n\t\tif (pBase.contains(pRect.x, pRect.y + pRect.height)) return true;\r\n\t\t\r\n\t\t\r\n\t\t/*var lPoint:Point = MapManagerTest Point(pBase.x + pBase.width / 2, pBase.y + pBase.height / 2);\r\n\t\t\r\n\t\ttrace(distBetween(MapManagerTest Point (pRect.x, pRect.y), lPoint));\r\n\t\t\r\n\t\treturn (distBetween(MapManagerTest Point (pRect.x, pRect.y), lPoint) < pBase.width);\r\n\t\t*/\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tprivate function distBetween(pPointA:Point, pPointB:Point) : Float\r\n\t{\r\n\t\treturn Math.sqrt(Math.pow(pPointB.x - pPointA.x, 2) - Math.pow(pPointB.y - pPointA.y, 2));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Renvoie true si le dernier manage était assez loin\r\n\t * @return\r\n\t */\r\n\tprivate function hadToManage () : Bool\r\n\t{\r\n\t\tcurrentScreenPosition.set(screenRectView().x, screenRectView().y);\r\n\t\t\r\n\t\tif (Math.abs(currentScreenPosition.x - screenPosition.x) > delta.x)\r\n\t\t{\r\n\t\t\tdirection = currentScreenPosition.x - screenPosition.x > 0 ? RIGHT_DIRECTION : LEFT_DIRECTION;\r\n\t\t\tclippingNeed.x = Math.ceil(Math.abs(currentScreenPosition.x - screenPosition.x) / delta.x);\r\n\t\t\tscreenPosition.x = screenRectView().x;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\tif (Math.abs(currentScreenPosition.y - screenPosition.y) > delta.y)\r\n\t\t{\r\n\t\t\tdirection = currentScreenPosition.y - screenPosition.y > 0 ? DOWN_DIRECTION : UP_DIRECTION;\r\n\t\t\tclippingNeed.y = Math.ceil(Math.abs(currentScreenPosition.y - screenPosition.y) / delta.y);\r\n\t\t\tscreenPosition.y = screenRectView().y;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n}","package com.isartdigital.builder.game.manager;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass Manager \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Manager\r\n\t */\r\n\tprivate static var instance: Manager;\r\n\t\r\n\tpublic var list:Array<Dynamic>;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Manager {\r\n\t\tif (instance == null) instance = new Manager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.game.manager;\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.api.Utils;\r\nimport haxe.Json;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Thorcal\r\n */\r\nclass ExperienceManager extends Manager \r\n{\r\n\tpublic var levelsArray:Array<Int> = new Array<Int>();\r\n\tpublic var lvlUser:Int;\r\n\tpublic var XPToNextLvl:Int;\r\n\t/**\r\n\t * instance unique de la classe ExperienceManager\r\n\t */\r\n\tprivate static var instance: ExperienceManager;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): ExperienceManager {\r\n\t\tif (instance == null) instance = new ExperienceManager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tlvlUser = 0;\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setDataXP(pData:Array<String>) : Void {\r\n\t\tlevelsArray = Reflect.field(pData, \"levels\");\r\n\t}\r\n\t\r\n\tpublic function getLvl(pExp:Float):Void {\r\n\t\t\r\n\t\tvar prettyExp:Int = Math.round(pExp);\r\n\t\t\r\n\t\t//trace (\"prettyExp :\" + prettyExp);\r\n\t\t\r\n\t\tfor (number in levelsArray) {\r\n\t\t\t//trace(number);\r\n\t\t\tif (prettyExp > cast(number)) {\r\n\t\t\t\tlvlUser++;\r\n\t\t\t}else {\r\n\t\t\t\tXPToNextLvl =  number - prettyExp;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.game.manager;\r\nimport pathfinder.IMap;\r\n\r\n/**\r\n * ...\r\n * @author Thorcal\t\r\n */\r\nclass Maps implements IMap\r\n{\r\n    public var rows( default, null ):Int;\r\n    public var cols( default, null ):Int;\r\n\r\n    public function new( p_cols:Int, p_rows:Int )\r\n    {\r\n        cols = p_cols;\r\n        rows = p_rows;\r\n        // create an array of tiles, and determine if they are walkable or obstructed\r\n    }\r\n\r\n    public function isWalkable( p_x:Int, p_y:Int ):Bool\r\n    {\r\n        return true;\r\n    }\r\n}","package com.isartdigital.builder.game.manager;\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.api.Resources;\r\nimport com.isartdigital.builder.api.User;\r\nimport com.isartdigital.services.Users;\r\nimport com.isartdigital.builder.api.Utils;\r\nimport com.isartdigital.builder.game.def.ResourceDef;\r\nimport com.isartdigital.builder.ui.hud.SpiceCurrency;\r\nimport haxe.Json;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Thorcal\r\n */\r\nclass RessourceManager extends Manager \r\n{\r\n\tpublic static inline var GOLD:String = 'gold';\r\n\tpublic static inline var OFFERING:String = 'offering';\r\n\tpublic static inline var SPICE:String = 'spice';\r\n\t\r\n\tpublic var ressources:ResourceDef;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe RessourceManager\r\n\t */\r\n\tprivate static var instance: RessourceManager;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): RessourceManager {\r\n\t\tif (instance == null) instance = new RessourceManager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\tpublic function start():Void {\r\n\t\tressources = Users.infos.resources;\r\n\t\tupdateRessourcesInHud(ressources);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Renvoie le nombre de ressource pour la ressource donnée en parametre\r\n\t * @param\tpRessource\r\n\t */\r\n\tpublic function getRessources(pRessource:String):Int {\r\n\t\treturn Reflect.field(ressources, pRessource);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ajoute pNumber à pRessource\r\n\t * @param\tpRessource\r\n\t * @param\tpNumber\r\n\t */\r\n\tpublic function addRessources(pRessource:String, pNumber:Int):Void {\r\n\t\tReflect.setField(ressources, pRessource, getRessources(pRessource) + pNumber);\r\n\t\tupdateRessourcesInHud(ressources);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retire pNumber à pRessource\r\n\t * @param\tpRessource\r\n\t * @param\tpNumber\r\n\t */\r\n\tpublic function removeRessources(pRessource:String, pNumber:Int):Bool {\r\n\t\tif (getRessources(pRessource) - pNumber > 0) {\r\n\t\t\tReflect.setField(ressources, pRessource, getRessources(pRessource) - pNumber);\r\n\t\t}else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tupdateRessourcesInHud(ressources);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic var updateSpice:Int->Void;\r\n\tpublic var updateGold:Int->Void;\r\n\tpublic var updateOfferings:Int->Void;\r\n\t\r\n\tpublic function updateRessourcesInHud(lResource:ResourceDef) {\r\n\t\tressources = lResource;\r\n\t\tupdateGold(lResource.gold);\r\n\t\tupdateSpice(lResource.spice);\r\n\t\tupdateOfferings(lResource.offering);\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.game.map;\r\n\r\nimport pixi.core.math.Point;\r\nimport com.isartdigital.builder.game.def.SizeDef;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\n\r\n\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass GMap\r\n{\r\n\tpublic static var globalMap:Map<Int, Map<Int, Array<Dynamic>>> = new Map<Int, Map<Int, Array<Dynamic>>> ();\r\n\t\r\n\t/**\r\n\t * Test si il y a un element dans la globalMap à la position donné\r\n\t * @param\tx\r\n\t * @param\ty\r\n\t * @return boolean\r\n\t */\r\n\tpublic static function isPositionExistAt(position:Point, map:Map<Int, Map<Int, Array<Dynamic>>>):Bool {\r\n\t\tif (map.exists(Std.int(position.x))) {\r\n\t\t\tif (map[Std.int(position.x)].exists(Std.int(position.y))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Si il y a un element à la position donné grâce à son type\r\n\t * @param\tposition de l'element\r\n\t * @param\telement à récuperer\r\n\t */\r\n\tpublic static function isElementTypeAt(position:Point, type:String):Dynamic {\r\n\t\tvar thereIsElement:Bool;\r\n\r\n\t\ttry {\r\n\t\t\tgetElementByTypeAt(position, type);\r\n\t\t\tthereIsElement = true;\r\n\t\t} catch (e:String) {\r\n\t\t\tthereIsElement = false;\r\n\t\t}\r\n\r\n\t\treturn thereIsElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Récupère un element dans la global map à une position grâce à son type\r\n\t * @param\tposition de l'element\r\n\t * @param\telement à récuperer\r\n\t */\r\n\tpublic static function getElementByTypeAt(position:Point, type:String):Dynamic {\r\n\t\tvar elements:Array<Dynamic> = globalMap[Std.int(position.x)][Std.int(position.y)];\r\n\t\tif (!isInsideGrid(Std.int(position.x), Std.int(position.y))) {\r\n\t\t\tthrow 'Position is outside map';\r\n\t\t}\r\n\r\n\t\treturn getElementByTypeInArray(elements, type);\r\n\t}\r\n\r\n\t/**\r\n\t * Ajoute un element dans la globalMap grâce à sa position\r\n\t * @param\tposition dans la map\r\n\t * @param\telement à ajouter\r\n\t */\r\n\tpublic static function addElementAt(position:Point, element:Dynamic):Void {\r\n\t\tvar elements:Array<Dynamic> = globalMap[Std.int(position.x)][Std.int(position.y)];\r\n\t\telements.push(element);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Enlève un element de la map grâce à sa position et son type puis return l'element enlevé\r\n\t * @param\tposition dans la map de l'element à enlever\r\n\t * @param\ttype de l'element à enlever\r\n\t * @return Renvoi l'element enlevé\r\n\t */\r\n\tpublic static function removeElementByTypeAt(position:Point, type:String):Dynamic {\r\n\t\tvar elements:Array<Dynamic> = globalMap[Std.int(position.x)][Std.int(position.y)];\r\n\t\tvar elementRemoved:Dynamic;\r\n\t\t\r\n\t\tfor (i in 0...elements.length) {\r\n\t\t\tif (elements[i].type == type) {\r\n\t\t\t\telementRemoved = elements.splice(i, 1);\r\n\t\t\t\treturn elementRemoved[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthrow 'typedef was not found in elements array';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère un element dans un array grâce à son type\r\n\t * @param\ttype type de l'element à comparer\r\n\t * @return Renvoie l'element trouvé, si il le trouve pas, rnevoi null\r\n\t */\r\n\tpublic static function getElementByTypeInArray(elements:Array<Dynamic>, type:String):Dynamic {\r\n\t\tfor (i in 0...elements.length) {\r\n\t\t\tif (elements[i].type == type) {\r\n\t\t\t\treturn elements[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthrow 'getElementByTypeInArray : Element type was not found in elements list';\r\n\t}\r\n\r\n\t/**\r\n\t * Récupère un array d'array grâce au size\r\n\t */\r\n\tpublic static function getElementsBySizeAt(position:Point, size:SizeDef):Array<Array <Dynamic>> {\r\n\t\tvar elementsBunch:Array<Array <Dynamic>> = [];\r\n\t\tvar xIndex:Int;\r\n\t\tvar yIndex:Int;\r\n\r\n\t\tfor (x in 0...size.width) {\r\n\t\t\tfor (y in 0...size.height) {\r\n\t\t\t\txIndex = Std.int(position.x) - x;\r\n\t\t\t\tyIndex = Std.int(position.y) - y;\r\n\r\n\t\t\t\tif (isInsideGrid(xIndex, yIndex)) {\r\n\t\t\t\t\telementsBunch.push(globalMap[xIndex][yIndex]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow 'getArraysElementsBySizeAt :: Element you want to retrieve is outside of the map';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn elementsBunch;\r\n\t}\r\n\r\n\t/**\r\n\t * Ajoute un element dans la globalMap grâce à sa position\r\n\t * @param\tposition dans la map\r\n\t * @param\telement à ajouter\r\n\t */\r\n\tpublic static function addElementsBySizeAt(position:Point, size:SizeDef, element:Dynamic):Void {\r\n\t\tvar elementsBunch:Array< Array<Dynamic>> = getElementsBySizeAt(position, size);\r\n\t\tvar elements:Array<Dynamic>;\r\n\r\n\t\tfor (i in 0...elementsBunch.length) {\r\n\t\t\telements = elementsBunch[i];\r\n\t\t\telements.push(element);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ajoute un element dans la globalMap grâce à sa position\r\n\t * @param\tposition dans la map\r\n\t * @param\telement à ajouter\r\n\t */\r\n\tpublic static function removeElementsBySizeAndTypeAt(position:Point, size:SizeDef, type:String):Void {\r\n\t\tvar xPositionWithOffset:Int;\r\n\t\tvar yPositionWthOffset:Int;\r\n\t\t\r\n\t\tfor (x in 0...size.width) {\r\n\t\t\tfor (y in 0...size.height) {\r\n\t\t\t\txPositionWithOffset = Std.int(position.x - x);\r\n\t\t\t\tyPositionWthOffset = Std.int(position.y - y);\r\n\t\t\t\t\r\n\t\t\t\tremoveElementByTypeAt(new Point(xPositionWithOffset, yPositionWthOffset), type);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Indique si la position est hors de la grille ou à l'interieur\r\n\t * @return\r\n\t */\r\n\tpublic static function isInsideGrid(pX:Int, pY:Int):Bool {\r\n\t\tif (pX >= 0 &&\r\n\t\t\tpY >= 0 &&\r\n\t\t\tpX < Config.mapSize &&\r\n\t\t\tpY < Config.mapSize) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * /!\\ fonction de debuggage\r\n\t * Affiche la position de la tile sous la souris\r\n\t */\r\n\tpublic static function displayTilePositionUnderMouse() {\r\n\t\tvar lPosition:Point = IsoManager.isoViewToModel(GameManager.getInstance().mousePosition);\r\n\r\n\t\t//if (Math.floor(Math.random() * 25) == 0) trace(\"mouse\" + GameManager.getInstance().mousePosition);\r\n\t\tif (Math.floor(Math.random() * 10) == 0) trace(\"x : \" + lPosition.x + \" y : \" + lPosition.y);\r\n\t}\r\n}","package com.isartdigital.builder.game.map;\n\nimport com.isartdigital.builder.game.sprites.buildings.BuildingDefinition;\nimport pixi.core.math.Point;\nimport com.isartdigital.builder.game.def.LanternDef;\nimport com.isartdigital.builder.game.sprites.Tile;\nimport com.isartdigital.builder.game.utils.TypeDefUtils;\nimport com.isartdigital.builder.game.type.JsonNames;\nimport com.isartdigital.utils.loader.GameLoader;\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingDef;\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\nimport com.isartdigital.services.Users;\nimport com.isartdigital.builder.game.map.GMap;\nimport com.isartdigital.builder.game.type.ModelElementNames;\nimport com.isartdigital.utils.Config;\nimport com.isartdigital.builder.game.def.TileModelDef;\n\nclass GMapCreator {\n    /**\n\t * Charge la map à partir du User.info récupéré sur le serveur\n\t * @return Success ou fail\n\t */\n    public static function create():Void {\n        insertTilesInto(GMap.globalMap);\n        insertLanternsInto(GMap.globalMap);\n        illuminateLanterns();\n        insertBuildingsInto(GMap.globalMap);\n    }\n\n    /**\n\t * Insert les tiles dans la map passé en paramètre\n\t * @param\tmap<Map<Int<Array<Dynamic>>>\n\t */\n    private static function insertTilesInto(map:Map<Int, Map<Int, Array<Dynamic>>>):Void {\n        var tilePosition:String;\n        var tileSaved:TileModelDef;\n\n        for (i in 0...Config.mapSize) {\n            for (j in 0...Config.mapSize) {\n                tileSaved = {\n                    type: ModelElementNames.TILE,\n                    x: i,\n                    y: j,\n                    isBuildable: false,\n                    isIlluminated: false,\n                    alpha: 1\n                };\n\n                if (!GMap.isPositionExistAt(new Point(i, j), map)) {\n                    if (!map.exists(i)) {\n                        map[i] = new Map<Int, Array<Dynamic>> ();\n                    }\n                    map[i][j] = new Array<Dynamic>();\n                }\n\n                map[i][j].push(tileSaved);\n            }\n        }\n    }\n\n    /**\n\t * Insert les building dans la map passé en paramètre\n\t * @param\tmap<MapManagerTest<Int<Array<Dynamic>>>\n\t */\n    private static function insertBuildingsInto(map:Map<Int, Map<Int, Array<Dynamic>>>):Void {\n        var buildings = Users.infos.buildings;\n        var buildingModel:BuildingModelDef;\n        var buildingDef:BuildingDef;\n\t\t\n        for (i in 0...buildings.length) {\n            buildingModel = buildings[i];\n\t\t\tbuildingDef = BuildingDefinition.getByName(buildingModel.name);\n            buildingModel.type = ModelElementNames.BUILDING;\n            buildingModel.buildingLevel = 0; // Enlever d'ici et mettre une sécurité dans building\n            buildingModel.x = Std.int(buildingModel.x);\n            buildingModel.y = Std.int(buildingModel.y);\n\n            if (GMap.isPositionExistAt(new Point(buildingModel.x, buildingModel.y), map)) {\n\t\t\t\tGMap.addElementsBySizeAt(new Point(buildingModel.x, buildingModel.y), buildingDef.size, buildingModel);\n            }\n        }\n    }\n\n    /**\n\t * Insert les lanterns dans la map passé en paramètre\n\t * @param\tmap<MapManagerTest<Int<Array<Dynamic>>>\n\t */\n    private static function insertLanternsInto(map:Map<Int, Map<Int, Array<Dynamic>>>):Void {\n        var lanterns:Array<Point> = cast GameLoader.getContent(JsonNames.LANTERN_PLACEMENT);\n        var lanternPosition:Point;\n        var buildingModel:BuildingModelDef;\n\n        for (i in 0...lanterns.length) {\n            lanternPosition = lanterns[i];\n            buildingModel =  cast TypeDefUtils.cloneObject(TypeDefUtils.buildingModelDef);\n            buildingModel.name = \"lantern\";\n            buildingModel.type = ModelElementNames.BUILDING;\n            buildingModel.x = Std.int(lanternPosition.x);\n            buildingModel.y = Std.int(lanternPosition.y);\n            buildingModel.buildingLevel = isLanternActiveAt(lanternPosition) ? 1 : 0;\n\n            if (GMap.isPositionExistAt(new Point(buildingModel.x, buildingModel.y), map)) {\n                map[buildingModel.x][buildingModel.y].push(buildingModel);\n            }\n        }\n    }\n\n    /**\n\t * Illumine toutes les lanterns\n\t */\n    public static function illuminateLanterns():Void {\n        var lanterns:Array<Point> = cast GameLoader.getContent(JsonNames.LANTERN_PLACEMENT);\n        var lanternPosition:Point;\n\n        for (i in 0...lanterns.length) {\n            lanternPosition = lanterns[i];\n            if (isLanternActiveAt(lanternPosition)) {\n                Tile.illumineTileInRadiusAt(lanternPosition, getLanternActionRadius());\n            }\n        }\n    }\n\n    private static function getLanternActionRadius():Int {\n        var buildingSettings:Dynamic = cast GameLoader.getContent(JsonNames.BUILDINGS_SETTINGS);\n        var lanternSetting:Dynamic = Reflect.field(buildingSettings, \"lanterns\");\n        return cast Reflect.field(lanternSetting, \"action_radius\");\n    }\n\n    /**\n\t * Permet de savoir si une lanterne est active à un endroit donnée\n\t * @param\tposition\n\t * @return\n\t */\n    private static function isLanternActiveAt(position:Point):Bool {\n        var lanterns:Array<LanternDef>;\n        var lantern:LanternDef;\n\n        lanterns = Users.infos.lanterns;\n\n        for (i in 0...lanterns.length) {\n            lantern = lanterns[i];\n            if (lantern.x == position.x  && lantern.y == position.y) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","package com.isartdigital.builder.game.pooling;\r\nimport com.isartdigital.utils.Debug;\r\n\r\n//Deuxième itération du système de pooling\r\n/**\r\n * Système de Pooling\r\n * @author Flavien \r\n */\r\nclass PoolObject\r\n{\r\n\t/**\r\n\t * MapManagerTest de liste de pooling\r\n\t */\r\n\tprivate static var poolList:Map<String, Array<Dynamic>> = new Map<String, Array<Dynamic>> ();\r\n\t\r\n\t/**\r\n\t * Nombre d'objet créé si une liste est vide\r\n\t */\r\n\tprivate static inline var objectMarge:Int = 10;\r\n\t\r\n\t/**\r\n\t * Nombre d'objet maximum dans une liste\r\n\t */\r\n\tprivate static inline var objectListLimit:Int = 1000;\r\n\t\r\n\t/**\r\n\t * Donne instance de pClass depuis une poolList\r\n\t * @param\tpClass la classe de l'objet a instancié\r\n\t * @return une instance de pClass\r\n\t */\r\n\tpublic static function create (pClass:Class<Dynamic>) : Dynamic\r\n\t{\r\n\t\tvar lName:String = Type.getClassName(pClass);\r\n\t\t\r\n\t\tif (!poolList.exists(lName)) createPoolList(pClass);\r\n\t\t\r\n\t\tif (poolList.get(lName).length == 0) addObjectToPoolList(lName, pClass);\r\n\t\t\r\n\t\treturn poolList.get(lName).shift();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ajoute un Object a une poolList\r\n\t * @param\tpObject\r\n\t * @return false si l'objet ne peux pas être ajouté à une liste\r\n\t */\r\n\tpublic static function addPool(pObject:Dynamic) : Bool\r\n\t{\r\n\t\tvar lName:String = Type.getClassName(Type.getClass(pObject));\r\n\t\t\r\n\t\tif (!poolList.exists(lName)) return false;\r\n\t\t\r\n\t\tif (poolList.get(lName).length > objectListLimit) return false;\r\n\t\t\r\n\t\tpoolList.get(lName).push(pObject);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Crée une liste de pooling de la classe pClass\r\n\t * @param\tpClass\r\n\t */\r\n\tpublic static function createPoolList (pClass:Class<Dynamic>)\r\n\t{\r\n\t\tvar lName:String = Type.getClassName(pClass);\r\n\t\tpoolList.set(lName, new Array<Dynamic>());\r\n\t\taddObjectToPoolList(lName, pClass);\r\n\t}\r\n\t\r\n\t/**\r\n\t * ajoute des objets à une liste de pooling\r\n\t * @param\tpName\r\n\t * @param\tpClass\r\n\t */\r\n\tprivate static function addObjectToPoolList (pName:String, pClass:Class<Dynamic>)\r\n\t{\r\n\t\tfor (i in 0...objectMarge) \r\n\t\t{\r\n\t\t\tvar lObject:Dynamic = Type.createInstance(pClass, []);\r\n\t\t\tpoolList.get(pName).push(Type.createInstance(pClass, []));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game;\r\n\r\nimport com.isartdigital.utils.events.EventType;\r\nimport pixi.core.display.Container;\r\n\r\n/**\r\n * Classe de base des objets interactifs dans le jeu\r\n * Met à jour automatiquement ses données internes de position et transformation\r\n * \r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GameObject extends Container\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\ton(EventType.ADDED, forceUpdateTransform);\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Force la mise à jour de la matrices de transformation des éléments constituant le GameObject\r\n\t */\r\n\tprivate function forceUpdateTransform (): Void {\r\n\t\t//untyped updateTransform();\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoie et détruit l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\toff(EventType.ADDED, forceUpdateTransform);\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game;\r\nimport pixi.core.display.Container;\r\n\r\n/**\r\n * Implémentation de base d'une Machine à état\r\n * expose de façon publique sa méthode doAction qui peut faire référence à différentes méthodes prévues (doActionVoid, doActionNormal) ou spécifiques définies par ses classes filles\r\n * Par convention le changement de référence de doAction se fait via des méthodes setMode (setModeVoid, setModeAction) qui peuvent aussi contenir des paramètres d'initialisation\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass StateMachine extends GameObject implements IStateMachine \r\n{\r\n\t\r\n\t/**\r\n\t * méthode appelée à chaque gameLoop. Elle peut faire référence à différentes méthodes au cours du temps\r\n\t */\r\n\tpublic var doAction:Void->Void;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tsetModeVoid();\t\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * applique le mode \"ne fait rien\"\r\n\t */\r\n\tprivate function setModeVoid (): Void {\r\n\t\tdoAction = doActionVoid;\r\n\t}\r\n\t\r\n\t/**\r\n\t * fonction vide destinée à maintenir la référence de doAction sans rien faire\r\n\t */\r\n\tprivate function doActionVoid (): Void {}\r\n\r\n\t\r\n\t/**\r\n\t * applique le mode normal (mode par defaut)\r\n\t */\r\n\tprivate function setModeNormal(): Void {\r\n\t\tdoAction = doActionNormal;\r\n\t}\r\n\t\r\n\t/**\r\n\t * fonction destinée à appliquer un comportement par defaut\r\n\t */\r\n\tprivate function doActionNormal (): Void {}\r\n\t\r\n\t/**\r\n\t * Activation\r\n\t */\r\n\tpublic function start (): Void {\r\n\t\tsetModeNormal();\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoie et détruit l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tsetModeVoid();\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game;\r\n\r\nimport com.isartdigital.utils.game.factory.AnimFactory;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport haxe.Json;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Circle;\r\nimport pixi.core.math.shapes.Ellipse;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.extras.MovieClip;\r\n\r\n/**\r\n * Classe de base des objets interactifs ayant plusieurs états graphiques\r\n * Gère la représentation graphique (anim) et les conteneurs utiles au gamePlay (box) qui peuvent être de simples boites de collision ou beaucoup plus\r\n * suivant l'implémentation faite par le développeur dans les classes filles\r\n * @author Mathieu ANTHOINE\r\n * @version 0.11.0\r\n */\r\nclass StateGraphic extends StateMachine\r\n{\r\n\r\n\t/**\r\n\t * Fabrique d'anim\r\n\t */\r\n\tprivate var factory:AnimFactory;\r\n\r\n\t \r\n\t/**\r\n\t * anim de l'état courant\r\n\t */\r\n\tprivate var anim:Container;\r\n\t\r\n\t/**\r\n\t * box de l'état courant\r\n\t */\r\n\tprivate var box:Container;\r\n\t\r\n\t/**\r\n\t * suffixe du nom d'export des symboles Animés\r\n\t */\r\n\tprivate var ANIM_SUFFIX (default,null):String = \"\";\r\n\t\r\n\t/**\r\n\t * suffixe du nom d'export des symboles Box\r\n\t */\r\n\tprivate var BOX_SUFFIX (default,null):String = \"box\";\t\r\n\t\r\n\t/**\r\n\t * etat par défaut\r\n\t */\r\n\tprivate var DEFAULT_STATE (default, null): String = \"\";\r\n\t\r\n\t/**\r\n\t * Nom de l'asset (sert à identifier les textures à utiliser)\r\n\t * Prend le nom de la classe Fille par défaut\r\n\t */\r\n\tprivate var assetName:String;\r\n\t\r\n\t/**\r\n\t * état en cours\r\n\t */\r\n\tprivate var state:String;\r\n\t\r\n\t/**\r\n\t * Type de box de collision\r\n\t * Si boxType est égal à BoxType.NONE, aucune collision ne se fait, il n'est pas nécessaire d'avoir une boite de collision définie\r\n\t * Si boxType est égal à BoxType.SIMPLE, seul un symbole sert de Box pour tous les états, son nom d'export etant assetName+\"_\"+BOX_SUFFIX\r\n\t * Si boxType est égal à BoxType.MULTIPLE, chaque state correspond à une boite de collision, chaque state va cherche la boite assetName+\"_\"+ANIM_SUFFIX+\"_\"+BOX_SUFFIX\r\n\t * Si boxType est égal à BoxType.SELF, hitBox retourne le MovieClip anim\r\n\t */\r\n\tprivate var boxType:BoxType=BoxType.NONE;\r\n\t\r\n\t/**\r\n\t * niveau d'alpha des anim\r\n\t */\r\n\tpublic static var animAlpha:Float = 1;\r\n\t\r\n\t/**\r\n\t * niveau d'alpha des Boxes\r\n\t */\r\n\tpublic static var boxAlpha:Float = 0;\r\n\t\r\n\t/**\r\n\t * cache des boxes de tous les StateGraphic\r\n\t */\r\n\tprivate static var boxesCache:Map<String,Map<String,Dynamic>>;\r\n\t\r\n\t/**\r\n\t * l'anim est-elle terminée ?\r\n\t */\r\n\tpublic var isAnimEnd (default, null):Bool;\r\n\t\r\n\tprivate function setAnimEnd ():Void {\r\n\t\tisAnimEnd = true;\r\n\t}\r\n\t\r\n\tpublic function new(?assetName:String = null) \r\n\t{\r\n\t\tsuper();\r\n\t\tif (assetName != null) {\r\n\t\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\t\tthis.assetName = assetName;\r\n\t\t\tsetState(DEFAULT_STATE);\r\n\t\t\tstart();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t *\tChange l'asset à la volé par un asset personnalisé\r\n\t */\r\n\tpublic function changeAsset(pAssetName:String, pState:String = \"\"):Void {\r\n\t\tcleanAnim();\r\n\t\tassetName = pAssetName;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Conversion du modèle à la vue Isométrique du stateGraphic\t\t\r\n\t * @param\tpFloor Arrondi les valeur\t\t\r\n\t * @return point en x, y dans la vue\t\t\r\n\t */\r\n\tpublic function positionToModel(?pFloor:Bool = false):Point {\t\r\n\t\tvar positionIndex:Point = IsoManager.isoViewToModel(new Point(x, y));\t\t\r\n\t\tif (pFloor) {\r\n\t\t\tpositionIndex.x = Math.floor(positionIndex.x);\r\n\t\t\tpositionIndex.y = Math.floor(positionIndex.y);\r\n\t\t}\r\n\t\t\t\t\r\n\t\treturn positionIndex;\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * défini l'état courant du StateGraphic\r\n\t * @param\tpState nom de l'état (run, walk...)\r\n\t * @param\tpLoop l'anim boucle (isAnimEnd sera toujours false) ou pas\r\n\t * @param\tpAutoPlay lance l'anim automatiquement\r\n\t * @param\tpStart lance l'anim à cette frame\r\n\t */\r\n\tprivate function setState (pState:String, ?pLoop:Bool = false, ?pAutoPlay:Bool=true, ?pStart:UInt = 0): Void {\r\n\t\tif (factory == null) throw \"StateGraphic :: propriété fabrique non définie\";\r\n\t\t\r\n\t\tif (state == pState) return;\r\n\t\t\r\n\t\tif (anim != null) {\r\n\t\t\tremoveChild(anim);\r\n\t\t\tanim.destroy();\t\t\t\r\n\t\t\tanim = null;\r\n\t\t\t\r\n\t\t\tif (boxType == BoxType.SELF) {\r\n\t\t\t\tparent.removeChild(box);\r\n\t\t\t\tbox = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif (assetName == null) assetName = Type.getClassName(Type.getClass(this)).split(\".\").pop();\r\n\t\t\r\n\t\tstate = pState;\r\n\t\t\r\n\t\tanim = factory.getAnim();\r\n\t\t\r\n\t\tif (anim == null) {\t\t\t\r\n\t\t\tif (boxType == BoxType.SELF) {\r\n\t\t\t\tif (box !=null) removeChild(box);\r\n\t\t\t\tbox = null;\r\n\t\t\t}\r\n\t\t\tanim = factory.create(getID(state));\r\n\t\t\tanim.scale.set(1 /DeviceCapabilities.textureRatio , 1 / DeviceCapabilities.textureRatio);\r\n\t\t\tif (animAlpha < 1) anim.alpha = animAlpha;\r\n\t\t\taddChild(anim);\r\n\t\t} else {\r\n\t\t\tfactory.update(getID(state));\r\n\t\t}\r\n\r\n\t\tisAnimEnd = false;\r\n\t\t\r\n\t\tuntyped anim.loop = pLoop;\r\n\t\tfactory.setFrame(pAutoPlay, pStart);\r\n\t\t\r\n\t\tif (box == null) {\r\n\t\t\tif (boxType == BoxType.SELF) {\r\n\t\t\t\tbox = anim;\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tbox = new Container();\r\n\t\t\t\tif (boxType != BoxType.NONE) createBox();\r\n\t\t\t}\r\n\t\t\taddChild(box);\r\n\t\t} else if (boxType == BoxType.MULTIPLE) {\r\n\t\t\tremoveChild(box);\r\n\t\t\tbox = new Container();\r\n\t\t\tcreateBox();\r\n\t\t\taddChild(box);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function changeTexture (pState:String):Void { }\r\n\t\r\n\t\r\n\t/**\r\n\t * retourne l'identifiant complet de l'animation\r\n\t * @param\tpState etat de l'anim\r\n\t * @return identifiant\r\n\t */\r\n\tprivate function getID(pState:String): String {\r\n\t\tif (pState == DEFAULT_STATE) return assetName+ANIM_SUFFIX;\r\n\t\treturn assetName+\"_\" + pState+ANIM_SUFFIX;\r\n\t}\r\n\t\r\n\t/**\r\n\t * crée la ou les box de collision de l'état\r\n\t */\r\n\tprivate function createBox ():Void {\r\n\t\tvar lBoxes:Map<String,Dynamic> = getBox((boxType == BoxType.MULTIPLE ? state+ \"_\": \"\" )  + BOX_SUFFIX);\r\n\t\tvar lChild:Graphics;\r\n\t\t\r\n\t\tfor (lBox in lBoxes.keys()) {\r\n\t\t\tlChild = new Graphics();\r\n\t\t\tlChild.beginFill(0xFF2222);\r\n\t\t\tif (Std.is(lBoxes[lBox], Rectangle)) {\r\n\t\t\t\tlChild.drawRect(lBoxes[lBox].x, lBoxes[lBox].y, lBoxes[lBox].width, lBoxes[lBox].height);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(lBoxes[lBox], Ellipse)) {\r\n\t\t\t\tlChild.drawEllipse(lBoxes[lBox].x, lBoxes[lBox].y, lBoxes[lBox].width, lBoxes[lBox].height);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(lBoxes[lBox], Circle)) {\r\n\t\t\t\tlChild.drawCircle(lBoxes[lBox].x,lBoxes[lBox].y,lBoxes[lBox].radius);\r\n\t\t\t}\r\n\t\t\telse if (Std.is(lBoxes[lBox], Point)) {\r\n\t\t\t\tlChild.drawCircle(0, 0, 10);\r\n\t\t\t}\r\n\t\t\tlChild.endFill();\r\n\t\t\t\r\n\t\t\tlChild.name = lBox;\r\n\t\t\tif (Std.is(lBoxes[lBox], Point)) lChild.position.set(lBoxes[lBox].x, lBoxes[lBox].y);\r\n\t\t\telse lChild.hitArea = lBoxes[lBox];\r\n\t\t\t \r\n\t\t\tbox.addChild(lChild);\r\n\t\t}\r\n\t\tif (boxAlpha == 0) box.renderable = false;\r\n\t\telse box.alpha= boxAlpha;\r\n\t}\t\t\r\n\t\r\n\t/**\r\n\t * Créer toutes les Boxes\r\n\t * @param\tpFile Nom du fichier contenant la description des boxes\r\n\t */\r\n\tstatic public function addBoxes (pJson:Json): Void {\r\n\t\t\r\n\t\tif (boxesCache == null) boxesCache = new Map<String,Map<String,Dynamic>>();\r\n\t\t\r\n\t\tvar lItem;\r\n\t\tvar lObj;\r\n\t\t\r\n\t\tfor (lName in Reflect.fields(pJson)) {\r\n\t\t\tlItem = Reflect.field(pJson, lName);\r\n\t\t\tboxesCache[lName] = new Map<String,Dynamic>();\t\t\t\r\n\t\t\t\r\n\t\t\tfor (lObjName in Reflect.fields(lItem)) {\r\n\t\t\t\tlObj = Reflect.field(lItem, lObjName);\r\n\t\t\t\t\r\n\t\t\t\tif (lObj.type == \"Rectangle\") boxesCache[lName][lObjName] = new Rectangle(lObj.x, lObj.y, lObj.width, lObj.height);\r\n\t\t\t\telse if (lObj.type == \"Ellipse\") boxesCache[lName][lObjName] = new Ellipse(lObj.x, lObj.y, lObj.width/2, lObj.height/2);\r\n\t\t\t\telse if (lObj.type == \"Circle\") boxesCache[lName][lObjName] = new Circle(lObj.x, lObj.y, lObj.radius);\r\n\t\t\t\telse if (lObj.type == \"Point\") boxesCache[lName][lObjName] = new Point(lObj.x, lObj.y);\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Cherche dans le cache général des boxes, celle correspondant au state demandé\r\n\t * @param\tpState State de l'instance\r\n\t * @return\tla box correspondante\r\n\t * @return\r\n\t */\r\n\tpublic function getBox (pState:String):Map<String,Dynamic> {\r\n\t\treturn boxesCache[assetName+\"_\" +pState];\r\n\t}\t\t\r\n\t\r\n\t/**\r\n\t * met en pause l'anim\r\n\t */\r\n\tpublic function pause ():Void {\r\n\t\tif (anim != null && untyped anim.stop!=null) untyped anim.stop();\r\n\t}\r\n\t\r\n\t/**\r\n\t * relance l'anim\r\n\t */\r\n\tpublic function resume ():Void {\r\n\t\tif (anim != null  && untyped anim.play!=null) untyped anim.play();\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne la zone de hit de l'objet\r\n\t */\r\n\tpublic var hitBox (get, null):Container;\r\n\t \r\n\tprivate function get_hitBox (): Container {\r\n\t\treturn box;\r\n\t\t// Si on veut cibler une box plus précise: return box.getChildByName(\"nom d'instance du MovieClip de type Rectangle ou Circle dans Flash IDE\");\r\n\t}\r\n\r\n\t/**\r\n\t * retourne un tableau de points de collision dont les coordonnées sont exprimées dans le systeme global\r\n\t */\r\n\tpublic var hitPoints (get, null): Array<Point>;\r\n\t \r\n\tprivate function get_hitPoints (): Array<Point> {\r\n\t\treturn null;\r\n\t\t// liste de Points : return [box.toGlobal(box.getChildByName(\"nom d'instance du MovieClip de type Point dans Flash IDE\").position,box.toGlobal(box.getChildByName(\"nom d'instance du MovieClip de type Point dans Flash IDE\").position];\r\n\t}\r\n\r\n\tprivate function cleanAnim():Void {\r\n\t\tif (untyped anim != null) {\r\n\t\t\tif (untyped anim.stop != null) {\r\n\t\t\t\tuntyped anim.stop();\t\t\t\t\r\n\t\t\t}\r\n\t\t\tremoveChild(anim);\r\n\t\t\tanim.destroy();\r\n\t\t}\r\n\r\n\t\tif (box != anim) {\r\n\t\t\tremoveChild(box);\r\n\t\t\tbox.destroy();\r\n\t\t\tbox = null;\r\n\t\t}\r\n\t\t\r\n\t\tstate = null;\r\n\t\tanim = null;\r\n\t\tif (factory != null) {\r\n\t\t\tuntyped factory.anim = null;\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoyage et suppression de l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tcleanAnim();\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.game.sprites;\r\n\r\nimport com.isartdigital.utils.game.BoxType;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass Background extends StateGraphic\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tboxType = BoxType.NONE;\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t}\r\n\t\r\n\toverride public function start():Void \r\n\t{\r\n\t\tsuper.start();\r\n\t\tsetState(DEFAULT_STATE);\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites;\r\n\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.manager.Maps;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.game.BoxType;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport js.Browser;\r\nimport pathfinder.Coordinate;\r\nimport pathfinder.EHeuristic;\r\nimport pathfinder.Pathfinder;\r\nimport pixi.core.math.Point;\r\nimport pixi.display.FlumpMovie;\r\nimport pixi.extras.MovieClip;\r\n\r\n/**\r\n * ...\r\n * @author Thorcal\r\n */\r\nclass Citizen extends StateGraphic\r\n{\r\n\tpublic static var list:Array<Citizen> = new Array<Citizen>();\r\n\tpublic var posInModel:Point;\r\n\tprivate var listPos:Array<Point> = new Array<Point>();\r\n\tprivate var nextPosModel:Point = new Point();\r\n\tprivate var nextPosIso:Point = new Point();\r\n\tprivate var speed:Point = new Point(4,2);\r\n\tpublic var destination:Coordinate;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tassetName = \"Citizen1\"; \r\n\t\tsetState(DEFAULT_STATE);\r\n\t\tboxType = BoxType.NONE;\r\n\t\tlist.push(this);\r\n\t\tdestination = new Coordinate(50, 50);\r\n\t\tposInModel = IsoManager.isoViewToModel(position);\r\n\t\tsetNextPos();\r\n\t}\r\n\t\r\n\tpublic function startPathfinder():Void {\r\n\t\tvar l_map = new Maps(100, 100); // Create a 300x300 map\r\n\t\tvar l_pathfinder = new Pathfinder(l_map); // Create a Pathfinder engine configured for our map\r\n\t\tvar l_startNode = new Coordinate(Std.int(posInModel.x), Std.int(posInModel.y)); //  The starting node\r\n\t\tvar l_destinationNode = destination; // The destination node\r\n\t\tvar l_heuristicType = EHeuristic.PRODUCT; // The method of A Star used\r\n\t\tvar l_isDiagonalEnabled = false; // Set to true to ensure only up, left, down, right movements are allowed\r\n\t\tvar l_isMapDynamic = false; // Set to true to force fresh lookups from IMap.isWalkable() for each node's isWalkable property (e.g. for a dynamically changing map)\r\n\t\tvar l_path = l_pathfinder.createPath(l_startNode, l_destinationNode, l_heuristicType, l_isDiagonalEnabled, l_isMapDynamic);\r\n\t\t\r\n\t\tfor (i in 0...l_path.length)\r\n\t\t{\r\n\t\t\tlistPos.push(new Point(l_path[i].x, l_path[i].y));\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride function doActionNormal():Void \r\n\t{\r\n\t\tsuper.doActionNormal();\r\n\t\tmoveTo();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupere le prochain point du model à atteindre dans listPos\r\n\t */\r\n\t\r\n\tpublic function setNextPos():Void {\r\n\t\tif (listPos.length != 0) {\r\n\t\t\tnextPosModel = listPos.shift();\r\n\t\t\tnextPosIso = IsoManager.modelToIsoView(nextPosModel);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Bouge le sprite vers une coordonnée du model grace à setNextPos\r\n\t */\r\n\tpublic function moveTo():Void {\r\n\t\tif (position.x < nextPosIso.x) {\r\n\t\t\tposition.x += speed.x;\r\n\t\t}else if (position.x > nextPosIso.x) {\r\n\t\t\tposition.x -= speed.x;\r\n\t\t}\r\n\t\tif (position.y < nextPosIso.y) {\r\n\t\t\tposition.y += speed.y;\r\n\t\t}else if (position.y > nextPosIso.y) {\r\n\t\t\tposition.y -= speed.y;\r\n\t\t}\r\n\t\tif (position.x == nextPosIso.x && position.y == nextPosIso.y) {\r\n\t\t\tsetNextPos();\r\n\t\t}\r\n\t\tsetOrientation();\r\n\t}\r\n\t\r\n\tpublic function setOrientation():Void {\r\n\t\tif (position.x < nextPosIso.x && position.y < nextPosIso.y) {\r\n\t\t\tcast(anim, FlumpMovie).gotoAndStop(0);\r\n\t\t}else if (position.x > nextPosIso.x && position.y < nextPosIso.y) {\r\n\t\t\tcast(anim, FlumpMovie).gotoAndStop(1);\r\n\t\t}else if (position.x < nextPosIso.x && position.y > nextPosIso.y) {\r\n\t\t\tcast(anim, FlumpMovie).gotoAndStop(2);\r\n\t\t}else if (position.x > nextPosIso.x && position.y > nextPosIso.y) {\r\n\t\t\tcast(anim, FlumpMovie).gotoAndStop(3);\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites;\r\nimport com.isartdigital.builder.game.pooling.IPoolObject;\r\nimport com.isartdigital.builder.game.pooling.PoolObject;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass SpriteObject extends StateGraphic implements IPoolObject\r\n{\r\n\tpublic var colMin:UInt;\r\n\tpublic var colMax:UInt;\r\n\tpublic var rowMin:UInt;\r\n\tpublic var rowMax:UInt;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\tpublic function remove():Bool\r\n\t{\r\n\t\tif (!PoolObject.addPool(this)) return false;\r\n\t\tcleanAnim();\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function init(pDefinition:Dynamic):Void {}\r\n}","package com.isartdigital.builder.game.sprites;\r\n\r\nimport com.isartdigital.builder.game.def.SizeDef;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.pooling.IPoolObject;\r\nimport com.isartdigital.builder.game.pooling.PoolObject;\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport com.isartdigital.builder.game.utils.TypeDefUtils;\r\nimport com.isartdigital.utils.Debug;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.game.BoxType;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.Filter;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport com.isartdigital.utils.game.iso.IZSortable;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport pixi.core.math.Point;\r\nimport pixi.display.FlumpMovie;\r\nimport pixi.extras.MovieClip;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * Classe des tiles\r\n * @author Dorian MILLIERE\r\n */\r\nclass Tile extends SpriteObject\r\n{\r\n\tpublic static var list:Array<Tile> = new Array<Tile>();\r\n\r\n\tpublic var isIlluminated:Bool = false;\r\n\tpublic var isBuildable:Bool = true;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tboxType = BoxType.NONE;\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t}\r\n\t\r\n\toverride public function remove() :Bool\r\n\t{\r\n\t\tGameStage.getInstance().getTilesContainer().removeChild(this);\r\n\t\tif (!super.remove()) {\r\n\t\t\tdestroy();\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\toverride public function init(pDefiniton:Dynamic):Void \r\n\t{\t\r\n\t\tvar x:Float = Reflect.getProperty(pDefiniton, \"x\");\r\n\t\tvar y:Float = Reflect.getProperty(pDefiniton, \"y\");\r\n\t\tvar lPosition:Point = new Point(x, y);\r\n\t\tlPosition = IsoManager.modelToIsoView(lPosition);\r\n\t\tposition.set(Math.floor(lPosition.x), Math.floor(lPosition.y));\r\n\t\t\r\n\t\tisBuildable = Reflect.getProperty(pDefiniton, \"isBuildable\");\r\n\t\t\r\n\t\tTile.list.push(this);\r\n\r\n\t\tchangeAsset(\"Ground\");\r\n\t\tisIlluminated = pDefiniton.isIlluminated;\r\n\t\tsetState(DEFAULT_STATE);\r\n\t\t\r\n\t\tsetTileAlpha(pDefiniton.alpha);\r\n\t\t\r\n\t\tif (isIlluminated) {\r\n\t\t\tcast(anim, FlumpMovie).gotoAndStop(0);\r\n\t\t} else {\r\n\t\t\tcast(anim, FlumpMovie).gotoAndStop(1);\r\n\t\t}\r\n\t\t\r\n\t\tGameStage.getInstance().getTilesContainer().addChild(this);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Met toutes les tile present dans le rayon donnée en statue constructible et les illumine\r\n\t * @param\tposition\r\n\t * @param\tradius\r\n\t */\r\n\tpublic static function illumineTileInRadiusAt(position:Point, radius:Int):Void {\r\n\t\tvar index:Float;\r\n\t\tvar tiles:Array<TileModelDef> = [];\r\n\t\tvar tile:TileModelDef;\r\n\t\tvar tileAlpha:Float;\r\n\t\t\r\n\t\tfor (i in 0...radius) {\r\n\t\t\ttileAlpha = (Math.exp(i / radius) - 1) / (Math.exp(1.1) - 1);\r\n\t\t\tfor (j in 0...radius * 30) {\r\n\t\t\t\tindex = j / radius;\r\n\t\t\t\ttile = TypeDefUtils.cloneObject(TypeDefUtils.tileModelDef);\r\n\t\t\t\ttile.x = Math.round(position.x + Math.cos(index) * i);\r\n\t\t\t\ttile.y = Math.round(position.y + Math.sin(index) * i);\r\n\t\t\t\ttile.alpha = tileAlpha;\r\n\t\t\t\ttiles.push(tile);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (k in 0...tiles.length) {\r\n\t\t\tif (GMap.isInsideGrid(Std.int(tiles[k].x), Std.int(tiles[k].y))) {\r\n\t\t\t\tsetTileIlluminatedAndAlphaInGlobalMapAt(tiles[k]);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\trefreshTilesAlpha();\r\n\t}\r\n\t\r\n\tprivate static function setTileIlluminatedAndAlphaInGlobalMapAt(tile:TileModelDef):Void {\r\n\t\tvar tileInGlobalMap:TileModelDef = GMap.getElementByTypeAt(new Point(tile.x, tile.y), ModelElementNames.TILE);\r\n\t\t\r\n\t\ttileInGlobalMap.alpha = tileInGlobalMap.alpha > tile.alpha ? tile.alpha : tileInGlobalMap.alpha;\r\n\t\t\r\n\t\tif (!tileInGlobalMap.isIlluminated) {\r\n\t\t\ttileInGlobalMap.isIlluminated = true;\r\n\t\t\ttileInGlobalMap.isBuildable = true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function refreshTilesAlpha():Void {\r\n\t\tvar tile:Tile;\r\n\t\tvar position:Point;\r\n\t\t\r\n\t\tfor (i in 0...list.length) {\r\n\t\t\ttile = list[i];\r\n\t\t\tposition = tile.positionToModel(true);\r\n\t\t\ttile.setTileAlpha(getTileAlphaAt(position));\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate static function getTileAlphaAt(position:Point):Float {\r\n\t\treturn GMap.getElementByTypeAt(position, ModelElementNames.TILE).alpha;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Modifie la propriété isBuildable d'un array de tiles\r\n\t * @param\tArray<TileSavedDef>\r\n\t * @param\tisBuildable\r\n\t */\r\n\tpublic static function setTilesBuildable(tiles:Array<TileModelDef>, _isBuildable:Bool):Void {\r\n\t\tvar mapElements:Array<Dynamic>;\r\n\t\tvar tile:TileModelDef;\r\n\t\t\r\n\t\tfor (i in 0...tiles.length) {\r\n\t\t\ttile = tiles[i];\r\n\t\t\tmapElements = GMap.globalMap[tile.x][tile.y];\r\n\t\t\t\r\n\t\t\tif (mapElements != null) {\r\n\t\t\t\tGMap.getElementByTypeInArray(mapElements, ModelElementNames.TILE).isBuildable = _isBuildable;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de savoir si un batiment est construisable à un endroit donnée\r\n\t * @param\tArray des tiles concerné (Récupérable grâce à getTilesArray(pPosition:Point, pSize:SizeDef):Array<TileSavedDef>)\r\n\t * @return\r\n\t */\r\n\tpublic static function isTilesBuildable(pTiles:Array<TileModelDef>):Bool {\r\n\t\tvar _isBuildable:Bool = true;\r\n\t\t\r\n\t\tif (pTiles == null) return false;\r\n\t\t\r\n\t\tfor (i in 0...pTiles.length) {\r\n\t\t\tif (!pTiles[i].isBuildable) {\r\n\t\t\t\t_isBuildable = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn _isBuildable;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère un tableau contenant les tiles à une position avec une taille donné\r\n\t * @param\tpPosition position de la tile initial\r\n\t * @param\tpSize taille\r\n\t * @return Array de tiles ou null si l'array exède les limitation de la map\r\n\t */\r\n\tpublic static function getTilesArray(pPosition:Point, pSize:SizeDef):Array<TileModelDef> {\r\n\t\tvar tiles:Array<TileModelDef> = new Array<TileModelDef>();\r\n\t\tvar mapElements:Array<Array <Dynamic>>;\r\n\r\n\t\ttry {\r\n\t\t\tmapElements = GMap.getElementsBySizeAt(pPosition, pSize);\r\n\t\t} catch (e:String) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfor (i in 0...mapElements.length) {\r\n\t\t\ttiles.push(GMap.getElementByTypeInArray(mapElements[i], 'tile'));\r\n\t\t}\r\n\r\n\t\treturn tiles;\r\n\t}\r\n\r\n\tprivate function setTileAlpha(value:Float):Void {\r\n\t\talpha = value;\r\n\t}\r\n\t\r\n\toverride public function destroy():Void {\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\n\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.sprites.buildings.BuildingDefinition;\r\nimport com.isartdigital.builder.game.sprites.buildings.BuildingPosition;\r\nimport com.isartdigital.builder.game.sprites.buildings.const.BuildingEvents;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingDef;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingEventDef;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.builder.game.sprites.buildings.exceptions.BuildingException.BuildingExceptions;\r\nimport com.isartdigital.builder.game.type.JsonNames;\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUDEvent;\r\nimport com.isartdigital.builder.ui.popin.LanternConfirm;\r\nimport com.isartdigital.builder.ui.UIManager;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.game.BoxType;\r\nimport com.isartdigital.utils.game.Camera;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.Filter;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport com.isartdigital.utils.game.iso.IZSortable;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport pixi.core.math.Point;\r\nimport pixi.display.FlumpMovie;\r\n\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass Building extends SpriteObject implements IZSortable\r\n{\r\n\tpublic static var list:Array<Building> = new Array();\r\n\t\r\n\tpublic var definition:BuildingDef;\r\n\tpublic var buildingLevel:Int = 0;\r\n\t\r\n\tprivate var isSelected:Bool = false;\r\n\tprivate var isFollowingCursor:Bool = false;\r\n\tprivate var canTriggerMouseUpEvent = true;\r\n\r\n\tprivate var buildingConstructor:BuildingConstructor;\r\n\tprivate var buildingDestructor:BuildingDestructor;\r\n\tprivate var buildingHarvester:BuildingHarvester;\r\n\tprivate var buildingPosition:BuildingPosition;\r\n\tprivate var buildingMover:BuildingMover;\r\n\tprivate var buildingTile:BuildingTile;\r\n\t\r\n\tpublic function new()\r\n\t{\r\n\t\tsuper();\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tboxType = BoxType.NONE;\r\n\t\tinteractive = true;\r\n\t\t\r\n\t\tbuildingConstructor = new BuildingConstructor(this);\r\n\t\tbuildingDestructor = new BuildingDestructor(this);\r\n\t\tbuildingHarvester = new BuildingHarvester(this);\r\n\t\tbuildingPosition = new BuildingPosition(this);\r\n\t\tbuildingMover = new BuildingMover(this);\r\n\t\tbuildingTile = new BuildingTile(this);\r\n\t}\r\n\r\n\toverride public function init(buildingSavedDef:Dynamic):Void \r\n\t{\r\n\t\tvar buildingModelPosition:Point = new Point(buildingSavedDef.x, buildingSavedDef.y);\r\n\t\tlist.push(this);\r\n\t\tsetBuildingConfigurationWith(buildingSavedDef);\r\n\t\tbuildingConstructor.setDestination(buildingModelPosition);\r\n\t\tbuildingConstructor.construct();\r\n\t\tcreateZSortableConfiguration();\r\n\t\taddEventSubscription();\r\n\t\thideIfInFog();\r\n\t\taddToStage();\r\n\t}\r\n\t\r\n\tprivate function setBuildingConfigurationWith(buildingSavedDef:Dynamic):Void {\r\n\t\tvar buildingIsoPosition:Point = IsoManager.modelToIsoView(new Point(buildingSavedDef.x, buildingSavedDef.y));\r\n\t\t\r\n\t\tdefinition = BuildingDefinition.getByName(buildingSavedDef.name);\r\n\t\tassetName = definition.spriteName;\r\n\t\tchangeAsset(definition.spriteName);\r\n\t\t\r\n\t\tx = Math.floor(buildingIsoPosition.x);\r\n\t\ty = Math.floor(buildingIsoPosition.y);\r\n\t\t\r\n\t\tbuildingLevel = buildingSavedDef.buildingLevel;\r\n\t}\r\n\t\r\n\tprivate function createZSortableConfiguration():Void {\r\n\t\tvar position:Point = positionToModel(true);\r\n\t\t\r\n\t\tcolMin = Std.int(position.y);\r\n\t\tcolMax = Std.int(position.y) + definition.size.height;\r\n\t\trowMin = Std.int(position.x);\r\n\t\trowMax = Std.int(position.x) + definition.size.width;\r\n\t}\r\n\t\r\n\tprivate function addToStage():Void {\r\n\t\tsetState(DEFAULT_STATE);\r\n\t\tcast(anim, FlumpMovie).gotoAndStop(buildingLevel * 2);\r\n\t\tGameStage.getInstance().getBuildingsContainer().addChild(this);\r\n\t\tstart();\r\n\t}\r\n\t\r\n\tprivate function hideIfInFog():Void {\r\n\t\tvar positionModel:Point = positionToModel(true);\r\n\t\tvar tileUnderBuilding:TileModelDef = GMap.getElementByTypeAt(positionModel, 'tile');\r\n\t\tvisible = tileUnderBuilding.isIlluminated;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère l'état du model du building dans la global map\r\n\t * @return\r\n\t */\r\n\tpublic function getModelInGlobalMap():BuildingModelDef {\r\n\t\treturn BuildingDefinition.getBuildingModelInGlobalMapAt(positionToModel(true));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère la configuration dans le json du building\r\n\t * @return\r\n\t */\r\n\tpublic function getConfig():Dynamic {\r\n\t\tvar buildingsSettings:Dynamic = cast GameLoader.getContent(JsonNames.BUILDINGS_SETTINGS);\r\n\t\tvar buildingSetting:Dynamic = Reflect.field(buildingsSettings, definition.name);\r\n\r\n\t\tif (buildingSetting == null) {\r\n\t\t\tthrow BuildingExceptions.configNotFound;\r\n\t\t}\r\n\r\n\t\tif (isUpgradableBuilding()) {\r\n\t\t\tbuildingSetting = Reflect.field(buildingSetting, '' + (buildingLevel + 1));\r\n\t\t}\r\n\t\treturn buildingSetting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * TODO : Bouger dans un component d'ugrade\r\n\t * @return\r\n\t */\r\n\tpublic function isUpgradableBuilding():Bool {\r\n\t\tvar buildingsSettings:Dynamic = cast GameLoader.getContent(JsonNames.BUILDINGS_SETTINGS);\r\n\t\tvar buildingSetting:Dynamic = Reflect.field(buildingsSettings, definition.name);\r\n\t\t\r\n\t\tif (buildingSetting == null) {\r\n\t\t\tthrow BuildingExceptions.configNotFound;\r\n\t\t}\r\n\r\n\t\treturn Reflect.field(buildingSetting, '1') != null;\r\n\t}\r\n\t\r\n\toverride private function doActionNormal():Void {\r\n\t\tsuper.doActionNormal();\r\n\t\tvar onCursorPosition:Point;\r\n\t\t\r\n\t\tif (isFollowingCursor) {\r\n\t\t\tonCursorPosition = buildingPosition.getPositionOnCursor();\r\n\t\t\tbuildingMover.setMousePosition(onCursorPosition);\r\n\t\t\tbuildingMover.move();\r\n\t\t\tapplyFilterByConstructibleState();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function applyFilterByConstructibleState():Void {\r\n\t\tvar position:Point = buildingPosition.getPositionOnCursor();\r\n\t\tbuildingConstructor.setDestination(position);\r\n\t\tif (buildingConstructor.canConstruct()) {\r\n\t\t\tfilters = Filter.getBrightness(1.5);\r\n\t\t} else {\r\n\t\t\tfilters = Filter.getRed();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function upgradeBuilding():Void {\r\n\t\tbuildingLevel++;\r\n\t\tcast(anim, FlumpMovie).gotoAndStop(buildingLevel * 2 + 1);\r\n\t}\r\n\t\r\n\tprivate function addEventSubscription():Void {\r\n\t\tMain.getInstance().on(GameManager.EVENT_MOUSE_UP, onMouseUpEvent);\r\n\t}\r\n\r\n\tprivate function determineAction() {\r\n\t\tif (cameraIsMoving()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (canRequestConstruction()) {\r\n\t\t\tconstructBuildingAtMousePosition();\r\n\t\t} else if (canHarvest()) {\r\n\t\t\tbuildingHarvester.harvest();\r\n\t\t} else if (canSelectBuilding()) {\r\n\t\t\tBuildingUtils.unselectBuildingSelected();\r\n\t\t\tselectBuildingAndListenHudEvent();\r\n\t\t} else if (isSelected) {\r\n\t\t\tBuildingUtils.unselectBuildingSelected();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function onMouseUpEvent(position:Point):Void {\r\n\t\tvar buildingModelPosition:Point = positionToModel(true);\r\n\t\tposition = IsoManager.isoViewToModel(position);\r\n\t\tposition.x = Math.floor(position.x);\r\n\t\tposition.y = Math.floor(position.y);\r\n\r\n\t\tif (!canTriggerMouseUpEvent) {\r\n\t\t\tcanTriggerMouseUpEvent = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (isSelected) {\r\n\t\t\tdetermineAction();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (GMap.isElementTypeAt(position, ModelElementNames.BUILDING)) {\r\n\t\t\tvar building:BuildingModelDef = GMap.getElementByTypeAt(position, ModelElementNames.BUILDING);\r\n\r\n\t\t\tif (building.x == buildingModelPosition.x && building.y == buildingModelPosition.y) {\r\n\t\t\t\tdetermineAction();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function cameraIsMoving():Bool {\r\n\t\treturn Camera.getInstance().asMoved;\r\n\t}\r\n\t\r\n\tprivate function canRequestConstruction():Bool {\r\n\t\treturn isFollowingCursor && !Camera.getInstance().asMoved;\r\n\t}\r\n\t\r\n\tprivate function constructBuildingAtMousePosition():Void {\r\n\t\tvar destination:Point = buildingPosition.getPositionOnCursor();\r\n\t\t\r\n\t\tbuildingConstructor.setDestination(destination);\r\n\t\t\r\n\t\tif (buildingConstructor.canConstruct()) {\r\n\t\t\tbuildingConstructor.construct();\r\n\t\t\tstopFollowCursor();\r\n\t\t\tfilters = Filter.EMPTY_FILTER;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function canHarvest():Bool {\r\n\t\tif (buildingHarvester.isBuildingHasHarvestFunctionality()) {\r\n\t\t\treturn buildingHarvester.getPercentFilled() > BuildingHarvester.MINIMUM_FILL_PERCENT_FOR_HARVESTING;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function canSelectBuilding():Bool {\r\n\t\treturn !BuildingUtils.thereIsOtherBuildingMovingThan(this) && !isSelected;\r\n\t}\r\n\t\r\n\tprivate function selectBuildingAndListenHudEvent():Void {\r\n\t\tsetBuildingSelected();\r\n\t\tlistenHudEvent();\r\n\t}\r\n\t\r\n\tprivate function listenHudEvent():Void {\r\n\t\tMain.getInstance().on(BaseBuildingHUDEvent.DELETE_BUTTON, onErasable);\r\n\t\tMain.getInstance().on(BaseBuildingHUDEvent.MOVE_BUTTON, onMove);\r\n\t\tMain.getInstance().on(BaseBuildingHUDEvent.PAINT_BUTTON, onPaint);\r\n\t\tMain.getInstance().on(BaseBuildingHUDEvent.UPGRADE_BUTTON, onUpgrade);\r\n\t}\r\n\t\r\n\tprivate function forgetHudEvent():Void {\r\n\t\tMain.getInstance().off(BaseBuildingHUDEvent.DELETE_BUTTON, onErasable);\r\n\t\tMain.getInstance().off(BaseBuildingHUDEvent.MOVE_BUTTON, onMove);\r\n\t\tMain.getInstance().off(BaseBuildingHUDEvent.PAINT_BUTTON, onPaint);\r\n\t\tMain.getInstance().off(BaseBuildingHUDEvent.UPGRADE_BUTTON, onUpgrade);\r\n\t}\r\n\t\r\n\tprivate function onErasable(event:Dynamic):Void {\r\n\t\tcanTriggerMouseUpEvent = false;\r\n\t\tbuildingDestructor.destruct();\r\n\t}\r\n\t\r\n\tprivate function onMove(event:Dynamic):Void {\r\n\t\tcanTriggerMouseUpEvent = false;\r\n\t\tbuildingTile.setTileUnderBuildingBuildable();\r\n\t\tstartFollowCursor();\r\n\t}\r\n\t\r\n\tprivate function onPaint(event:Dynamic):Void {\r\n\t\tcanTriggerMouseUpEvent = false;\r\n\t\ttrace('Ouvre le paneau de peinture');\r\n\t}\r\n\t\r\n\tprivate function onUpgrade(event:Dynamic):Void {\r\n\t\tcanTriggerMouseUpEvent = false;\r\n\t\tupgradeBuilding();\r\n\t}\r\n\t\r\n\tprivate function startFollowCursor():Void {\r\n\t\tisFollowingCursor = true;\r\n\t}\r\n\t\r\n\tprivate function stopFollowCursor():Void {\r\n\t\tisFollowingCursor = false;\r\n\t}\r\n\t\r\n\tprivate function setBuildingSelected():Void {\r\n\t\tsetSelectedGraphicState();\r\n\t\temitSelectEvent();\r\n\t\tisSelected = true;\r\n\t}\r\n\t\r\n\tprivate function setBuildingUnselected():Void {\r\n\t\tsetUnselectedGraphicState();\r\n\t\temitUnselectEvent();\r\n\t\tisSelected = false;\r\n\t}\r\n\t\r\n\tprivate function emitSelectEvent():Void {\r\n\t\temitSelectionEvent(BuildingEvents.SELECTED);\r\n\t}\r\n\t\r\n\tprivate function emitUnselectEvent():Void {\r\n\t\temitSelectionEvent(BuildingEvents.UNSELECTED);\r\n\t}\r\n\t\r\n\tprivate function emitSelectionEvent(eventType:String):Void {\r\n\t\tvar buildingEvent:BuildingEventDef = {\r\n\t\t\tref: this,\r\n\t\t\ttype: definition.component\r\n\t\t}\r\n\t\t\r\n\t\tMain.getInstance().emit(eventType, buildingEvent);\r\n\t}\r\n\t\r\n\tprivate function setSelectedGraphicState():Void {\r\n\t\tcast(anim, FlumpMovie).gotoAndStop(buildingLevel * 2 + 1);\r\n\t}\r\n\t\r\n\tprivate function setUnselectedGraphicState():Void {\r\n\t\tcast(anim, FlumpMovie).gotoAndStop(buildingLevel * 2);\r\n\t}\r\n\r\n\tprivate function removeEventSubscription():Void {\r\n\t\tMain.getInstance().off(GameManager.EVENT_MOUSE_UP, onMouseUpEvent);\r\n\t}\r\n\t\r\n\toverride public function remove() :Bool {\r\n\t\tcleanObject();\r\n\t\tif (!super.remove()) {\r\n\t\t\tdestroy();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tprivate function cleanObject():Void {\r\n\t\tif (isSelected) {\r\n\t\t\tsetBuildingUnselected();\r\n\t\t};\r\n\t\tbuildingConstructor.cleanObject();\r\n\t\tremoveEventSubscription();\r\n\t\tforgetHudEvent();\r\n\t\tGameStage.getInstance().getBuildingsContainer().removeChild(this);\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t}\r\n\t\r\n\toverride public function destroy():Void {\r\n\t\tsuper.destroy();\r\n\t}\r\n}\r\n\r\n","package com.isartdigital.builder.game.sprites.buildings;\r\n\r\nimport Std;\r\nimport Std;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.api.Utils;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport haxe.Json;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Component du building\r\n * @author Dorian\r\n */\r\nclass BuildingConstructor\r\n{\r\n\tprivate var building:Building;\r\n\tprivate var buildingSaved:BuildingModelDef;\r\n\tprivate var destination:Point;\r\n\tprivate var positionBeforeConstruct:Point;\r\n\t\r\n\tpublic function new(building:Building) \r\n\t{\r\n\t\tthis.building = building;\r\n\t\tdestination = new Point();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Configure une position de destionation\r\n\t * @param\tx\r\n\t * @param\ty\r\n\t */\r\n\tpublic function setDestination(destination:Point):Void {\r\n\t\tthis.destination = destination;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Si le batiment peut être construit\r\n\t * @return\r\n\t */\r\n\tpublic function canConstruct():Bool {\r\n\t\tvar tilesDest:Array<TileModelDef> = Tile.getTilesArray(destination, building.definition.size);\r\n\t\treturn Tile.isTilesBuildable(tilesDest);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Construit le batiment à la position precedemment configuré avec setDestination()\r\n\t */\r\n\tpublic function construct():Void {\r\n\t\tsetPositionBeforeBuildingIfNull();\r\n\t\tbuildingSaved = getBuildingSavedFromGlobalMap();\r\n\t\tupdateTilesBuildableState();\r\n\t\tupdateBuildingSavedReferencePositionInGlobalMap();\r\n\t\tupdateBuildingSavedCoordinateInGlobalMap();\r\n\t\tupdateBuildingSavedInServer();\r\n\t\tsetPositionBeforeConstructWith(destination);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Clean l'objet après utilisation\r\n\t */\r\n\tpublic function cleanObject():Void {\r\n\t\tpositionBeforeConstruct = null;\r\n\t}\r\n\t\r\n\tprivate function setPositionBeforeBuildingIfNull():Void {\r\n\t\tif (positionBeforeConstruct == null) {\r\n\t\t\tpositionBeforeConstruct = building.positionToModel(true);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function getBuildingSavedFromGlobalMap():Dynamic {\r\n\t\treturn GMap.getElementByTypeAt(positionBeforeConstruct, ModelElementNames.BUILDING);\r\n\t}\r\n\t\r\n\tprivate function updateTilesBuildableState():Void {\r\n\t\tsetOriginTilesToConstructibleInGlobalMap();\r\n\t\tsetDestinationTilesToNotConstructibleInGlobalMap();\r\n\t}\r\n\t\r\n\tprivate function updateBuildingSavedReferencePositionInGlobalMap():Void {\r\n\t\tif (isFirstConstruction()) return null;\r\n\t\tGMap.removeElementsBySizeAndTypeAt(positionBeforeConstruct, building.definition.size, ModelElementNames.BUILDING);\r\n\t\tGMap.addElementsBySizeAt(destination, building.definition.size, buildingSaved);\r\n\t}\r\n\t\r\n\tprivate function updateBuildingSavedCoordinateInGlobalMap():Void {\r\n\t\tif (isFirstConstruction()) return null;\r\n\t\tbuildingSaved.x = Std.int(destination.x);\r\n\t\tbuildingSaved.y = Std.int(destination.y);\r\n\t}\r\n\t\r\n\tprivate function setOriginTilesToConstructibleInGlobalMap():Void {\r\n\t\tif (isFirstConstruction()) return null;\r\n\t\tvar tilesOrigin:Array<TileModelDef> = Tile.getTilesArray(positionBeforeConstruct, building.definition.size);\r\n\t\tTile.setTilesBuildable(tilesOrigin, true);\r\n\t}\r\n\t\r\n\tprivate function setDestinationTilesToNotConstructibleInGlobalMap():Void {\r\n\t\tvar tilesDest:Array<TileModelDef> = Tile.getTilesArray(destination, building.definition.size);\r\n\t\tTile.setTilesBuildable(tilesDest, false);\r\n\t}\r\n\t\r\n\tprivate function updateBuildingSavedInServer():Void {\r\n\t\tif (isFirstConstruction()) return null;\r\n\t\tApi.buildings.move(\r\n\t\t\tStd.int(positionBeforeConstruct.x),\r\n\t\t\tStd.int(positionBeforeConstruct.y),\r\n\t\t\tStd.int(destination.x),\r\n\t\t\tStd.int(destination.y),\r\n\t\t\tcbBuildingMovingResult\r\n\t\t);\r\n\t}\r\n\t\r\n\tprivate function isFirstConstruction():Bool {\r\n\t\treturn (\r\n\t\t\tpositionBeforeConstruct.x == destination.x &&\r\n\t\t\tpositionBeforeConstruct.y == destination.y\r\n\t\t);\r\n\t}\r\n\t\r\n\tprivate function cbBuildingMovingResult(results:String):Void {\r\n\t\tvar results:DataDef = cast(Json.parse(results));\r\n\t\t\r\n\t\tif (results.error) {\r\n\t\t\tUtils.errorHandler(results.errorCode, results.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function setPositionBeforeConstructWith(newPosition:Point):Void {\r\n\t\tpositionBeforeConstruct.set(newPosition.x, newPosition.y);\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingDef;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.builder.game.type.JsonNames;\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Component du building\r\n * @author Dorian MILLIERE\r\n */\r\nclass BuildingDefinition\r\n{\r\n\tprivate static var definitionName:String;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère la définition du building dans le json (spriteName, size..) grâce à son nom\r\n\t * @param\tname\r\n\t * @return\r\n\t */\r\n\tpublic static function getByName(name:String):BuildingDef {\r\n\t\tvar buildingDefinitions:Array<BuildingDef>;\r\n\t\tsetDefinitionName(name);\r\n\t\tbuildingDefinitions = getTypedBuildingDefinitions();\r\n\t\treturn getBuildingDefinitionInto(buildingDefinitions);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère l'état d'un building dans la map global\r\n\t * @param\tposition\r\n\t * @return\r\n\t */\r\n\tpublic static function getBuildingModelInGlobalMapAt(position:Point):BuildingModelDef {\r\n\t\treturn GMap.getElementByTypeAt(position, ModelElementNames.BUILDING);\r\n\t}\r\n\t\r\n\tprivate static function setDefinitionName(pDefinitionName:String):Void {\r\n\t\tdefinitionName = pDefinitionName;\r\n\t}\r\n\t\r\n\tprivate static function getTypedBuildingDefinitions():Array<BuildingDef> {\r\n\t\treturn cast(GameLoader.getContent(JsonNames.BUILDINGS_DEFINITION));\r\n\t}\r\n\t\r\n\tprivate static function getBuildingDefinitionInto(buildingDefinitions:Array<BuildingDef>):BuildingDef {\r\n\t\tfor (i in 0...buildingDefinitions.length) {\r\n\t\t\tif (buildingDefinitions[i].name == definitionName) {\r\n\t\t\t\treturn buildingDefinitions[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthrow 'Definition not found in json';\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.type.ModelElementNames;\r\nimport haxe.Json;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Coponent du building\r\n * @author Dorian\r\n */\r\nclass BuildingDestructor\r\n{\r\n\tprivate var building:Building;\r\n\t\r\n\tpublic function new(building:Building) \r\n\t{\r\n\t\tthis.building = building;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Destruction du building, update le serveur et enlève le building de la globalmap\r\n\t */\r\n\tpublic function destruct():Void {\r\n\t\tremoveBuildingFromGlobalMap();\r\n\t\tcallServerToDestroy();\r\n\t}\r\n\t\r\n\tprivate function removeBuildingFromGlobalMap():Void {\r\n\t\tGMap.removeElementByTypeAt(building.positionToModel(true), ModelElementNames.BUILDING);\r\n\t}\r\n\t\r\n\tprivate function callServerToDestroy():Void {\r\n\t\tvar modelPosistion:Point = building.positionToModel(true);\r\n\t\tApi.buildings.destroy(Std.int(modelPosistion.x), Std.int(modelPosistion.y), cbTryToDestroy);\r\n\t}\r\n\t\r\n\tprivate function cbTryToDestroy(pResponse:String): Void {\r\n\t\tvar lResponse:DataDef = cast(Json.parse(pResponse));\r\n\r\n\t\tif (!lResponse.error) {\r\n\t\t\tbuilding.remove();\r\n\t\t}\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\n\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.api.Utils;\r\nimport com.isartdigital.builder.game.manager.RessourceManager;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.sprites.buildings.exceptions.BuildingException.BuildingExceptions;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport haxe.Json;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * ...\r\n * @author Dorian MILLIERE\r\n */\r\nclass BuildingHarvester\r\n{\r\n\tpublic static inline var MINIMUM_FILL_PERCENT_FOR_HARVESTING:Float = 0.01;\r\n\tprivate static inline var SECONDS_IN_HOUR:Int = 3600;\r\n\tprivate static inline var MILLISECONDS_IN_SECOND:Int = 1000;\r\n\tprivate var building:Building;\r\n\tprivate var icon:StateGraphic;\r\n\t\r\n\tpublic function new(building:Building) {\r\n\t\tthis.building = building;\r\n\t\t//icon = MapManagerTest StateGraphic('HarvestOfferingIcon');\r\n\t\t//icon.position.set(0, 0);\r\n\t\t//building.addChild(icon);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Indique si le batiment est un batiment recoltable ou non\r\n\t * @return\r\n\t */\r\n\tpublic function isBuildingHasHarvestFunctionality():Bool {\r\n\t\tvar buildingModel:BuildingModelDef = building.getModelInGlobalMap();\r\n\t\treturn buildingModel.last_recolt_at != null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Indique à combien de pourcentage le batiment est remplie avec sa ressource (0 à 1)\r\n\t * @return\r\n\t */\r\n\tpublic function getPercentFilled():Float {\r\n\t\tthrowExceptionIfBuildingHaventHarvestFunctionality();\r\n\t\tvar buildingConfig:Dynamic = building.getConfig();\r\n\t\tvar buildingLastRecolt:Date = Date.fromString(building.getModelInGlobalMap().last_recolt_at);\r\n\t\tvar percentFilledPerHours:Float = buildingConfig.production / buildingConfig.capacity;\r\n\t\tvar millisecondsElapsedSinceLastRecolt:Float = Date.now().getTime() - buildingLastRecolt.getTime();\r\n\t\tvar hoursElapsedSinceLastRecolt:Float = millisecondsElapsedSinceLastRecolt / (SECONDS_IN_HOUR * MILLISECONDS_IN_SECOND);\r\n\t\tvar percentFilled:Float = percentFilledPerHours * hoursElapsedSinceLastRecolt;\r\n\t\tpercentFilled = percentFilled > 1 ? 1 : percentFilled;\r\n\t\treturn percentFilled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Havers le building\r\n\t */\r\n\tpublic function harvest():Void {\r\n\t\tthrowExceptionIfBuildingHaventHarvestFunctionality();\r\n\t\taddHarvestingResource();\r\n\t\tupdateLastRecoltDate();\r\n\t\tupdateResourceInServer();\r\n\t}\r\n\t\r\n\tpublic function showHarvestIcon():Void {\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function addHarvestingResource():Void {\r\n\t\tvar buildingConfig:Dynamic = building.getConfig();\r\n\t\tvar percentFilled:Float = getPercentFilled();\r\n\t\tvar position:Point = building.positionToModel(true);\r\n\t\tRessourceManager.getInstance().addRessources(buildingConfig.resource_production, Math.ceil(percentFilled * buildingConfig.capacity));\r\n\t}\r\n\t\r\n\tprivate function updateLastRecoltDate():Void {\r\n\t\tbuilding.getModelInGlobalMap().last_recolt_at = Date.now().toString();\t\t\r\n\t}\r\n\t\r\n\tprivate function updateResourceInServer():Void {\r\n\t\tvar position:Point = building.positionToModel(true);\r\n\t\tApi.buildings.collect(Std.int(position.x), Std.int(position.y), cbBuildingHarvested);\r\n\t}\r\n\t\r\n\tprivate function cbBuildingHarvested(results:String):Void {\r\n\t\tvar results:DataDef = cast(Json.parse(results));\r\n\t\t\r\n\t\tif (results.error) {\r\n\t\t\tUtils.errorHandler(results.errorCode, results.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function throwExceptionIfBuildingHaventHarvestFunctionality():Void {\r\n\t\tif (!isBuildingHasHarvestFunctionality()) {\r\n\t\t\tthrow BuildingExceptions.noHarvestFunctionality;\t\t\t\r\n\t\t}\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingDef;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Component du building\r\n * @author Dorian MILLIERE\r\n */\r\nclass BuildingMover\r\n{\r\n\tprivate var building:Building;\r\n\tprivate var definition:BuildingDef;\r\n\tprivate var mousePosition:Point;\r\n\t\r\n\tpublic function new(building:Building) \r\n\t{\r\n\t\tthis.building = building;\r\n\t\tdefinition = building.definition;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de bouger le building à la position set par \"setMousePosition\"\r\n\t */\r\n\tpublic function move():Void {\r\n\t\tvar centerOfBuildingModel:Point;\r\n\t\t\r\n\t\tif (mousePosition == null) {\r\n\t\t\tmousePositionNullException();\r\n\t\t}\r\n\t\t\r\n\t\tcenterOfBuildingModel = mousePosition;\r\n\t\tcenterOfBuildingModel.x = Math.round(centerOfBuildingModel.x);\r\n\t\tcenterOfBuildingModel.y = Math.round(centerOfBuildingModel.y);\r\n\t\t\r\n\t\tbuilding.position = IsoManager.modelToIsoView(centerOfBuildingModel);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de donner une position pour move()\r\n\t * @param\tmousePosition\r\n\t */\r\n\tpublic function setMousePosition(mousePosition:Point):Void {\r\n\t\tthis.mousePosition = mousePosition;\r\n\t}\r\n\t\r\n\tprivate function mousePositionNullException() {\r\n\t\tthrow 'Mouse position must be setted';\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingDef;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.game.iso.IsoManager;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Component du building\r\n * @author Dorian MILLIERE\r\n */\r\nclass BuildingPosition\r\n{\r\n\tprivate var building:Building;\r\n\t\r\n\tpublic function new(building:Building) \r\n\t{\r\n\t\tthis.building = building;\r\n\t}\r\n\r\n\t/**\r\n\t * Renvoi la position de la souris avec un offset appliquer de façon à ce que le building soit au millieu de la souris\r\n\t * @return\r\n\t */\r\n\tpublic function getPositionOnCursor():Point {\r\n\t\tvar buildingOffset:Point = getBuildingOffset();\r\n\t\tvar centerOfBuilding:Point = getMousePositionWith(buildingOffset);\r\n\t\treturn IsoManager.isoViewToModel(centerOfBuilding);\r\n\t}\r\n\t\r\n\tprivate function getBuildingOffset():Point {\r\n\t\tvar buildingOffset:Point = new Point();\r\n\t\t\r\n\t\tbuildingOffset.x = (building.definition.size.width - building.definition.size.height) / 2 * (Config.tileWidth / 4);\r\n\t\tbuildingOffset.y = (building.definition.size.width + building.definition.size.height) / 2 * (Config.tileHeight / 4);\r\n\t\t\r\n\t\treturn buildingOffset;\r\n\t}\r\n\t\r\n\tprivate function getMousePositionWith(buildingOffset:Point):Point {\r\n\t\tvar centerOfBuilding:Point = new Point();\r\n\t\tvar mousePosition:Point = GameManager.getInstance().mousePosition;\r\n\t\t\r\n\t\tcenterOfBuilding.x = mousePosition.x + buildingOffset.x;\r\n\t\tcenterOfBuilding.y = mousePosition.y + buildingOffset.y;\r\n\t\t\r\n\t\treturn centerOfBuilding;\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport com.isartdigital.builder.game.map.GMap;\r\n\r\n/**\r\n * Component du building\r\n * @author Dorian MILLIERE\r\n */\r\nclass BuildingTile\r\n{\r\n\tprivate var building:Building;\r\n\t\r\n\tpublic function new(building:Building) \r\n\t{\r\n\t\tthis.building = building;\r\n\t}\r\n\t\r\n\t/**\r\n\t * permet de mettre les tiles en dessous du buiolding au status constructible\r\n\t */\r\n\tpublic function setTileUnderBuildingBuildable():Void {\r\n\t\tchangeTileUnderBuildingBuildableStateTo(true);\r\n\t}\r\n\t\r\n\t/**\r\n\t * permet de mettre les tiles en dessous du buiolding au status constructible\r\n\t */\r\n\tpublic function setTileUnderBuildingNotBuildable():Void {\r\n\t\tchangeTileUnderBuildingBuildableStateTo(false);\r\n\t}\r\n\t\r\n\tprivate function changeTileUnderBuildingBuildableStateTo(buildableState:Bool):Void {\r\n\t\tvar tilesUnderBuilding:Array<TileModelDef>;\r\n\t\tvar positionToModel = building.positionToModel(true);\r\n\t\t\r\n\t\ttilesUnderBuilding = Tile.getTilesArray(positionToModel, building.definition.size);\r\n\t\tTile.setTilesBuildable(tilesUnderBuilding, buildableState);\r\n\t}\r\n}","package com.isartdigital.builder.game.sprites.buildings;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.builder.game.type.JsonNames;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * ...\r\n * @author Dorian MILLIERE\r\n */\r\n@:access(com.isartdigital.builder.game.sprites.buildings.Building)\r\nclass BuildingUtils\r\n{\r\n\t/**\r\n\t * Desectionne le building actuellement selectionné\r\n\t */\r\n\tpublic static function unselectBuildingSelected():Void {\r\n\t\tvar building:Building;\r\n\t\tvar buildings:Array<Building> = Building.list;\r\n\t\t\r\n\t\tfor (i in 0...buildings.length) {\r\n\t\t\tbuilding = buildings[i];\r\n\t\t\tif (building.isSelected) {\r\n\t\t\t\tbuilding.setBuildingUnselected();\r\n\t\t\t\tbuilding.forgetHudEvent();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de savoir si il y a un autre building actuellement en train de bougé, autre que celui entré en paramètre\r\n\t * @param\tbuildingSource\r\n\t * @return\r\n\t */\r\n\tpublic static function thereIsOtherBuildingMovingThan(buildingSource:Building):Bool {\r\n\t\tvar building:Building;\r\n\t\tvar buildings:Array<Building> = Building.list;\r\n\t\t\r\n\t\tfor (i in 0...buildings.length) {\r\n\t\t\tbuilding = buildings[i];\r\n\t\t\tif (building.isFollowingCursor && building != buildingSource) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Return true si la position inqiqué est l'origine du building\r\n\t */\r\n\tpublic static function isBuildingOriginInGlobalMapAt(position:Point):Bool {\r\n\t\tvar building:BuildingModelDef = GMap.getElementByTypeAt(position, 'building');\r\n\t\t\r\n\t\treturn (\r\n\t\t\tStd.int(building.x) == Std.int(position.x) &&\r\n\t\t\tStd.int(building.y) == Std.int(position.y)\r\n\t\t);\r\n\t}\r\n}","package com.isartdigital.builder.game.utils;\r\n\r\n/**\r\n * Classe static d'utils pour récupérer les coordonnées de l'écran\r\n * @author Flavien\r\n */\r\nclass CameraUtils\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\r\n\t}\r\n\t\r\n\tpublic static function ScreenLeft():Float {\r\n\t\treturn GameManager.getInstance().get_ScreenRect().x;\r\n\t}\r\n\t\r\n\tpublic static function ScreenRight():Float {\r\n\t\treturn GameManager.getInstance().get_ScreenRect().x + GameManager.getInstance().get_ScreenRect().width;\r\n\t}\r\n\t\r\n\tpublic static function ScreenTop():Float {\r\n\t\treturn GameManager.getInstance().get_ScreenRect().y;\r\n\t}\r\n\t\r\n\tpublic static function ScreenBottom():Float {\r\n\t\treturn GameManager.getInstance().get_ScreenRect().y + GameManager.getInstance().get_ScreenRect().height;\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.game.utils;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingModelDef;\r\nimport com.isartdigital.builder.game.def.TileModelDef;\r\nimport haxe.Json;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass TypeDefUtils\r\n{\r\n\tpublic static var tileModelDef:TileModelDef = { type: null, x:null, y:null, isBuildable:null, isIlluminated:null, alpha: null };\r\n\tpublic static var buildingModelDef:BuildingModelDef = { type: null, name: null, x:null, y:null, color: null, buildingLevel:null };\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * \r\n\t * @param\tpTypeDef\r\n\t * @return\r\n\t */\r\n\tpublic static function getValue(pTypeDef:Dynamic) : Dynamic\r\n\t{\r\n\t\tif (Reflect.hasField(pTypeDef, \"x\")) trace(\"he got\");\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Test si deux typeDef sont identique ou non\r\n\t * Note : faire la comparaison entre deux instance de typedef\r\n\t * @param\tpType1\r\n\t * @param\tpType2\r\n\t * @return true si identique, sinon false\r\n\t */\r\n\tpublic static function compare(pType1:Dynamic, pType2:Dynamic) :Bool\r\n\t{\r\n\t\tvar lArray1:Array<String> = Reflect.fields(pType1);\r\n\t\tvar lArray2:Array<String> = Reflect.fields(pType2);\r\n\t\t\r\n\t\tif (lArray1.length != lArray2.length) return false;\r\n\t\t\r\n\t\tfor (lString in lArray1)\r\n\t\t{\r\n\t\t\tif (lArray2.indexOf(lString) < 0) return false;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de cloner un objet json de façon à ne pas utiliser la reference\r\n\t * @param\tobjectToClone\r\n\t */\r\n\tpublic static function cloneObject(objectToClone:Dynamic):Dynamic {\r\n\t\treturn Json.parse(Json.stringify(objectToClone));\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui;\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUD;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.game.Camera;\r\nimport dat.gui.GUI;\r\n\r\n\t\r\n/**\r\n * Classe permettant de manipuler des parametres du projet au runtime\r\n * Si la propriété Config.debug et à false ou que la propriété Config.data.cheat est à false, aucun code n'est executé.\r\n * Il n'est pas nécessaire de retirer ou commenter le code du CheatPanel dans la version \"release\" du jeu\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass CheatPanel \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe CheatPanel\r\n\t */\r\n\tprivate static var instance: CheatPanel;\r\n\t\r\n\t/**\r\n\t * instance de dat.GUI composée par le CheatPanel\r\n\t */\r\n\tprivate var gui:GUI;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): CheatPanel {\r\n\t\tif (instance == null) instance = new CheatPanel();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tinit();\r\n\t}\r\n\t\r\n\tprivate function init():Void {\r\n\t\tif (Config.debug && Config.data.cheat) gui = new GUI();\r\n\t}\r\n\t\r\n\t// exemple de méthode configurant le panneau de cheat suivant le contexte\r\n\tpublic function ingame (): Void {\r\n\t\t// ATTENTION: toujours intégrer cette ligne dans chacune de vos méthodes pour ignorer le reste du code si le CheatPanel doit être désactivé\r\n\t\tif (gui == null) return;\r\n\t}\r\n\t\r\n\t/**\r\n\t * vide le CheatPanel\r\n\t */\r\n\tpublic function clear ():Void {\r\n\t\tif (gui == null) return;\r\n\t\tgui.destroy();\r\n\t\tinit();\r\n\t}\t\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.utils.ui;\r\n\r\nimport com.isartdigital.utils.events.EventType;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.events.TouchEventType;\r\nimport com.isartdigital.utils.game.GameObject;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.ui.UIPositionable;\r\nimport haxe.Timer;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * Base de tous les conteneurs d'interface\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass UIComponent extends GameObject\r\n{\r\n\r\n\tprivate var positionables:Array<UIPositionable> = [];\r\n\t\r\n\tprivate var isOpened:Bool;\r\n\t\r\n\tprivate var modalZone:Sprite;\r\n\t\r\n\tprivate var _modal:Bool = true;\r\n\t\r\n\t// TODO: pouvoir le varier dynamiquement\r\n\tpublic var modalImage:String=\"assets/alpha_bg.png\";\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t/**\r\n\t * permet de construire l'UIComponent à partir de l'UIBuilder\r\n\t */\r\n\tpublic function build () : Void {\r\n\t\tvar lClassName = Type.getClassName(Type.getClass(this));\r\n\t\tlClassName = lClassName.substring(lClassName.lastIndexOf(\".\") + 1);\r\n\t\t\r\n\t\tvar lItems:Array<UIPositionable> = UIBuilder.build(lClassName);\r\n\t\ttrace(\"number items :\" + lItems.length + \" class name : \" + lClassName);\r\n\t\taddChildItems(lItems);\r\n\t}\r\n\t\r\n\tprivate function addChildItems (pItems:Array<UIPositionable>) : Void\r\n\t{\r\n\t\tfor (lItem in pItems) {\r\n\t\t\taddChild(lItem.item);\r\n\t\t\tif (lItem.align != \"\") positionables.push(lItem);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function addChildItem (pItems:Array<UIPositionable>) : Void\r\n\t{\r\n\t\tfor (lItem in pItems) {\r\n\t\t\taddChild(lItem.item);\r\n\t\t\tif (lItem.align != \"\") positionables.push(lItem);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function open (): Void {\r\n\t\tif (isOpened) return;\r\n\t\tisOpened = true;\r\n\t\tmodal = _modal;\r\n\t\tGameStage.getInstance().on(EventType.RESIZE, onResize);\r\n\t\tonResize();\r\n\t}\r\n\t\r\n\t//TODO: verifier si y a besoin d'une variable privée ou si on peut utiliser modal direct\r\n\t\r\n\tpublic var modal (get, set):Bool;\r\n\t\r\n\tprivate function get_modal ():Bool {\r\n\t\treturn _modal;\r\n\t}\r\n\t\r\n\tprivate function set_modal (pModal:Bool):Bool {\r\n\t\t_modal = pModal;\r\n\t\t\r\n\t\tif (_modal) {\r\n\t\t\tif (modalZone == null) {\r\n\t\t\t\tmodalZone = new Sprite(Texture.fromImage(modalImage));\r\n\t\t\t\tmodalZone.interactive = true;\r\n\t\t\t\tmodalZone.on(MouseEventType.CLICK, stopPropagation);\r\n\t\t\t\tmodalZone.on(TouchEventType.TAP, stopPropagation);\r\n\t\t\t\tpositionables.unshift({ item:modalZone, align:UIPosition.FIT_SCREEN, offsetX:0, offsetY:0});\r\n\t\t\t}\r\n\t\t\tif (parent != null) parent.addChildAt(modalZone, parent.getChildIndex(this));\r\n\t\t} else {\t\r\n\t\t\tif (modalZone != null) {\r\n\t\t\t\tif (modalZone.parent != null) modalZone.parent.removeChild(modalZone);\r\n\t\t\t\tmodalZone.off(MouseEventType.CLICK, stopPropagation);\r\n\t\t\t\tmodalZone.off(TouchEventType.TAP, stopPropagation);\r\n\t\t\t\tmodalZone = null;\r\n\t\t\t\tif (positionables[0].item == modalZone) positionables.shift();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn _modal;\r\n\t}\r\n\t\r\n\tprivate function stopPropagation (pEvent:EventTarget): Void {}\r\n\t\r\n\tpublic function close ():Void {\r\n\t\tif (!isOpened) return;\r\n\t\tisOpened = false;\r\n\t\tmodal = false;\r\n\t\tdestroy();\r\n\t}\r\n\t\r\n\t/**\r\n\t * déclenche le positionnement des objets\r\n\t * @param pEvent\r\n\t */\r\n\tprivate function onResize (pEvent:EventTarget = null): Void {\r\n\t\tfor (lObj in positionables) {\r\n\t\t\tif (lObj.update) {\r\n\t\t\t\tif (lObj.align==UIPosition.TOP || lObj.align==UIPosition.TOP_LEFT || lObj.align==UIPosition.TOP_RIGHT) {\r\n\t\t\t\t\tlObj.offsetY = parent.y + lObj.item.y;\r\n\t\t\t\t} else if (lObj.align==UIPosition.BOTTOM || lObj.align==UIPosition.BOTTOM_LEFT || lObj.align==UIPosition.BOTTOM_RIGHT) {\t\r\n\t\t\t\t\tlObj.offsetY = GameStage.getInstance().safeZone.height - parent.y - lObj.item.y;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (lObj.align==UIPosition.LEFT || lObj.align==UIPosition.TOP_LEFT || lObj.align==UIPosition.BOTTOM_LEFT) {\r\n\t\t\t\t\tlObj.offsetX = parent.x + lObj.item.x;\r\n\t\t\t\t} else if (lObj.align==UIPosition.RIGHT || lObj.align==UIPosition.TOP_RIGHT || lObj.align==UIPosition.BOTTOM_RIGHT) {\t\r\n\t\t\t\t\tlObj.offsetX = GameStage.getInstance().safeZone.width - parent.x - lObj.item.x;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlObj.update = false;\r\n\t\t\t}\r\n\t\t\tUIPosition.setPosition(lObj.item, lObj.align, lObj.offsetX, lObj.offsetY);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * nettoie l'instance\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tclose();\r\n\t\tGameStage.getInstance().off(EventType.RESIZE, onResize);\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.ui;\r\n\r\n\r\n/**\r\n * Classe de base des Ecrans\r\n * Tous les écrans d'interface héritent de cette classe\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Screen extends UIComponent \r\n{\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tmodalImage = \"assets/black_bg.png\";\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui;\r\n\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.ui.Screen;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\n\r\n/**\r\n * Preloader Graphique principal\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GraphicLoader extends Screen \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe GraphicLoader\r\n\t */\r\n\tprivate static var instance: GraphicLoader;\r\n\r\n\tprivate var loaderBar:Sprite;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tvar lBg:Sprite = new Sprite(Texture.fromImage(Config.assetsPath+\"preload_bg.png\"));\r\n\t\tlBg.anchor.set(0.5, 0.5);\r\n\t\taddChild(lBg);\r\n\t\t\r\n\t\tloaderBar = new Sprite (Texture.fromImage(Config.assetsPath+\"preload.png\"));\r\n\t\tloaderBar.anchor.y = 0.5;\r\n\t\tloaderBar.x = -loaderBar.width / 2;\r\n\t\taddChild(loaderBar);\r\n\t\tloaderBar.scale.x = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): GraphicLoader {\r\n\t\tif (instance == null) instance = new GraphicLoader();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * mise à jour de la barre de chargement\r\n\t * @param\tpProgress\r\n\t */\r\n\tpublic function update (pProgress:Float): Void {\r\n\t\tloaderBar.scale.x = pProgress;\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n}","package com.isartdigital.builder.ui;\r\n\r\nimport com.isartdigital.builder.ui.hud.Hud;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport com.isartdigital.utils.ui.Screen;\r\nimport pixi.core.display.Container;\r\n\r\n/**\r\n * Manager (Singleton) en charge de gérer les écrans d'interface\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass UIManager \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe UIManager\r\n\t */\r\n\tprivate static var instance: UIManager;\r\n\t\r\n\t\r\n\t/**\r\n\t * tableau des popins ouverts\r\n\t */\r\n\tprivate var popins:Array<Popin>;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tpopins = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): UIManager {\r\n\t\tif (instance == null) instance = new UIManager();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ajoute un écran dans le conteneur de Screens en s'assurant qu'il n'y en a pas d'autres\r\n\t * @param\tpScreen Screen à ouvrir\r\n\t */\r\n\tpublic function openScreen (pScreen: Screen): Void {\r\n\t\tcloseScreens();\r\n\t\tGameStage.getInstance().getScreensContainer().addChild(pScreen);\r\n\t\tpScreen.open();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Supprime les écrans dans le conteneur de Screens\r\n\t */\r\n\tpublic function closeScreens (): Void {\r\n\t\tvar lContainer:Container = GameStage.getInstance().getScreensContainer();\r\n\t\twhile (lContainer.children.length > 0) {\r\n\t\t\tvar lCurrent:Screen = cast(lContainer.getChildAt(lContainer.children.length - 1), Screen);\r\n\t\t\tlCurrent.interactive = false;\r\n\t\t\tlContainer.removeChild(lCurrent);\r\n\t\t\tlCurrent.close();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ajoute un popin dans le conteneur de Popin\r\n\t * @param\tpPopin Popin à ouvrir\r\n\t */\r\n\tpublic function openPopin (pPopin: Popin): Void {\r\n\t\tpopins.push(pPopin);\r\n\t\tGameStage.getInstance().getPopinsContainer().addChild(pPopin);\r\n\t\tpPopin.open();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Supprime le popin dans le conteneur de Screens\r\n\t */\r\n\tpublic function closeCurrentPopin (): Void {\r\n\t\tif (popins.length == 0) return;\r\n\t\tvar lCurrent:Popin = popins.pop();\r\n\t\tlCurrent.interactive = false;\r\n\t\tGameStage.getInstance().getPopinsContainer().removeChild(lCurrent);\r\n\t\tlCurrent.close();\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Ajoute le hud dans le conteneur de Hud\r\n\t */\r\n\tpublic function openHud (): Void {\r\n\t\tGameStage.getInstance().getHudContainer().addChild(Hud.getInstance());\r\n\t\tHud.getInstance().open();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retire le hud du conteneur de Hud\r\n\t */\r\n\tpublic function closeHud (): Void {\r\n\t\tGameStage.getInstance().getHudContainer().removeChild(Hud.getInstance());\r\n\t\tHud.getInstance().close();\r\n\t}\r\n\t\r\n\t/**\r\n\t * met l'interface en mode jeu\r\n\t */\r\n\t public function startGame (): Void {\r\n\t\tcloseScreens();\r\n\t\topenHud();\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.ui.hud;\r\n\r\nimport com.isartdigital.builder.game.GameManager;\r\nimport com.isartdigital.builder.game.sprites.buildings.const.BuildingComponents;\r\nimport com.isartdigital.builder.game.sprites.buildings.const.BuildingEvents;\r\nimport com.isartdigital.builder.game.sprites.buildings.def.BuildingEventDef;\r\nimport com.isartdigital.builder.game.utils.CameraUtils;\r\nimport com.isartdigital.builder.ui.popin.UpgradeReward;\r\nimport com.isartdigital.builder.ui.uimodule.ColorButton;\r\nimport com.isartdigital.builder.ui.uimodule.DeleteButton;\r\nimport com.isartdigital.builder.ui.uimodule.MoveButton;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeButton;\r\nimport com.isartdigital.utils.Debug;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport com.isartdigital.utils.ui.Screen;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport motion.Actuate;\r\nimport motion.easing.Bounce;\r\nimport motion.easing.Elastic;\r\nimport motion.easing.Quad;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass BaseBuildingHUD extends UIComponent\r\n{\r\n\tprivate static var _instance:BaseBuildingHUD;\r\n\t\r\n\tpublic static function getInstance():BaseBuildingHUD\r\n\t{\r\n\t\tif (_instance == null) _instance = new BaseBuildingHUD();\r\n\t\t\r\n\t\treturn _instance;\r\n\t}\r\n\t\r\n\tprivate var elements:Array<StateGraphic> = new Array<StateGraphic> ();\r\n\t\r\n\tprivate static var BUTTON_DELETE_NAME:String = \"DeleteButton\";\r\n\tprivate static var BUTTON_COLOR_NAME:String = \"ColorButton\";\r\n\tprivate static var BUTTON_UPGRADABLE_NAME:String = \"UpgradableButton\";\r\n\tprivate static var BUTTON_MOVE_NAME:String = \"MoveButton\";\r\n\t\r\n\tprivate var startPositionY:Float = 0;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t_instance = this;\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tfor (lChild in children) {\r\n\t\t\telements.push(cast(lChild));\r\n\t\t\tstartPositionY = lChild.y;\r\n\t\t}\r\n\t\t\r\n\t\thideChild();\r\n\t\t\r\n\t\tMain.getInstance().on(BuildingEvents.SELECTED, showChild);\r\n\t\tMain.getInstance().on(BuildingEvents.UNSELECTED, hideChild);\r\n\t}\r\n\t\r\n\tprivate function sortByX(pObjectA:DisplayObject, pObjectB:DisplayObject) : Int\r\n\t{\r\n\t\treturn Std.int(pObjectB.x - pObjectA.x);\r\n\t}\r\n\t\r\n\tprivate function setComponent(pSuffix:String, pClass:Class<Dynamic>) : Void {\r\n\t\tfor (lElement in elements) {\r\n\t\t\tvar lName = Type.getClassName(Type.getClass(lElement));\r\n\t\t\tif (isClassNameEqual(lName, pSuffix, pClass)) addChild(lElement);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function showChild(pDef:BuildingEventDef) : Void {\r\n\t\t\r\n\t\tfor (lType in pDef.type) {\r\n\t\t\tif (lType == BuildingComponents.UPGRADABLE) {\r\n\t\t\t\tsetComponent(BUTTON_UPGRADABLE_NAME, UpgradeButton);\r\n\t\t\t}\r\n\t\t\tif (lType == BuildingComponents.MOVABLE) {\r\n\t\t\t\tsetComponent(BUTTON_MOVE_NAME, MoveButton);\r\n\t\t\t}\r\n\t\t\tif (lType == BuildingComponents.PAINTABLE) {\r\n\t\t\t\tsetComponent(BUTTON_COLOR_NAME, ColorButton);\r\n\t\t\t}\r\n\t\t\tif (lType == BuildingComponents.ERASABLE) {\r\n\t\t\t\tsetComponent(BUTTON_DELETE_NAME, DeleteButton);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\ttrace(\"nombre d'enfant : \" + children.length);\r\n\t\t\r\n\t\tchildren.sort(sortByX);\r\n\t\ttrace(\"width BaseBuildingHud : \" + getLocalBounds().width);\r\n\t\tpackChildren();\r\n\t\t\r\n\t\t//centerBuildingHud();\r\n\t\t\r\n\t\tfor (lElement in elements) {\r\n\t\t\tlElement.y = startPositionY + lElement.height;\r\n\t\t\tActuate.tween(lElement, 1, { y: lElement.y - lElement.height} ).ease(Elastic.easeOut); \r\n\t\t}\r\n\t\t\r\n\t\tHud.getInstance().changeXpValue();\r\n\t}\r\n\t\r\n\tprivate function centerBuildingHud() : Void {\r\n\t\tvar lWidthComponents:Float = 0;\r\n\t\tfor (lElement in children) {\r\n\t\t\tlWidthComponents += lElement.getLocalBounds().width;\r\n\t\t}\r\n\t\ttrace(\"x du children 0 : \" + children[0].x);\r\n\t\ttrace(\"x du children 1 : \" + children[1].x);\r\n\t\tvar lWidthHud:Float = GameStage.getInstance().getHudContainer().width;\r\n\t\ttrace(\"width HUD: \" + GameStage.getInstance().getHudContainer().getLocalBounds().width);\r\n\t\ttrace(\"width component : \" + lWidthComponents);\r\n\t\t\r\n\t\t\r\n\t\tchildren[0].x = lWidthHud / 2 - children[0].getLocalBounds().width - children[0].parent.getBounds().x;\r\n\t\t\r\n\t\ttrace(\"width BaseBuildingHud : \" + getLocalBounds().width);\r\n\t\t//x = 0 ;//-  getBounds().width;;\r\n\t\t\r\n\t\t\r\n\t\tpackChildren();\r\n\t}\r\n\t\r\n\tprivate function packChildren() : Void {\r\n\t\tfor (i in 0...children.length) {\r\n\t\t\tif (i >= children.length - 1) break;\r\n\t\t\tchildren[i + 1].x = children[i].x - children[i+1].getLocalBounds().width;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function hideChild(?pDef:BuildingEventDef) : Void {\r\n\t\tfor (lElement in elements)\r\n\t\t{\r\n\t\t\tremoveChild(lElement);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function isClassNameEqual (pName:String, pSuffix:String, pClass:Class<Dynamic>) : Bool\r\n\t{\r\n\t\treturn (pName.length - pSuffix.length \r\n\t\t\t== Type.getClassName(pClass).length - pSuffix.length);\r\n\t}\r\n}","package com.isartdigital.builder.ui.hud;\r\n\r\nimport com.isartdigital.builder.game.sprites.buildings.Building;\r\nimport com.isartdigital.builder.game.sprites.buildings.const.BuildingEvents;\r\nimport com.isartdigital.builder.ui.uimodule.DisableButton;\r\nimport com.isartdigital.builder.ui.uimodule.ValideButton;\r\nimport motion.Actuate;\r\nimport motion.easing.Elastic;\r\nimport pixi.core.display.Container;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ConfirmPanel extends Container\r\n{\r\n\tprivate var confirmButton:ValideButton = new ValideButton();\r\n\tprivate var disableButton:DisableButton = new DisableButton();\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tplaceButton();\r\n\t\tlistenButton();\r\n\t\tfeedBackDisplay();\r\n\t}\r\n\t\r\n\tprivate function feedBackDisplay () : Void {\r\n\t\tconfirmButton.scale.set(0.2, 0.2);\r\n\t\tdisableButton.scale.set(0.2, 0.2);\r\n\t\tActuate.tween(confirmButton.scale, 1, { x : 1, y : 1 } ).ease(Elastic.easeOut);\r\n\t\tActuate.tween(disableButton.scale, 1, { x : 1, y : 1 } ).ease(Elastic.easeOut);\r\n\t}\r\n\t\r\n\tprivate function listenButton () : Void {\r\n\t\tconfirmButton.tap = confirmButton.click = dispatchEventValide;\r\n\t\tdisableButton.tap = disableButton.click = dispatchEventDisable;\r\n\t}\r\n\t\r\n\tprivate function dispatchEventValide (pEvent:EventTarget) {\r\n\t\tMain.getInstance().emit(BuildingEvents.MOVE_CONFIRM);\r\n\t\tdestroy();\r\n\t}\r\n\t\r\n\tprivate function dispatchEventDisable (pEvent:EventTarget) {\r\n\t\tMain.getInstance().emit(BuildingEvents.MOVE_DISABLE);\r\n\t\tdestroy();\r\n\t}\r\n\t\r\n\tprivate function placeButton () : Void {\r\n\t\taddChild(confirmButton);\r\n\r\n\t\tconfirmButton.x = - 180;\r\n\t\tconfirmButton.y += 5;\r\n\t\t\r\n\t\taddChild(disableButton);\r\n\t\t\r\n\t\tdisableButton.x = confirmButton.width;\r\n\t}\r\n\t\r\n\toverride public function destroy () : Void {\r\n\t\tremoveChild(confirmButton);\r\n\t\tremoveChild(disableButton);\r\n\t\tparent.removeChild(this);\r\n\t\tconfirmButton.destroy();\r\n\t\tdisableButton.destroy();\r\n\t\t\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.ui.hud;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass CurrencyAsset extends UIComponent\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t}\r\n\t\r\n\tpublic function changeCount(pNumber:Int) {\r\n\t\ttrace (\"Number :\" + pNumber);\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.hud;\r\nimport com.isartdigital.builder.game.manager.RessourceManager;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.ui.UIAsset;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass GoldCurrency extends CurrencyAsset\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tRessourceManager.getInstance().updateGold = changeCount;\r\n\t}\r\n\t\r\n\toverride public function changeCount(pNumber:Int) {\r\n\t\tsuper.changeCount(pNumber);\r\n\t\tcast(getChildByName(\"Gold_txt\"), Text).text = cast (pNumber);\r\n\t}\r\n}","package com.isartdigital.builder.ui.hud;\r\n\r\nimport pixi.core.math.Point;\r\nimport com.isartdigital.builder.api.Api;\r\nimport com.isartdigital.builder.api.DataDef;\r\nimport com.isartdigital.builder.api.Utils;\r\nimport com.isartdigital.builder.game.manager.ExperienceManager;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.Debug;\r\nimport com.isartdigital.utils.ui.Screen;\r\nimport com.isartdigital.utils.ui.UIPosition;\r\nimport haxe.Json;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.text.Text;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * Classe en charge de gérer les informations du Hud\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Hud extends Screen \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Hud\r\n\t */\r\n\tprivate static var instance: Hud;\r\n\t\r\n\tprivate var hudRessources:Container;\r\n\t\r\n\tprivate var goldText:Text;\r\n\tprivate var spiceText:Text;\r\n\tprivate var offeringText:Text;\r\n\tprivate var experienceText:Text;\r\n\tpublic var levelComponent:LevelCurrency;\r\n\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Hud {\r\n\t\tif (instance == null) instance = new Hud();\r\n\t\treturn instance;\r\n\t}\t\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t_modal = false;\r\n\t\tbuild();\r\n\t\t\r\n\t\thudRessources = new Container();\t\r\n\t\t\r\n\t\tlevelComponent = cast(getChildByName(\"LevelCurrency\"));\r\n\t\t\r\n\t\tgoldText = new Text(\"Gold : \");\r\n\t\tgoldText.position.set(50, 50);\r\n\t\t\r\n\t\tspiceText = new Text(\"Spice : \");\r\n\t\tspiceText.position.set(50, 75);\r\n\t\t\r\n\t\tofferingText = new Text(\"Offering : \");\r\n\t\tofferingText.position.set(50, 100);\r\n\t\t\r\n\t\texperienceText = new Text(\"Exp : \");\r\n\t\texperienceText.position.set(50, 125);\r\n\t\t\r\n\t\thudRessources.addChild(goldText);\r\n\t\thudRessources.addChild(spiceText);\t\t\r\n\t\thudRessources.addChild(offeringText);\t\t\r\n\t\thudRessources.addChild(experienceText);\t\t\r\n\t\t\r\n\t\taddChild(hudRessources);\r\n\t\thudRessources.position.set(500, 500);\r\n\t\tUIPosition.setPosition(hudRessources, UIPosition.TOP);\r\n\t\tchangeXpValue();\r\n\t}\r\n\t\r\n\t/**\r\n\t * repositionne les éléments du Hud\r\n\t * @param\tpEvent\r\n\t */\r\n\toverride private function onResize (pEvent:EventTarget = null): Void {\r\n\t\tsuper.onResize();\r\n\t}\r\n\t/*\r\n\tpublic function doAction () : Void\r\n\t{\r\n\t\tif (BaseBuildingHUD.getInstance().hadToMove) return;\r\n\t}*/\r\n\t\r\n\tpublic function refreshHUD () : Void {\r\n\t\tApi.resources.get(cb_resourceAll);\r\n\t\tApi.user.getExperience(cb_experience);\r\n\t}\r\n\t\r\n\tpublic function changeXpValue() : Void {\r\n\t\tlevelComponent.setProgressBar(100);\r\n\t}\r\n\t\r\n\tprivate function cb_resourceAll (pData:String) : Void\r\n\t{\r\n\t\tvar lData:DataDef = cast(Json.parse(pData));\r\n\t\t\r\n\t\tif (lData.error)\r\n\t\t{\r\n\t\t\tUtils.errorHandler(lData.errorCode, lData.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t//trace(\"hudressource \" + hudRessources.parent.parent.name);\r\n\t\t\r\n\t\tgoldText.text = \"Gold : \" + lData.data.gold;\r\n\t\tspiceText.text = \"Spice : \" + lData.data.spice;\r\n\t\tofferingText.text = \"Offering : \" + lData.data.offering;\r\n\t}\r\n\t\r\n\tprivate function cb_experience (pData:String) : Void\r\n\t{\r\n\t\tvar lData:DataDef = cast(Json.parse(pData));\r\n\t\t\r\n\t\tif (lData.error)\r\n\t\t{\r\n\t\t\tUtils.errorHandler(lData.errorCode, lData.errorMessage);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\texperienceText.text = \"Exp : \" + lData.data;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n}","package com.isartdigital.builder.ui.hud;\r\n\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport motion.Actuate;\r\nimport motion.easing.Expo;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass LevelCurrency extends UIComponent\r\n{\r\n\tprivate var originPositionProgressBar:Float;\r\n\tprivate var widthProgressBar:Float;\r\n\tprivate var progressBar:DisplayObject;\r\n\t\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tprogressBar = getChildByName(\"LevelBarAsset\");\r\n\t\toriginPositionProgressBar = progressBar.x;\r\n\t\twidthProgressBar = progressBar.getLocalBounds().width;\r\n\t\t\r\n\t\tsetProgressBar(0, false);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Change le niveau afficher dans le HUD\r\n\t * @param\tpLevel\r\n\t */\r\n\tpublic function setLevel (pLevel:Int) : Void {\r\n\t\tcast(getChildByName(\"Level_txt\"), Text).text = Std.string(pLevel);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Change la position de la progressBar\r\n\t * @param\tpPercent : Pourcentage de complession du niveau\r\n\t * @param\tpFeedBack : joue une animation\r\n\t */\r\n\tpublic function setProgressBar (pPercent:Float, ?pFeedBack:Bool = true) {\r\n\t\tif (pPercent >= 100) pPercent = 100;\r\n\t\t\r\n\t\tvar newPosition:Float = originPositionProgressBar - (100 - pPercent) * widthProgressBar / 100;\r\n\t\t\r\n\t\tif (!pFeedBack)\r\n\t\t\tprogressBar.x = newPosition;\r\n\t\telse {\r\n\t\t\tActuate.tween(progressBar, 2, { x : newPosition} ).ease(Expo.easeOut);\r\n\t\t}\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.hud;\r\nimport com.isartdigital.builder.game.manager.RessourceManager;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.ui.UIAsset;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass OfferingsCurrency extends CurrencyAsset\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tRessourceManager.getInstance().updateOfferings = changeCount;\r\n\t}\r\n\t\r\n\toverride public function changeCount(pNumber:Int) {\r\n\t\tsuper.changeCount(pNumber);\r\n\t\tcast(getChildByName(\"Offerings_txt\"), Text).text = cast (pNumber);\r\n\t}\r\n}","package com.isartdigital.builder.ui.hud;\r\nimport com.isartdigital.builder.game.manager.RessourceManager;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.ui.UIAsset;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass SpiceCurrency extends CurrencyAsset\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tRessourceManager.getInstance().updateSpice = changeCount;\r\n\t}\r\n\t\r\n\toverride public function changeCount(pNumber:Int) {\r\n\t\tsuper.changeCount(pNumber);\r\n\t\tcast(getChildByName(\"Spice_txt\"), Text).text = cast (pNumber);\r\n\t}\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.utils.game.BoxType;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.display.FlumpMovie;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass BuildingInShop extends StateGraphic\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t\tboxType = BoxType.SELF;\r\n\t\t\r\n\t\tstart();\r\n\t}\r\n\t\r\n\toverride private function setModeNormal ():Void {\r\n\t\tsetState(DEFAULT_STATE);\r\n\t\tsuper.setModeNormal();\r\n\t}\r\n\t\r\n\tpublic function setAsset (pAssetName:String) : Void {\r\n\t\t\r\n\t\tvar frame:UInt = cast(anim, FlumpMovie).getLabelFrame(pAssetName);\r\n\t\tcast(anim, FlumpMovie).gotoAndStop(frame);\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.utils.ui.UIComponent;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass BuildingInfo extends UIComponent\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.builder.game.manager.RessourceManager;\r\nimport com.isartdigital.builder.game.sprites.buildings.const.BuildingNames;\r\nimport com.isartdigital.builder.game.type.JsonNames;\r\nimport com.isartdigital.builder.ui.screens.ShopEvent;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ItemBuilding extends UIComponent\r\n{\r\n\tpublic static var list:Array<ItemBuilding> = new Array<ItemBuilding> ();\r\n\r\n\tprivate var currentBuildingDefinition:Dynamic;\r\n\tprivate var buildingName:String = \"pyrotechnician\";\r\n\t\r\n\tprivate var buildingAssets:BuildingInShop;\r\n\t\r\n\tprivate var cannotBuild:Bool = true;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tlist.push(this);\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tbuildingAssets = cast(getChildByName(\"BuildingInShop\"), BuildingInShop);\r\n\t\t\r\n\t\tlistenButtonHard();\r\n\t\tlistenButtonSoft();\r\n\t}\r\n\t\r\n\tprivate function listenButtonSoft() : Void {\r\n\t\tcast(getChildByName(\"ShopBuySoftButton\"), Button).click = buySoft;\r\n\t}\r\n\t\r\n\tprivate function buySoft(pEvent:EventTarget) : Void {\r\n\t\ttrace(\"canBuild : \" + cannotBuild);\r\n\t\t\r\n\t\tif (cannotBuild) return;\r\n\t\tvar price:Int = Reflect.field(currentBuildingDefinition, \"price\");\r\n\t\tif (!RessourceManager.getInstance().removeRessources(RessourceManager.GOLD, price)) return;\r\n\t\tMain.getInstance().emit(ShopEvent.SHOP_BUY_BUILDING, buildingName, false);\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\tprivate function listenButtonHard() : Void {\r\n\t\tcast(getChildByName(\"ShopBuyHardButton\"), Button).click = buyHard;\r\n\t}\r\n\t\r\n\tprivate function buyHard (pEvent:EventTarget) : Void {\r\n\t\ttrace(\"canBuild : \" + cannotBuild);\r\n\t\tif (cannotBuild) return;\r\n\t\tvar price:Int = Reflect.field(currentBuildingDefinition, \"hard_price\");\r\n\t\tif (!RessourceManager.getInstance().removeRessources(RessourceManager.SPICE, price)) return;\r\n\t\tMain.getInstance().emit(ShopEvent.SHOP_BUY_BUILDING, buildingName, true);\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Change le building a afficher\r\n\t * @param\tpBuildingName nom du building a afficher\r\n\t */\r\n\tpublic function changeItemSelect(pBuildingName:String) : Void {\r\n\t\tbuildingName = pBuildingName;\r\n\t\tbuildingAssets.setAsset(pBuildingName);\r\n\t\tgetBuildingDefinition();\r\n\t\tupdateSoftTxt();\r\n\t\tupdateHardTxt();\r\n\t\tupdateBuildingName();\r\n\t\tif (buildingIsUnLock()) activeLock();\r\n\t\telse disableLock();\r\n\t}\r\n\t\r\n\tprivate function buildingIsUnLock () : Bool {\r\n\t\tvar lMainBuildingLvlRequire:Int = Reflect.field(currentBuildingDefinition, \"require_main_building_lvl\");\r\n\t\treturn lMainBuildingLvlRequire == 1;\r\n\t}\r\n\t\r\n\tprivate function getBuildingDefinition() : Void {\r\n\t\tvar buildingSettings:Dynamic = cast GameLoader.getContent(JsonNames.BUILDINGS_SETTINGS);\t\t\r\n\t\tvar buildingDefinition:Dynamic = cast(Reflect.field(buildingSettings, buildingName));\r\n\t\t\r\n\t\tif (Reflect.field(buildingDefinition, \"1\") != null) {\r\n\t\t\tcurrentBuildingDefinition = cast(Reflect.field(buildingDefinition, \"1\"));\r\n\t\t} else {\r\n\t\t\tcurrentBuildingDefinition = buildingDefinition;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateSoftTxt () : Void {\r\n\t\tcast(getChildByName(\"PriceSoft_txt\"), Text).text = Reflect.field(currentBuildingDefinition, \"price\");\r\n\t}\r\n\t\r\n\tprivate function updateHardTxt () : Void {\r\n\t\tcast(getChildByName(\"PriceHard_txt\"), Text).text = Reflect.field(currentBuildingDefinition, \"hard_price\");\r\n\t}\r\n\t\r\n\tprivate function updateBuildingName () : Void {\r\n\t\tcast(getChildByName(\"BuildingName_txt\"), Text).text = buildingName;\r\n\t}\r\n\t\r\n\tprivate function activeLock () : Void {\r\n\t\tgetChildByName(\"CadenasAsset\").visible = cannotBuild = true;\r\n\t}\r\n\t\r\n\tprivate function disableLock () : Void {\r\n\t\tgetChildByName(\"CadenasAsset\").visible = cannotBuild = false;\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass RewardBuilding extends UIComponent\r\n{\r\n\tprivate var buildingAsset:BuildingInShop;\r\n\tprivate var titleTxt:Text;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\ttitleTxt = cast(getChildByName(\"RewardBuildingTitle_txt\"), Text);\r\n\t\tbuildingAsset = cast(getChildByName(\"BuildingInShop\"), BuildingInShop);\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.builder.game.type.JsonNames;\r\nimport com.isartdigital.builder.ui.uimodule.DotButton;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.math.Point;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopBuilding extends UIComponent\r\n{\r\n\tprivate var ShopSheetSettings:Array<String> = new Array<String> ();\r\n\t\r\n\tprivate var positionInShop:Int = 0;\r\n\t\r\n\tprivate var buildingPerSheet:Int = 2;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tShopSheetSettings = cast GameLoader.getContent(JsonNames.SHOP_SHEET);\r\n\t\tchangeSheet();\r\n\t\tlistenRightButton();\r\n\t\tlistenLeftButton();\r\n\t\t\r\n\t\tpositionInShop = 0;\r\n\t\tcreateAllDot();\r\n\t\tlistenDot();\r\n\t\t\r\n\t\tDotButton.list[positionInShop].setActive();\r\n\t}\r\n\t\r\n\tprivate function onDotClick (pEvent:EventTarget) : Void {\r\n\t\tDotButton.list[Math.floor(positionInShop / buildingPerSheet)].setInActive();\r\n\t\tpositionInShop = DotButton.list.indexOf(cast(pEvent.target, DotButton)) * 2;\r\n\t\tDotButton.list[Math.floor(positionInShop / buildingPerSheet)].setActive();\r\n\r\n\t\tchangeSheet();\t\t\r\n\t}\r\n\t\r\n\tprivate function listenDot () : Void {\r\n\t\tfor (lDot in DotButton.list) {\r\n\t\t\tlDot.tap = lDot.click = onDotClick;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function centerDot() : Void {\r\n\t\tvar lMoveToCenter:Float = DotButton.list[DotButton.list.length -1].x - DotButton.list[0].x;\r\n\t\tlMoveToCenter = lMoveToCenter / 2 - DotButton.list[0].width  ;\r\n\t\tvar lY:Float = DotButton.list[DotButton.list.length -1].y;\r\n\t\tfor (lDot in DotButton.list) {\r\n\t\t\tlDot.x -= lMoveToCenter;\r\n\t\t\tlDot.y = lY;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function createAllDot () : Void {\r\n\t\tvar lDeltaX = DotButton.list[1].x - DotButton.list[0].x;\r\n\t\twhile (DotButton.list.length < Math.ceil(ShopSheetSettings.length / buildingPerSheet)) {\r\n\t\t\tvar lPosition:Point = DotButton.list[DotButton.list.length -1].position.clone();\r\n\t\t\tvar lDot:DotButton = new DotButton();\t\t\t\r\n\t\t\tlDot.position = lPosition;\r\n\t\t\tlDot.x += lDeltaX;\r\n\t\t\taddChild(lDot);\r\n\t\t}\r\n\t\tcenterDot();\r\n\r\n\t}\r\n\t\r\n\tprivate function listenRightButton() : Void\r\n\t{\r\n\t\tcast(getChildByName(\"RightButton\"), Button).click = goRight;\r\n\t}\r\n\t\r\n\tprivate function listenLeftButton() : Void\r\n\t{\r\n\t\tcast(getChildByName(\"LeftButton\"), Button).click = goLeft;\r\n\t}\r\n\t\r\n\tprivate function goLeft(pEvent:EventTarget) : Void {\r\n\t\tif (positionInShop - buildingPerSheet >= 0) {\r\n\t\t\tDotButton.list[Math.floor(positionInShop / buildingPerSheet)].setInActive();\r\n\t\t\tpositionInShop -= buildingPerSheet;\r\n\t\t\ttrace(positionInShop);\r\n\t\t\tchangeSheet();\r\n\t\t\tDotButton.list[Math.floor(positionInShop / buildingPerSheet)].setActive();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function goRight(pEvent:EventTarget) : Void {\t\t\r\n\t\tif (positionInShop + buildingPerSheet < ShopSheetSettings.length) {\r\n\t\t\tDotButton.list[Math.floor(positionInShop / buildingPerSheet)].setInActive();\r\n\t\t\ttrace(positionInShop);\r\n\t\t\tpositionInShop += buildingPerSheet;\r\n\t\t\tchangeSheet();\r\n\t\t\tDotButton.list[Math.floor(positionInShop / buildingPerSheet)].setActive();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function changeSheet() : Void {\r\n\t\tItemBuilding.list[0].changeItemSelect(ShopSheetSettings[positionInShop]);\r\n\t\tItemBuilding.list[1].changeItemSelect(ShopSheetSettings[positionInShop + 1]);\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\ttrace(\"Destroy ShopBuilding\");\r\n\t\twhile (ItemBuilding.list.length > 0) {\r\n\t\t\tItemBuilding.list[0].destroy();\r\n\t\t}\r\n\t\twhile (DotButton.list.length > 0) {\r\n\t\t\tDotButton.list[0].destroy();\r\n\t\t}\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.utils.ui.UIComponent;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopRessource extends UIComponent\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.items;\r\n\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUDEvent;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeButton;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeDisableButton;\r\nimport com.isartdigital.builder.ui.uimodule.UpgradeValideButton;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport com.isartdigital.utils.ui.UIComponent;\r\nimport pixi.core.text.Text;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass UpgradeComfirm extends UIComponent\r\n{\r\n\tprivate var upgradeButton:UpgradeButton;\r\n\tprivate var valideButton:UpgradeValideButton;\r\n\tprivate var disableButton:UpgradeDisableButton;\r\n\tprivate var priceTxt:Text;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tupgradeButton = cast(getChildByName(\"UpgradeButton\"), UpgradeButton);\r\n\t\tvalideButton = cast(getChildByName(\"UpgradeValideButton\"), UpgradeValideButton);\r\n\t\tdisableButton = cast(getChildByName(\"UpgradeDisableButton\"), UpgradeDisableButton);\r\n\t\tpriceTxt = cast(getChildByName(\"UpgradeComfirm_txt\"), Text);\r\n\t\t\r\n\t\t\r\n\t\tsetComfrimAction();\r\n\t\t\r\n\t\tvalideButton.click = valideButton.tap = onValideButton;\r\n\t\tdisableButton.click = disableButton.tap = onDisableButton;\r\n\t\t\r\n\t\thideComfirmAssets();\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tprivate function onValideButton (pEvent:EventTarget) : Void {\r\n\t\tMain.getInstance().emit(BaseBuildingHUDEvent.UPGRADE_BUTTON);\r\n\t}\r\n\t\r\n\tprivate function onDisableButton (pEvent:EventTarget) : Void {\r\n\t\thideComfirmAssets();\r\n\t\tsetComfrimAction();\r\n\t}\r\n\t\r\n\tprivate function onUpgradeButton (pEvent:EventTarget) : Void {\r\n\t\tshowComfirmAssets();\r\n\t\tsetDisableAction();\r\n\t}\r\n\t\r\n\tprivate function setDisableAction () : Void {\r\n\t\tupgradeButton.click = upgradeButton.tap = onDisableButton;\r\n\t}\r\n\t\r\n\tprivate function setComfrimAction () : Void {\r\n\t\tupgradeButton.click = upgradeButton.tap = onUpgradeButton;\r\n\t}\r\n\t\r\n\tprivate function showComfirmAssets () : Void {\r\n\t\taddChild(valideButton);\r\n\t\taddChild(disableButton);\r\n\t\taddChild(priceTxt);\r\n\t}\r\n\t\r\n\tprivate function hideComfirmAssets () : Void {\r\n\t\tremoveChild(valideButton);\r\n\t\tremoveChild(disableButton);\r\n\t\tremoveChild(priceTxt);\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.ui;\r\nimport motion.Actuate;\r\nimport motion.easing.Elastic;\r\n\r\n/**\r\n * Classe de base des PopIn\r\n * Toutes les popin d'interface héritent de cette classe\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Popin extends UIComponent\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tjuicyOpen();\r\n\t}\r\n\t\r\n\tprivate function juicyOpen() : Void {\r\n\t\tscale.set(0.3, 0.3);\r\n\t\tActuate.tween(this.scale, 0.7, { x: 1, y : 1 } ).ease(Elastic.easeOut);\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.popin;\r\n\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.events.TouchEventType;\r\nimport com.isartdigital.utils.sounds.SoundManager;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport com.isartdigital.builder.game.GameManager;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n\r\n\t\r\n/**\r\n * Exemple de classe héritant de Popin\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Confirm extends Popin \r\n{\r\n\t\r\n\tprivate var background:Sprite;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Confirm\r\n\t */\r\n\tprivate static var instance: Confirm;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Confirm {\r\n\t\tif (instance == null) instance = new Confirm();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbackground = new Sprite(Texture.fromImage(Config.assetsPath+\"Confirm.png\"));\r\n\t\tbackground.anchor.set(0.5, 0.5);\r\n\t\taddChild(background);\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t\t\r\n\t\tonce(MouseEventType.CLICK,onClick);\r\n\t\tonce(TouchEventType.TAP,onClick);\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function test (pEvent:EventTarget):Void {\r\n\t\ttrace (pEvent);\r\n\t}\r\n\t\r\n\tprivate function onClick (pEvent:EventTarget): Void {\r\n\t\tSoundManager.getSound(\"click\").play();\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t\tGameManager.getInstance().start();\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n}","package com.isartdigital.builder.ui.popin;\r\n\r\nimport com.isartdigital.builder.ui.uimodule.ShopBuyHardButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopBuySoftButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopCloseButton;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport pixi.core.text.Text;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass LanternConfirm extends Popin\r\n{\r\n\tpublic static var BUYHARD:String = \"BUYHARDLANTERN\";\r\n\tpublic static var BUYSOFT:String = \"BUYSOFTLANTERN\";\r\n\t\r\n\tprivate var title:Text;\r\n\tprivate var priceHard:Text;\r\n\tprivate var priceSoft:Text;\r\n\t\r\n\tprivate var buyHard:ShopBuyHardButton;\r\n\tprivate var buySoft:ShopBuySoftButton;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tpriceHard = cast(getChildByName(\"LanternConfirmPriceHard\"));\r\n\t\tpriceSoft = cast(getChildByName(\"LanternConfirmPriceSoft\"));\r\n\t\t\r\n\t\tbuyHard = cast(getChildByName(\"ShopBuyHardButton\"));\r\n\t\tbuySoft = cast(getChildByName(\"ShopBuySoftButton\"));\r\n\t\t\r\n\t\tbuyHard.click = buyHard.tap = onBuyHardButton;\r\n\t\tbuySoft.click = buySoft.tap = onBuySoftButton;\r\n\t}\r\n\t\r\n\tprivate function onBuyHardButton(pEventTarget:EventTarget) : Void {\r\n\t\t//TO DO vérifier que le joueur peux acheter\r\n\t\tMain.getInstance().emit(BUYHARD);\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\tprivate function onBuySoftButton(pEventTarget:EventTarget) : Void {\r\n\t\t//TO DO vérifier que le joueur peux acheter\r\n\t\tMain.getInstance().emit(BUYSOFT);\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tbuyHard.destroy();\r\n\t\tbuySoft.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.ui.popin;\r\n\r\nimport com.isartdigital.builder.ui.items.RewardBuilding;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport pixi.core.text.Text;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass MainBuildingInfo extends Popin\r\n{\r\n\tprivate var rewardBuilding:RewardBuilding;\r\n\tprivate var mainBuildingInfoDescription:Text;\r\n\tprivate var mainBuildingInfoTitle:Text;\r\n\t\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\trewardBuilding = cast(getChildByName(\"RewardBuilding\"));\r\n\t\tmainBuildingInfoDescription = cast(getChildByName(\"MainBuildingInfoDescription\"));\r\n\t\tmainBuildingInfoTitle = cast(getChildByName(\"mainBuildingInfoTitle\"));\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\trewardBuilding.destroy();\r\n\t\tmainBuildingInfoDescription.destroy();\r\n\t\tmainBuildingInfoTitle.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.popin;\r\nimport com.isartdigital.builder.ui.uimodule.DisableButton;\r\nimport com.isartdigital.builder.ui.uimodule.ValideButton;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport pathfinder.Coordinate;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ParadeConfirm extends Popin\r\n{\r\n\r\n\t/**\r\n\t * instance unique de la classe ParadeConfirm\r\n\t */\r\n\tprivate static var instance: ParadeConfirm;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): ParadeConfirm {\r\n\t\tif (instance == null) instance = new ParadeConfirm();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate var valideButton:ValideButton;\r\n\tprivate var disableButton:DisableButton;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tvalideButton = cast(getChildByName(\"ValideButton\"));\r\n\t\tdisableButton = cast(getChildByName(\"DisableButton\"));\r\n\t\t\r\n\t\tvalideButton.click = valideButton.tap = onValide;\r\n\t\tdisableButton.click = disableButton.tap = onCancel;\r\n\t}\r\n\t\r\n\tprivate function onValide(pEvent:EventTarget) : Void {\r\n\t\ttrace(\"lunch parade\");\r\n\t\t//ParadeManager.getInstance().buildParade(60, 20);\r\n\t\t//ParadeManager.getInstance().moveParade(new Coordinate(50, 50));\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\t\r\n\tprivate function onCancel(pEvent:EventTarget) : Void {\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tvalideButton.destroy();\r\n\t\tdisableButton.destroy();\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.popin;\r\n\r\nimport com.isartdigital.builder.ui.uimodule.RewardButton;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport pixi.core.text.Text;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ParadeReward extends Popin\r\n{\r\n\tprivate var title:Text;\r\n\tprivate var offering:Text;\r\n\tprivate var pimientos:Text;\r\n\tprivate var pesos:Text;\r\n\t\r\n\tprivate var button:RewardButton;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tbutton = cast(getChildByName(\"RewardButton\"));\r\n\t\t\r\n\t\tbutton.click = button.tap = onButtonClick;\r\n\t\t\r\n\t\ttitle = cast(getChildByName(\"ParadeRewardTitle_txt\"));\r\n\t\toffering = cast(getChildByName(\"ParadeRewardOffering_txt\"));\r\n\t\tpimientos = cast(getChildByName(\"ParadeRewardPimientos_txt\"));\r\n\t\tpesos = cast(getChildByName(\"ParadeRewardPesos_txt\"));\r\n\t}\r\n\t\r\n\tprivate function onButtonClick (pEvent:EventTarget) : Void {\r\n\t\t//TO DO add ressources to the player\r\n\t\t\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tbutton.destroy();\r\n\t\tpesos.destroy();\r\n\t\toffering.destroy();\r\n\t\tpimientos.destroy();\r\n\t\ttitle.destroy();\r\n\t\tsuper.destroy();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.popin;\r\n\r\nimport com.isartdigital.builder.ui.uimodule.RewardButton;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass UpgradeReward extends Popin\r\n{\r\n\tprivate var buttonComfirm:RewardButton;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Shop\r\n\t */\r\n\tprivate static var instance: UpgradeReward;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): UpgradeReward {\r\n\t\tif (instance == null) instance = new UpgradeReward();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tbuttonComfirm = cast(getChildByName(\"RewardButton\"), RewardButton);\r\n\t\tbuttonComfirm.click = tap = onComfirmClick;\r\n\t}\r\n\t\r\n\tprivate function onComfirmClick (pEvent:EventTarget) : Void {\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tbuttonComfirm.destroy();\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.ui.screens;\r\n\r\nimport com.isartdigital.builder.game.sprites.buildings.const.BuildingNames;\r\nimport com.isartdigital.builder.game.type.JsonNames;\r\nimport com.isartdigital.builder.ui.items.ItemBuilding;\r\nimport com.isartdigital.builder.ui.items.ShopBuilding;\r\nimport com.isartdigital.builder.ui.items.ShopRessource;\r\nimport com.isartdigital.builder.ui.uimodule.DotButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopBuildingButton;\r\nimport com.isartdigital.builder.ui.uimodule.ShopRessourceButton;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport com.isartdigital.utils.ui.Screen;\r\nimport motion.Actuate;\r\nimport motion.easing.Bounce;\r\nimport motion.easing.Elastic;\r\nimport motion.easing.Expo;\r\nimport motion.easing.Linear;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.text.Text;\r\nimport pixi.interaction.EventTarget;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Roman CHEVASSU\r\n */\r\nclass Shop extends Popin \r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe Shop\r\n\t */\r\n\tprivate static var instance: Shop;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Shop {\r\n\t\tif (instance == null) instance = new Shop();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\tprivate static inline var BUILDING_SHOP:String = \"BUILDING\";\r\n\tprivate static inline var RESSOURCE_SHOP:String = \"RESSOURCE\";\r\n\t\r\n\tprivate var buildingShop:ShopBuilding;\r\n\tprivate var ressourceShop:ShopRessource;\t\r\n\t\r\n\tprivate var ressourceButton:ShopRessourceButton;\r\n\tprivate var buildingButton:ShopBuildingButton;\r\n\t\r\n\tprivate var ressourceTitle:Text;\r\n\tprivate var buildingTitle:Text;\r\n\t\r\n\t\r\n\tprivate var activeShop:String = BUILDING_SHOP;\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t\t\r\n\t\tbuildingShop = cast(getChildByName(\"ShopBuilding\"), ShopBuilding);\r\n\t\tressourceShop = cast(getChildByName(\"ShopRessource\"), ShopRessource);\r\n\t\t\r\n\t\tressourceButton = cast(getChildByName(\"ShopRessourceButton\"), ShopRessourceButton);\r\n\t\tbuildingButton = cast(getChildByName(\"ShopBuildingButton\"), ShopBuildingButton);\r\n\t\t\r\n\t\tressourceButton.click = ressourceButton.tap = onRessourceClick;\r\n\t\tbuildingButton.click = buildingButton.tap = onBuildingClick;\r\n\t\t\r\n\t\tchangeShop();\r\n\t}\r\n\t\r\n\tprivate function onBuildingClick (pEvent:EventTarget) : Void {\r\n\t\tactiveShop = BUILDING_SHOP;\r\n\t\tchangeShop();\r\n\t}\r\n\t\r\n\tprivate function onRessourceClick (pEvent:EventTarget) : Void {\r\n\t\tactiveShop = RESSOURCE_SHOP;\r\n\t\tchangeShop();\r\n\t}\r\n\t\r\n\tprivate function changeShop () : Void {\t\t\r\n\t\tswitch (activeShop) \r\n\t\t{\r\n\t\t\tcase RESSOURCE_SHOP: {\r\n\t\t\t\tbuildingButton.setUnActive();\r\n\t\t\t\tressourceButton.setActive();\r\n\t\t\t\tbuildingShop.visible = false;\r\n\t\t\t\tressourceShop.visible = true;\r\n\t\t\t}\r\n\t\t\tcase BUILDING_SHOP: {\r\n\t\t\t\tbuildingButton.setActive();\r\n\t\t\t\tressourceButton.setUnActive();\r\n\t\t\t\tressourceShop.visible = false;\r\n\t\t\t\tbuildingShop.visible = true;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\ttrace(\"Destroy Shop\");\r\n\t\tbuildingShop.destroy();\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.builder.ui.screens;\r\n\r\nimport com.isartdigital.builder.ui.popin.Confirm;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.events.TouchEventType;\r\nimport com.isartdigital.utils.sounds.SoundManager;\r\nimport com.isartdigital.utils.ui.Screen;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\n\r\n\t\r\n/**\r\n * Exemple de classe héritant de Screen\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass TitleCard extends Screen \r\n{\r\n\tprivate var background:Sprite;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe TitleCard\r\n\t */\r\n\tprivate static var instance: TitleCard;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): TitleCard {\r\n\t\tif (instance == null) instance = new TitleCard();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tbuild();\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n}","package com.isartdigital.utils.ui;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.game.BoxType;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport pixi.core.text.Text;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * Classe de base des boutons\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Button extends StateGraphic\r\n{\r\n\t\r\n\tprivate static inline var UP:Int = 0;\r\n\tprivate static inline var OVER:Int = 1;\r\n\tprivate static inline var DOWN:Int = 2;\r\n\t\r\n\tprivate var txt:Text;\r\n\t\r\n\tprivate var upStyle:TextStyle;\r\n\tprivate var overStyle:TextStyle;\r\n\tprivate var downStyle:TextStyle;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t\tsuper();\r\n\t\tboxType = BoxType.SELF;\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t\t\r\n\t\ton(MouseEventType.MOUSE_OVER, _mouseOver);\r\n\t\ton(MouseEventType.MOUSE_DOWN, _mouseDown);\r\n\t\ton(MouseEventType.CLICK, _click);\r\n\t\ton(MouseEventType.MOUSE_OUT, _mouseOut);\r\n\t\ton(MouseEventType.MOUSE_UP_OUTSIDE, _mouseOut);\r\n\r\n\t\tcreateText();\r\n\t\t\r\n\t\tstart();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function createText ():Void {\r\n\t\tupStyle={ font: \"80px Arial\", fill: \"#000000\", align:\"center\"};\r\n\t\toverStyle={ font: \"80px Arial\", fill: \"#AAAAAA\", align:\"center\"};\r\n\t\tdownStyle = { font: \"80px Arial\", fill: \"#FFFFFF\", align:\"center\" };\r\n\t\ttxt = new Text(\"\",upStyle);\r\n\t\ttxt.anchor.set(0.5, 0.5);\r\n\t}\r\n\t\r\n\tpublic function setText(pText:String):Void {\r\n\t\ttxt.text=pText;\r\n\t}\r\n\t\r\n\toverride private function setModeNormal ():Void {\r\n\t\tsetState(DEFAULT_STATE);\t\t\r\n\t\tuntyped anim.gotoAndStop(UP);\r\n\t\taddChild(txt);\r\n\t\tsuper.setModeNormal();\r\n\t}\r\n\t\r\n\tprivate function _mouseVoid ():Void {}\r\n\r\n\tprivate function _click (pEvent:EventTarget): Void {\r\n\t\tuntyped anim.gotoAndStop(UP);\r\n\t\ttxt.style=upStyle;\r\n\t}\t\r\n\t\r\n\tprivate function _mouseDown (pEvent:EventTarget): Void {\r\n\t\tuntyped anim.gotoAndStop(DOWN);\r\n\t\ttxt.style=downStyle;\r\n\t}\r\n\t\r\n\tprivate function _mouseOver (pEvent:EventTarget): Void {\r\n\t\tuntyped anim.gotoAndStop(OVER);\r\n\t\ttxt.style=overStyle;\r\n\t}\r\n\t\r\n\tprivate function _mouseOut (pEvent:EventTarget): Void {\r\n\t\tuntyped anim.gotoAndStop(UP);\r\n\t\ttxt.style=upStyle;\r\n\t}\r\n\t\r\n\toverride public function destroy ():Void {\r\n\t\toff(MouseEventType.MOUSE_OVER, _mouseOver);\r\n\t\toff(MouseEventType.MOUSE_DOWN, _mouseDown);\r\n\t\toff(MouseEventType.CLICK, _click);\r\n\t\toff(MouseEventType.MOUSE_OUT, _mouseOut);\r\n\t\toff(MouseEventType.MOUSE_UP_OUTSIDE, _mouseOut);\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.ui.uimodule;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ButtonsBuilding extends Button\r\n{\t\r\n\tprivate var eventEmit:String;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t\tclick = tap = onClickEvent;\r\n\t\r\n\t}\r\n\t\r\n\tprivate function onClickEvent(pEvent:EventTarget) : Void\r\n\t{\r\n\t\tMain.getInstance().emit(eventEmit);\r\n\t\tpEvent.stopPropagation();\r\n\t}\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUDEvent;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ColorButton extends ButtonsBuilding\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\teventEmit = BaseBuildingHUDEvent.PAINT_BUTTON;\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUDEvent;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.display.FlumpMovie;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass DeleteButton extends ButtonsBuilding\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\teventEmit = BaseBuildingHUDEvent.DELETE_BUTTON;\r\n\t\tsuper();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass DisableButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\t\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t\ttrace(\"HIC BINCREAE\");\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.screens.Shop;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.display.FlumpMovie;\r\nimport pixi.display.FlumpSprite;\r\nimport pixi.extras.MovieClip;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass DotButton extends Button\r\n{\r\n\tpublic static var list:Array<DotButton> = new Array<DotButton> () ;\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t\tlist.push(this);\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Change l'asset du Dot en mode actif\r\n\t */\r\n\tpublic function setActive () : Void {\r\n\t\tuntyped anim.gotoAndStop(Button.DOWN);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Change l'asset du Dot en mode inactif\r\n\t */\r\n\tpublic function setInActive () : Void {\r\n\t\tuntyped anim.gotoAndStop(Button.UP);\r\n\t}\r\n\t\r\n\toverride function _click(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._click(pEvent);\r\n\t}\r\n\t\r\n\toverride function _mouseOut(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._mouseOut(pEvent);\r\n\t}\r\n\t\r\n\toverride function _mouseOver(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._mouseOver(pEvent);\r\n\t}\r\n\t\r\n\toverride public function destroy():Void \r\n\t{\r\n\t\tlist.splice(list.indexOf(this), 1);\r\n\t\tsuper.destroy();\r\n\t}\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass GoldButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass LeftButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\t\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUDEvent;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass MoveButton extends ButtonsBuilding\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\teventEmit = BaseBuildingHUDEvent.MOVE_BUTTON;\r\n\t}\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass OfferingButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.popin.MainBuildingInfo;\r\nimport com.isartdigital.builder.ui.popin.ParadeConfirm;\r\nimport com.isartdigital.builder.ui.popin.ParadeReward;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ParadeButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\tclick = tap = onClick;\r\n\t}\r\n\t\r\n\tprivate function onClick(pEvent:EventTarget) : Void {\r\n\t\tUIManager.getInstance().openPopin(ParadeConfirm.getInstance());\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass RewardButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass RightButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopOnglet extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function setActive() : Void {\r\n\t\tuntyped anim.gotoAndStop(Button.DOWN);\r\n\t}\r\n\t\r\n\tpublic function setUnActive() : Void {\r\n\t\tuntyped anim.gotoAndStop(Button.UP);\r\n\t}\r\n\t\r\n\toverride function _mouseOut(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._mouseOut(pEvent);\r\n\t}\r\n\t\r\n\toverride function _click(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._click(pEvent);\r\n\t}\r\n\t\r\n\toverride function _mouseOver(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._mouseOver(pEvent);\r\n\t}\r\n\t\r\n\toverride function _mouseDown(pEvent:EventTarget):Void \r\n\t{\r\n\t\t//super._mouseDown(pEvent);\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopBuildingButton extends ShopOnglet\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t}\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.screens.Shop;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\ttap = click = onClick;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function onClick (pEvent:EventTarget): Void {\r\n\t\tUIManager.getInstance().openPopin(Shop.getInstance());\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopBuyHardButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopBuySoftButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\nimport pixi.interaction.EventTarget;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopCloseButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\ttap = click = onClick;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function onClick (pEvent:EventTarget) : Void {\r\n\t\tUIManager.getInstance().closeCurrentPopin();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopRessourceButton extends ShopOnglet\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass SpiceButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.builder.ui.hud.BaseBuildingHUDEvent;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass UpgradeButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass UpgradeDisableButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass UpgradeValideButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t\tinteractive = true;\r\n\t\tbuttonMode = true;\r\n\t}\r\n\t\r\n}","package com.isartdigital.builder.ui.uimodule;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpMovieAnimFactory;\r\nimport com.isartdigital.utils.ui.Button;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ValideButton extends Button\r\n{\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tfactory = new FlumpMovieAnimFactory();\r\n\t\tsuper();\r\n\t}\r\n\t\r\n}","package com.isartdigital.services;\r\nimport com.isartdigital.utils.Config;\r\nimport com.isartdigital.utils.events.LoadEventType;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.events.TouchEventType;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport com.isartdigital.utils.ui.Popin;\r\nimport com.isartdigital.utils.ui.UIPosition;\r\nimport haxe.Json;\r\nimport haxe.Timer;\r\nimport js.Browser;\r\nimport js.html.VideoElement;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.text.Text;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.interaction.EventTarget;\r\nimport pixi.loaders.Loader;\r\n\r\n/**\r\n * Service permettant d'afficher des publicités des autres Builder\r\n * @author Mathieu Anthoine\r\n */\r\nclass Ads\r\n{\r\n\r\n\t/**\r\n\t * Publicité vidéo vu jusqu'au bout\r\n\t */\r\n\tpublic static inline var TYPE_END:String = \"end\";\r\n\t\r\n\t/**\r\n\t * Annulation du visionnage d'une publicité vidéo ou fermeture d'une publicité image\r\n\t */\r\n\tpublic static inline var TYPE_CANCEL:String = \"cancel\";\r\n\t\r\n\t/**\r\n\t * Fermeture d'une publicité image\r\n\t */\r\n\tpublic static inline var TYPE_CLOSE:String = \"close\";\r\n\t\r\n\t/**\r\n\t * click sur la publicité\r\n\t */\r\n\tpublic static inline var TYPE_CLICK:String = \"click\";\r\n\t\r\n\t/**\r\n\t * pub image\r\n\t */\r\n\tprivate static inline var IMAGE:String = \"image\";\r\n\r\n\t/**\r\n\t * pub vidéo\r\n\t */\r\n\tprivate static inline var MOVIE:String = \"movie\";\t\r\n\t\r\n\tprivate static var current:Ad;\r\n\t\r\n\tprivate static var callback:Dynamic->Void;\t\r\n\r\n\t/**\r\n\t * Demande l'affichage d'un publicité image\r\n\t * @param\tpCallback fonction à appelée une fois la publicité affichée et quittée\r\n\t * @return true si la demande d'affichage est acceptée, sinon false (quand une autre pub est en cours)\r\n\t */\r\n\tpublic static function getImage (pCallback:Dynamic->Void): Bool {\r\n\t\treturn askForImage(pCallback);\r\n\t}\r\n\t\r\n\tprivate static function askForImage (pCallback:Dynamic->Void,pVideo:String=\"\"):Bool {\r\n\t\tif (current!=null || (Config.data.ads!=null && !Config.data.ads)) return false;\r\n\t\t\r\n\t\tvar lRequest:HttpService = initService(pCallback);\r\n\t\tlRequest.addParameter(\"ad\", IMAGE);\r\n\t\tif (pVideo!=\"\") lRequest.addParameter(\"movie\", pVideo);\r\n\t\tlRequest.request(true);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Demande l'affichage d'un publicité vidéo\r\n\t * @param\tpCallback fonction à appelée une fois la publicité affichée et quittée\r\n\t * @return true si la demande d'affichage est acceptée, sinon false (quand une autre pub est en cours)\r\n\t */\r\n\tpublic static function getMovie (pCallback:Dynamic->Void): Bool {\r\n\t\tif (current!=null || (Config.data.ads!=null && !Config.data.ads)) return false;\r\n\t\t\r\n\t\tvar lRequest:HttpService = initService(pCallback);\r\n\t\tlRequest.addParameter(\"ad\", MOVIE);\r\n\t\tlRequest.request(true);\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tprivate static function initService (pCallback:Dynamic->Void):HttpService {\r\n\t\tvar lRequest:HttpService = new HttpService(pCallback);\r\n\t\tcallback = pCallback;\r\n\t\tlRequest.addParameter(\"type\", DeviceCapabilities.textureType);\r\n\t\tlRequest.addParameter(\"lang\", Config.language);\r\n\t\tlRequest.onData = onData;\r\n\t\treturn lRequest;\r\n\t}\r\n\t\r\n\tprivate static function onData (pData:String): Void {\r\n\t\tvar lData:Dynamic = Json.parse(pData);\r\n\t\t\r\n\t\tif (lData.type == MOVIE) current=new AdMovie(lData.id,lData.url,lData.target);\r\n\t\telse current=new AdImage(lData.id,lData.url,lData.target);\r\n\t}\r\n\t\r\n\tprivate static function onQuit (pClose:String):Void {\r\n\t\tvar lId:String = current.id;\r\n\t\tcurrent.close();\r\n\t\tcurrent = null;\r\n\t\t\r\n\t\tif (pClose == TYPE_END) askForImage(callback, lId);\r\n\t\telse {\r\n\t\t\tif (pClose == TYPE_CLOSE || pClose == TYPE_CLICK) {\r\n\t\t\t\tvar lRequest:HttpService = new HttpService();\t\t\t\r\n\t\t\t\tlRequest.addParameter(\"close\", pClose == TYPE_CLICK ? TYPE_CLICK : IMAGE);\r\n\t\t\t\tlRequest.request(true);\r\n\t\t\t}\r\n\t\t\tcallback({close:pClose});\r\n\t\t\tcallback = null;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n}\r\n\r\nprivate class Ad extends Popin {\r\n\t\r\n\tpublic var id:String;\r\n\tprivate var url:String;\r\n\tprivate var target:String;\r\n\tprivate var content:Sprite;\r\n\tprivate var btnQuit:Container;\r\n\tprivate var txtQuit:Text;\r\n\tprivate var timer:Timer;\r\n\tprivate var timerError:Timer;\r\n\tprivate var duration:Int;\r\n\t\r\n\tprivate static inline var CROSS_SIZE:Int = 20;\r\n\tprivate static inline var QUIT_SIZE:Int = 40;\t\r\n\t\r\n\tpublic function new (pId:String,pUrl:String,pTarget:String) {\r\n\t\tsuper();\r\n\t\tmodalImage = \"assets/black_bg.png\";\r\n\t\t\r\n\t\tid = pId;\r\n\t\turl = pUrl;\r\n\t\ttarget = pTarget;\r\n\t\t\r\n\t\tbtnQuit = new Container();\r\n\t\taddChild (btnQuit);\r\n\t\t\r\n\t\tpositionables.unshift( { item:btnQuit, align:Math.random() < 0.5 ? UIPosition.TOP_RIGHT : UIPosition.TOP_LEFT , offsetX:80, offsetY:80 } );\r\n\t\t\r\n\t\tvar lCircle:Graphics = new Graphics();\r\n\t\tlCircle.lineStyle(4, 0x000000);\r\n\t\tlCircle.beginFill(0xFFFFFF);\r\n\t\tlCircle.drawCircle(0, 0, QUIT_SIZE);\r\n\t\tlCircle.endFill();\r\n\t\tbtnQuit.addChild(lCircle);\r\n\t\t\r\n\t\ttxtQuit = new Text(\"\", { font: \"62px Arial\", fill: \"#000000\", align: \"center\" } );\r\n\t\ttxtQuit.anchor.set(0.5, 0.5);\r\n\t\tbtnQuit.addChild(txtQuit);\r\n\t\tbtnQuit.interactive = true;\r\n\t\tbtnQuit.visible = false;\r\n\t\ttimerError = new Timer(15000);\r\n\t\ttimerError.run = onError;\r\n\t\t\r\n\t\tx = GameStage.getInstance().safeZone.width / 2;\r\n\t\ty = GameStage.getInstance().safeZone.height / 2;\r\n\t\t\r\n\t\tGameStage.getInstance().addChild(this);\r\n\t\topen();\r\n\t\t\t\r\n\t}\r\n\t\r\n\tprivate function onError ():Void {\r\n\t\tif (!btnQuit.visible) {\r\n\t\t\tbtnQuit.visible = true;\r\n\t\t\tduration = 0;\r\n\t\t\tonTimer();\r\n\t\t}\r\n\t\ttimerError.stop();\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate function onTimer():Void {\r\n\t\tif (duration <= 0) {\r\n\t\t\tif (timer!=null) timer.stop();\r\n\t\t\tallowQuit();\r\n\t\t} else {\r\n\t\t\ttxtQuit.text = Std.string(duration);\r\n\t\t}\r\n\t\tduration--;\r\n\t}\r\n\t\r\n\tprivate function allowQuit ():Void {\r\n\t\tbtnQuit.removeChild(txtQuit);\r\n\t\tvar lCross:Graphics = new Graphics();\r\n\t\tlCross.lineStyle(8, 0x000000);\r\n\t\tlCross.moveTo( -CROSS_SIZE, -CROSS_SIZE);\r\n\t\tlCross.lineTo(CROSS_SIZE, CROSS_SIZE);\r\n\t\tlCross.moveTo( -CROSS_SIZE, CROSS_SIZE);\r\n\t\tlCross.lineTo(CROSS_SIZE, -CROSS_SIZE);\r\n\t\tbtnQuit.addChild(lCross);\r\n\t\t\r\n\t\tbtnQuit.buttonMode = true;\r\n\t\tbtnQuit.once(MouseEventType.CLICK, onQuit);\r\n\t\tbtnQuit.once(TouchEventType.TAP, onQuit);\r\n\t}\r\n\t\r\n\tprivate function createContent ():Void {}\r\n\t\r\n\tprivate function onComplete(?pEvent:Loader=null):Void {\r\n\t\tcreateContent();\r\n\t\tcontent.anchor.set(0.5, 0.5);\r\n\t\tcontent.scale.set(1 /DeviceCapabilities.textureRatio , 1 / DeviceCapabilities.textureRatio);\r\n\t\taddChildAt(content, 0);\r\n\t\t\r\n\t\ttimer = new Timer(1000);\r\n\t\tduration = Math.random() < 0.5 ? 0 : 5;\r\n\t\ttimer.run = onTimer;\r\n\t\tonTimer();\r\n\t\tbtnQuit.visible = true;\r\n\t}\r\n\t\r\n\tprivate function quit (pType:String):Void {\r\n\t\tGameStage.getInstance().removeChild(this);\r\n\t\tuntyped Ads.onQuit(pType);\r\n\t}\r\n\t\r\n\tprivate function onQuit (pEvent:EventTarget):Void {\r\n\t}\r\n\t\r\n\toverride public function close (): Void {\r\n\t\tif (timer!=null) timer.stop();\r\n\t\tif (timerError!=null) timerError.stop();\r\n\t\tsuper.close();\r\n\t}\r\n}\r\n\r\nprivate class AdImage extends Ad {\r\n\tpublic function new (pId:String,pUrl:String,pTarget:String) {\r\n\t\tsuper(pId,pUrl, pTarget);\r\n\t\t\r\n\t\tvar lLoader:Loader = new Loader();\r\n\t\tlLoader.add(url);\r\n\t\tlLoader.once(LoadEventType.COMPLETE, onComplete);\r\n\t\tlLoader.load();\r\n\t}\r\n\t\r\n\toverride private function onComplete (?pEvent:Loader = null):Void {\r\n\t\tsuper.onComplete(pEvent);\r\n\t\tcontent.interactive = true;\r\n\t\tcontent.buttonMode = true;\r\n\t\tcontent.once(MouseEventType.CLICK, onOpen);\r\n\t\tcontent.once(TouchEventType.TAP, onOpen);\r\n\t}\r\n\t\r\n\toverride private function createContent ():Void {\r\n\t\tcontent = new Sprite(Texture.fromImage(url));\r\n\t}\r\n\t\r\n\tprivate function onOpen (pEvent:EventTarget):Void {\r\n\t\tBrowser.window.open(target+\"?\"+Type.getClassName(Type.getClass(this)).split(\".\").pop());\r\n\t\tquit(Ads.TYPE_CLICK);\r\n\t}\r\n\t\r\n\toverride private function onQuit (pEvent:EventTarget):Void {\r\n\t\tquit (Ads.TYPE_CLOSE);\r\n\t}\r\n}\r\n\r\nprivate class AdMovie extends Ad {\r\n\t\r\n\tpublic function new (pId:String,pUrl:String,pTarget:String) {\r\n\t\tsuper(pId,pUrl, pTarget);\r\n\t\tonComplete();\r\n\t}\r\n\t\r\n\toverride private function onComplete (?pEvent:Loader=null):Void {\r\n\t\tsuper.onComplete(pEvent);\r\n\t\tif (DeviceCapabilities.textureType == DeviceCapabilities.TEXTURE_MD || DeviceCapabilities.textureType == DeviceCapabilities.TEXTURE_LD) {\r\n\t\t\tcontent.scale.x *= 0.8;\r\n\t\t\tcontent.scale.y *= 0.8;\r\n\t\t}\r\n\t}\r\n\t\r\n\toverride private function createContent ():Void {\r\n\t\tvar texture:Texture = Texture.fromVideoUrl(url);\r\n\t\tvar source:VideoElement = texture.baseTexture.source;\r\n\t\t\r\n\t\tcontent = new Sprite(texture);\r\n\t\tcast(content.texture.baseTexture.source, VideoElement).onended = onEnded;\r\n\t\t\r\n\t}\r\n\r\n\toverride private function onQuit (pEvent:EventTarget):Void {\r\n\t\tquit (Ads.TYPE_CANCEL);\r\n\t}\t\r\n\t\r\n\tprivate function onEnded ():Void {\r\n\t\tquit(Ads.TYPE_END);\r\n\t}\r\n\t\r\n\toverride public function close ():Void {\r\n\t\tif (content != null) {\r\n\t\t\tcast(content.texture.baseTexture.source, VideoElement).onended = null;\r\n\t\t\tcast(content.texture.baseTexture.source, VideoElement).pause();\r\n\t\t}\r\n\t\tsuper.close();\r\n\t}\r\n\t\r\n}\r\n","package com.isartdigital.services;\r\nimport com.isartdigital.builder.ui.hud.Hud;\r\nimport com.isartdigital.utils.events.LoadEventType;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.sprites.Sprite;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.filters.color.ColorMatrixFilter;\r\nimport pixi.filters.gray.GrayFilter;\r\n\r\n/**\r\n * Class qui permet de charger une image depuis un domaine externe\r\n * @author Dorian MILLIERE\r\n */\r\nclass FacebookPicture\r\n{\r\n\tprivate static var picture:Sprite;\r\n\tprivate static var picturePath:String;\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic static function load(path:String):Void {\r\n\t\tpicturePath = path;\r\n\t\tvar loader:GameLoader = new GameLoader();\r\n\t\tloader.addAssetFile(picturePath);\r\n\t\tloader.once(LoadEventType.COMPLETE, onPictureLoaded);\r\n\t\tloader.load();\r\n\t}\r\n\t\r\n\tpublic static function onPictureLoaded():Void {\r\n\t\tfillPictureWithTexture();\r\n\t\taddBlackAndWhiteFilter();\r\n\t\tmovePictureIntoFrame();\r\n\t}\r\n\t\r\n\tprivate static function fillPictureWithTexture():Void {\r\n\t\tpicture = new Sprite (Texture.fromImage(picturePath));\r\n\t}\r\n\t\r\n\tprivate static function addBlackAndWhiteFilter():Void {\r\n\t\tvar filter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tfilter.blackAndWhite(false);\r\n        picture.filters = [filter];\r\n\t}\r\n\t\r\n\tprivate static function movePictureIntoFrame():Void {\r\n\t\tvar hudContainer:Container = GameStage.getInstance().getHudContainer();\r\n\t\tvar hud:Hud = Hud.getInstance();\r\n\t\tpicture.x = hud.levelComponent.x - 310;\r\n\t\tpicture.y = hud.levelComponent.y - 160;\r\n\t\tpicture.height = 210;\r\n\t\tpicture.width = 210;\r\n\t\thudContainer.addChild(picture);\r\n\t\thudContainer.children.unshift(hudContainer.children.pop());\r\n\t}\r\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n#if sys\n\nimport sys.net.Host;\nimport sys.net.Socket;\n\nprivate typedef AbstractSocket = {\n\tvar input(default,null) : haxe.io.Input;\n\tvar output(default,null) : haxe.io.Output;\n\tfunction connect( host : Host, port : Int ) : Void;\n\tfunction setTimeout( t : Float ) : Void;\n\tfunction write( str : String ) : Void;\n\tfunction close() : Void;\n\tfunction shutdown( read : Bool, write : Bool ) : Void;\n}\n\n#end\n\n/**\n\tThis class can be used to handle Http requests consistently across\n\tplatforms. There are two intended usages:\n\n\t- call haxe.Http.requestUrl(url) and receive the result as a String (not\n\tavailable on flash)\n\t- create a new haxe.Http(url), register your callbacks for onData, onError\n\tand onStatus, then call request().\n**/\nclass Http {\n\n\t/**\n\t\tThe url of `this` request. It is used only by the request() method and\n\t\tcan be changed in order to send the same request to different target\n\t\tUrls.\n\t**/\n\tpublic var url : String;\n\tpublic var responseData(default, null) : Null<String>;\n#if sys\n\tpublic var noShutdown : Bool;\n\tpublic var cnxTimeout : Float;\n\tpublic var responseHeaders : Map<String,String>;\n\tvar chunk_size : Null<Int>;\n\tvar chunk_buf : haxe.io.Bytes;\n\tvar file : { param : String, filename : String, io : haxe.io.Input, size : Int, mimeType : String };\n#elseif js\n\tpublic var async : Bool;\n#end\n\tvar postData : String;\n\tvar headers : List<{ header:String, value:String }>;\n\tvar params : List<{ param:String, value:String }>;\n\n\t#if sys\n\tpublic static var PROXY : { host : String, port : Int, auth : { user : String, pass : String } } = null;\n\t#end\n\n\t/**\n\t\tCreates a new Http instance with `url` as parameter.\n\n\t\tThis does not do a request until request() is called.\n\n\t\tIf `url` is null, the field url must be set to a value before making the\n\t\tcall to request(), or the result is unspecified.\n\n\t\t(Php) Https (SSL) connections are allowed only if the OpenSSL extension\n\t\tis enabled.\n\t**/\n\tpublic function new( url : String ) {\n\t\tthis.url = url;\n\t\theaders = new List<{ header:String, value:String }>();\n\t\tparams = new List<{ param:String, value:String }>();\n\n\t\t#if js\n\t\tasync = true;\n\t\t#elseif sys\n\t\tcnxTimeout = 10;\n\t\t#end\n\t\t#if php\n\t\tnoShutdown = ! untyped __call__('function_exists', 'stream_socket_shutdown');\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the header identified as `header` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setHeader( header : String, value : String ):Http {\n\t\theaders = Lambda.filter(headers, function(h) return h.header != header);\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addHeader( header : String, value : String ):Http {\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\t/**\n\t\tSets the parameter identified as `param` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setParameter( param : String, value : String ):Http {\n\t\tparams = Lambda.filter(params, function(p) return p.param != param);\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addParameter( param : String, value : String ):Http {\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\t/**\n\t\tSets the post data of `this` Http request to `data`.\n\n\t\tThere can only be one post data per request. Subsequent calls overwrite\n\t\tthe previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostData( data : String ):Http {\n\t\tpostData = data;\n\t\treturn this;\n\t}\n\n\t#if (js || flash)\n\n\t#if js\n\tvar req:js.html.XMLHttpRequest;\n\t#elseif flash\n\tvar req:flash.net.URLLoader;\n\t#end\n\n\t/**\n\t\tCancels `this` Http request if `request` has been called and a response\n\t\thas not yet been received.\n\t**/\n\tpublic function cancel()\n\t{\n\t\tif (req == null) return;\n\t\t#if js\n\t\treq.abort();\n\t\t#elseif flash\n\t\treq.close();\n\t\t#end\n\t\treq = null;\n\t}\n\t#end\n\n\t/**\n\t\tSends `this` Http request to the Url specified by `this.url`.\n\n\t\tIf `post` is true, the request is sent as POST request, otherwise it is\n\t\tsent as GET request.\n\n\t\tDepending on the outcome of the request, this method calls the\n\t\tonStatus(), onError() or onData() callback functions.\n\n\t\tIf `this.url` is null, the result is unspecified.\n\n\t\tIf `this.url` is an invalid or inaccessible Url, the onError() callback\n\t\tfunction is called.\n\n\t\t(Js) If `this.async` is false, the callback functions are called before\n\t\tthis method returns.\n\t**/\n\tpublic function request( ?post : Bool ) : Void {\n\t\tvar me = this;\n\t#if js\n\t\tme.responseData = null;\n\t\tvar r = req = js.Browser.createXMLHttpRequest();\n\t\tvar onreadystatechange = function(_) {\n\t\t\tif( r.readyState != 4 )\n\t\t\t\treturn;\n\t\t\tvar s = try r.status catch( e : Dynamic ) null;\n\t\t\tif ( s != null ) {\n\t\t\t\t// If the request is local and we have data: assume a success (jQuery approach):\n\t\t\t\tvar protocol = js.Browser.location.protocol.toLowerCase();\n\t\t\t\tvar rlocalProtocol = ~/^(?:about|app|app-storage|.+-extension|file|res|widget):$/;\n\t\t\t\tvar isLocal = rlocalProtocol.match( protocol );\n\t\t\t\tif ( isLocal ) {\n\t\t\t\t\ts = r.responseText != null ? 200 : 404;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( s == untyped __js__(\"undefined\") )\n\t\t\t\ts = null;\n\t\t\tif( s != null )\n\t\t\t\tme.onStatus(s);\n\t\t\tif( s != null && s >= 200 && s < 400 ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onData(me.responseData = r.responseText);\n\t\t\t}\n\t\t\telse if ( s == null ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect or resolve host\");\n\t\t\t}\n\t\t\telse switch( s ) {\n\t\t\tcase 12029:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect to host\");\n\t\t\tcase 12007:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Unknown host\");\n\t\t\tdefault:\n\t\t\t\tme.req = null;\n\t\t\t\tme.responseData = r.responseText;\n\t\t\t\tme.onError(\"Http Error #\"+r.status);\n\t\t\t}\n\t\t};\n\t\tif( async )\n\t\t\tr.onreadystatechange = onreadystatechange;\n\t\tvar uri = postData;\n\t\tif( uri != null )\n\t\t\tpost = true;\n\t\telse for( p in params ) {\n\t\t\tif( uri == null )\n\t\t\t\turi = \"\";\n\t\t\telse\n\t\t\t\turi += \"&\";\n\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t}\n\t\ttry {\n\t\t\tif( post )\n\t\t\t\tr.open(\"POST\",url,async);\n\t\t\telse if( uri != null ) {\n\t\t\t\tvar question = url.split(\"?\").length <= 1;\n\t\t\t\tr.open(\"GET\",url+(if( question ) \"?\" else \"&\")+uri,async);\n\t\t\t\turi = null;\n\t\t\t} else\n\t\t\t\tr.open(\"GET\",url,async);\n\t\t} catch( e : Dynamic ) {\n\t\t\tme.req = null;\n\t\t\tonError(e.toString());\n\t\t\treturn;\n\t\t}\n\t\tif( !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") && post && postData == null )\n\t\t\tr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n\n\t\tfor( h in headers )\n\t\t\tr.setRequestHeader(h.header,h.value);\n\t\tr.send(uri);\n\t\tif( !async )\n\t\t\tonreadystatechange(null);\n\t#elseif flash\n\t\tme.responseData = null;\n\t\tvar loader = req = new flash.net.URLLoader();\n\t\tloader.addEventListener( \"complete\", function(e) {\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onData( loader.data );\n\t\t});\n\t\tloader.addEventListener( \"httpStatus\", function(e:flash.events.HTTPStatusEvent){\n\t\t\t// on Firefox 1.5, Flash calls onHTTPStatus with 0 (!??)\n\t\t\tif( e.status != 0 )\n\t\t\t\tme.onStatus( e.status );\n\t\t});\n\t\tloader.addEventListener( \"ioError\", function(e:flash.events.IOErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onError(e.text);\n\t\t});\n\t\tloader.addEventListener( \"securityError\", function(e:flash.events.SecurityErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.onError(e.text);\n\t\t});\n\n\t\t// headers\n\t\tvar param = false;\n\t\tvar vars = new flash.net.URLVariables();\n\t\tfor( p in params ){\n\t\t\tparam = true;\n\t\t\tReflect.setField(vars,p.param,p.value);\n\t\t}\n\t\tvar small_url = url;\n\t\tif( param && !post ){\n\t\t\tvar k = url.split(\"?\");\n\t\t\tif( k.length > 1 ) {\n\t\t\t\tsmall_url = k.shift();\n\t\t\t\tvars.decode(k.join(\"?\"));\n\t\t\t}\n\t\t}\n\t\t// Bug in flash player 9 ???\n\t\tvar bug = small_url.split(\"xxx\");\n\n\t\tvar request = new flash.net.URLRequest( small_url );\n\t\tfor( h in headers )\n\t\t\trequest.requestHeaders.push( new flash.net.URLRequestHeader(h.header,h.value) );\n\n\t\tif( postData != null ) {\n\t\t\trequest.data = postData;\n\t\t\trequest.method = \"POST\";\n\t\t} else {\n\t\t\trequest.data = vars;\n\t\t\trequest.method = if( post ) \"POST\" else \"GET\";\n\t\t}\n\n\t\ttry {\n\t\t\tloader.load( request );\n\t\t}catch( e : Dynamic ){\n\t\t\tme.req = null;\n\t\t\tonError(\"Exception: \"+Std.string(e));\n\t\t}\n\t#elseif sys\n\t\tvar me = this;\n\t\tvar output = new haxe.io.BytesOutput();\n\t\tvar old = onError;\n\t\tvar err = false;\n\t\tonError = function(e) {\n\t\t\t#if neko\n\t\t\tme.responseData = neko.Lib.stringReference(output.getBytes());\n\t\t\t#else\n\t\t\tme.responseData = output.getBytes().toString();\n\t\t\t#end\n\t\t\terr = true;\n\t\t\t// Resetting back onError before calling it allows for a second \"retry\" request to be sent without onError being wrapped twice\n\t\t\tonError = old;\n\t\t\tonError(e);\n\t\t}\n\t\tcustomRequest(post,output);\n\t\tif( !err )\n\t\t#if neko\n\t\t\tme.onData(me.responseData = neko.Lib.stringReference(output.getBytes()));\n\t\t#else\n\t\t\tme.onData(me.responseData = output.getBytes().toString());\n\t\t#end\n\t#end\n\t}\n\n#if sys\n\n\t/**\n      Note: Deprecated in 4.0\n\t **/\n\t@:noCompletion\n\tinline public function fileTransfert( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t    fileTransfer(argname, filename, file, size, mimeType);\n    }\n\n\tpublic function fileTransfer( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t\tthis.file = { param : argname, filename : filename, io : file, size : size, mimeType : mimeType };\n\t}\n\n\tpublic function customRequest( post : Bool, api : haxe.io.Output, ?sock : AbstractSocket, ?method : String  ) {\n\t\tthis.responseData = null;\n\t\tvar url_regexp = ~/^(https?:\\/\\/)?([a-zA-Z\\.0-9_-]+)(:[0-9]+)?(.*)$/;\n\t\tif( !url_regexp.match(url) ) {\n\t\t\tonError(\"Invalid URL\");\n\t\t\treturn;\n\t\t}\n\t\tvar secure = (url_regexp.matched(1) == \"https://\");\n\t\tif( sock == null ) {\n\t\t\tif( secure ) {\n\t\t\t\t#if php\n\t\t\t\tsock = new php.net.SslSocket();\n\t\t\t\t#elseif java\n\t\t\t\tsock = new java.net.SslSocket();\n\t\t\t\t#elseif hxssl\n\t\t\t\t#if neko\n\t\t\t\tsock = new neko.tls.Socket();\n\t\t\t\t#else\n\t\t\t\tsock = new sys.ssl.Socket();\n\t\t\t\t#end\n\t\t\t\t#else\n\t\t\t\tthrow \"Https is only supported with -lib hxssl\";\n\t\t\t\t#end\n\t\t\t} else\n\t\t\t\tsock = new Socket();\n\t\t}\n\t\tvar host = url_regexp.matched(2);\n\t\tvar portString = url_regexp.matched(3);\n\t\tvar request = url_regexp.matched(4);\n\t\tif( request == \"\" )\n\t\t\trequest = \"/\";\n\t\tvar port = if ( portString == null || portString == \"\" ) secure ? 443 : 80 else Std.parseInt(portString.substr(1, portString.length - 1));\n\t\tvar data;\n\n\t\tvar multipart = (file != null);\n\t\tvar boundary = null;\n\t\tvar uri = null;\n\t\tif( multipart ) {\n\t\t\tpost = true;\n\t\t\tboundary = Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000));\n\t\t\twhile( boundary.length < 38 )\n\t\t\t\tboundary = \"-\" + boundary;\n\t\t\tvar b = new StringBuf();\n\t\t\tfor( p in params ) {\n\t\t\t\tb.add(\"--\");\n\t\t\t\tb.add(boundary);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\t\tb.add(p.param);\n\t\t\t\tb.add('\"');\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(p.value);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tb.add(\"--\");\n\t\t\tb.add(boundary);\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\tb.add(file.param);\n\t\t\tb.add('\"; filename=\"');\n\t\t\tb.add(file.filename);\n\t\t\tb.add('\"');\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add(\"Content-Type: \"+file.mimeType+\"\\r\\n\"+\"\\r\\n\");\n\t\t\turi = b.toString();\n\t\t} else {\n\t\t\tfor( p in params ) {\n\t\t\t\tif( uri == null )\n\t\t\t\t\turi = \"\";\n\t\t\t\telse\n\t\t\t\t\turi += \"&\";\n\t\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t\t}\n\t\t}\n\n\t\tvar b = new StringBuf();\n\t\tif( method != null ) {\n\t\t\tb.add(method);\n\t\t\tb.add(\" \");\n\t\t} else if( post )\n\t\t\tb.add(\"POST \");\n\t\telse\n\t\t\tb.add(\"GET \");\n\n\t\tif( Http.PROXY != null ) {\n\t\t\tb.add(\"http://\");\n\t\t\tb.add(host);\n\t\t\tif( port != 80 ) {\n\t\t\t\tb.add(\":\");\n\t\t\t\tb.add(port);\n\t\t\t}\n\t\t}\n\t\tb.add(request);\n\n\t\tif( !post && uri != null ) {\n\t\t\tif( request.indexOf(\"?\",0) >= 0 )\n\t\t\t\tb.add(\"&\");\n\t\t\telse\n\t\t\t\tb.add(\"?\");\n\t\t\tb.add(uri);\n\t\t}\n\t\tb.add(\" HTTP/1.1\\r\\nHost: \"+host+\"\\r\\n\");\n\t\tif( postData != null )\n\t\t\tb.add(\"Content-Length: \"+postData.length+\"\\r\\n\");\n\t\telse if( post && uri != null ) {\n\t\t\tif( multipart || !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") ) {\n\t\t\t\tb.add(\"Content-Type: \");\n\t\t\t\tif( multipart ) {\n\t\t\t\t\tb.add(\"multipart/form-data\");\n\t\t\t\t\tb.add(\"; boundary=\");\n\t\t\t\t\tb.add(boundary);\n\t\t\t\t} else\n\t\t\t\t\tb.add(\"application/x-www-form-urlencoded\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tif( multipart )\n\t\t\t\tb.add(\"Content-Length: \"+(uri.length+file.size+boundary.length+6)+\"\\r\\n\");\n\t\t\telse\n\t\t\t\tb.add(\"Content-Length: \"+uri.length+\"\\r\\n\");\n\t\t}\n\t\tfor( h in headers ) {\n\t\t\tb.add(h.header);\n\t\t\tb.add(\": \");\n\t\t\tb.add(h.value);\n\t\t\tb.add(\"\\r\\n\");\n\t\t}\n\t\tb.add(\"\\r\\n\");\n\t\tif( postData != null)\n\t\t\tb.add(postData);\n\t\telse if( post && uri != null )\n\t\t\tb.add(uri);\n\t\ttry {\n\t\t\tif( Http.PROXY != null )\n\t\t\t\tsock.connect(new Host(Http.PROXY.host),Http.PROXY.port);\n\t\t\telse\n\t\t\t\tsock.connect(new Host(host),port);\n\t\t\tsock.write(b.toString());\n\t\t\tif( multipart ) {\n\t\t\t\tvar bufsize = 4096;\n\t\t\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\t\t\twhile( file.size > 0 ) {\n\t\t\t\t\tvar size = if( file.size > bufsize ) bufsize else file.size;\n\t\t\t\t\tvar len = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlen = file.io.readBytes(buf,0,size);\n\t\t\t\t\t} catch( e : haxe.io.Eof ) break;\n\t\t\t\t\tsock.output.writeFullBytes(buf,0,len);\n\t\t\t\t\tfile.size -= len;\n\t\t\t\t}\n\t\t\t\tsock.write(\"\\r\\n\");\n\t\t\t\tsock.write(\"--\");\n\t\t\t\tsock.write(boundary);\n\t\t\t\tsock.write(\"--\");\n\t\t\t}\n\t\t\treadHttpResponse(api,sock);\n\t\t\tsock.close();\n\t\t} catch( e : Dynamic ) {\n\t\t\ttry sock.close() catch( e : Dynamic ) { };\n\t\t\tonError(Std.string(e));\n\t\t}\n\t}\n\n\tfunction readHttpResponse( api : haxe.io.Output, sock : AbstractSocket ) {\n\t\t// READ the HTTP header (until \\r\\n\\r\\n)\n\t\tvar b = new haxe.io.BytesBuffer();\n\t\tvar k = 4;\n\t\tvar s = haxe.io.Bytes.alloc(4);\n\t\tsock.setTimeout(cnxTimeout);\n\t\twhile( true ) {\n\t\t\tvar p = sock.input.readBytes(s,0,k);\n\t\t\twhile( p != k )\n\t\t\t\tp += sock.input.readBytes(s,p,k - p);\n\t\t\tb.addBytes(s,0,k);\n\t\t\tswitch( k ) {\n\t\t\tcase 1:\n\t\t\t\tvar c = s.get(0);\n\t\t\t\tif( c == 10 )\n\t\t\t\t\tbreak;\n\t\t\t\tif( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 2:\n\t\t\t\tvar c = s.get(1);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(0) == 13 )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk = 4;\n\t\t\t\t} else if( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 3:\n\t\t\t\tvar c = s.get(2);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(1) != 13 )\n\t\t\t\t\t\tk = 4;\n\t\t\t\t\telse if( s.get(0) != 10 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 1;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 3;\n\t\t\t\t} else\n\t\t\t\t\tk = 4;\n\t\t\tcase 4:\n\t\t\t\tvar c = s.get(3);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(2) != 13 )\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(2) != 10 || s.get(1) != 13 )\n\t\t\t\t\t\tk = 3;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#if neko\n\t\tvar headers = neko.Lib.stringReference(b.getBytes()).split(\"\\r\\n\");\n\t\t#else\n\t\tvar headers = b.getBytes().toString().split(\"\\r\\n\");\n\t\t#end\n\t\tvar response = headers.shift();\n\t\tvar rp = response.split(\" \");\n\t\tvar status = Std.parseInt(rp[1]);\n\t\tif( status == 0 || status == null )\n\t\t\tthrow \"Response status error\";\n\n\t\t// remove the two lasts \\r\\n\\r\\n\n\t\theaders.pop();\n\t\theaders.pop();\n\t\tresponseHeaders = new haxe.ds.StringMap();\n\t\tvar size = null;\n\t\tvar chunked = false;\n\t\tfor( hline in headers ) {\n\t\t\tvar a = hline.split(\": \");\n\t\t\tvar hname = a.shift();\n\t\t\tvar hval = if( a.length == 1 ) a[0] else a.join(\": \");\n\t\t\thval = StringTools.ltrim( StringTools.rtrim( hval ) );\n\t\t\tresponseHeaders.set(hname, hval);\n\t\t\tswitch(hname.toLowerCase())\n\t\t\t{\n\t\t\t\tcase \"content-length\":\n\t\t\t\t\tsize = Std.parseInt(hval);\n\t\t\t\tcase \"transfer-encoding\":\n\t\t\t\t\tchunked = (hval.toLowerCase() == \"chunked\");\n\t\t\t}\n\t\t}\n\n\t\tonStatus(status);\n\n\t\tvar chunk_re = ~/^([0-9A-Fa-f]+)[ ]*\\r\\n/m;\n\t\tchunk_size = null;\n\t\tchunk_buf = null;\n\n\t\tvar bufsize = 1024;\n\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\tif( size == null ) {\n\t\t\tif( !noShutdown )\n\t\t\t\tsock.shutdown(false,true);\n\t\t\ttry {\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,bufsize);\n\t\t\t\t\tif( chunked ) {\n\t\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else\n\t\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t}\n\t\t} else {\n\t\t\tapi.prepare(size);\n\t\t\ttry {\n\t\t\t\twhile( size > 0 ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,if( size > bufsize ) bufsize else size);\n\t\t\t\t\tif( chunked ) {\n\t\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else\n\t\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t\tsize -= len;\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t\tthrow \"Transfer aborted\";\n\t\t\t}\n\t\t}\n\t\tif( chunked && (chunk_size != null || chunk_buf != null) )\n\t\t\tthrow \"Invalid chunk\";\n\t\tif( status < 200 || status >= 400 )\n\t\t\tthrow \"Http Error #\"+status;\n\t\tapi.close();\n\t}\n\n\tfunction readChunk(chunk_re : EReg, api : haxe.io.Output, buf : haxe.io.Bytes, len ) {\n\t\tif( chunk_size == null ) {\n\t\t\tif( chunk_buf != null ) {\n\t\t\t\tvar b = new haxe.io.BytesBuffer();\n\t\t\t\tb.add(chunk_buf);\n\t\t\t\tb.addBytes(buf,0,len);\n\t\t\t\tbuf = b.getBytes();\n\t\t\t\tlen += chunk_buf.length;\n\t\t\t\tchunk_buf = null;\n\t\t\t}\n\t\t\t#if neko\n\t\t\tif( chunk_re.match(neko.Lib.stringReference(buf)) ) {\n\t\t\t#else\n\t\t\tif( chunk_re.match(buf.toString()) ) {\n\t\t\t#end\n\t\t\t\tvar p = chunk_re.matchedPos();\n\t\t\t\tif( p.len <= len ) {\n\t\t\t\t\tvar cstr = chunk_re.matched(1);\n\t\t\t\t\tchunk_size = Std.parseInt(\"0x\"+cstr);\n\t\t\t\t\tif( cstr == \"0\" ) {\n\t\t\t\t\t\tchunk_size = null;\n\t\t\t\t\t\tchunk_buf = null;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlen -= p.len;\n\t\t\t\t\treturn readChunk(chunk_re,api,buf.sub(p.len,len),len);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// prevent buffer accumulation\n\t\t\tif( len > 10 ) {\n\t\t\t\tonError(\"Invalid chunk\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tchunk_buf = buf.sub(0,len);\n\t\t\treturn true;\n\t\t}\n\t\tif( chunk_size > len ) {\n\t\t\tchunk_size -= len;\n\t\t\tapi.writeBytes(buf,0,len);\n\t\t\treturn true;\n\t\t}\n\t\tvar end = chunk_size + 2;\n\t\tif( len >= end ) {\n\t\t\tif( chunk_size > 0 )\n\t\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\t\tlen -= end;\n\t\t\tchunk_size = null;\n\t\t\tif( len == 0 )\n\t\t\t\treturn true;\n\t\t\treturn readChunk(chunk_re,api,buf.sub(end,len),len);\n\t\t}\n\t\tif( chunk_size > 0 )\n\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\tchunk_size -= len;\n\t\treturn true;\n\t}\n\n#end\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onData = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onData( data : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a request error, with `msg` containing the\n\t\terror description.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onError = function(msg) { // handle error }`\n\t**/\n\tpublic dynamic function onError( msg : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a Http status change, with `status` being the\n\t\tnew status.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onStatus = function(status) { // handle status }`\n\t**/\n\tpublic dynamic function onStatus( status : Int ) {\n\t}\n\n#if !flash\n\t/**\n\t\tMakes a synchronous request to `url`.\n\n\t\tThis creates a new Http instance and makes a GET request by calling its\n\t\trequest(false) method.\n\n\t\tIf `url` is null, the result is unspecified.\n\t**/\n\tpublic static function requestUrl( url : String ) : String {\n\t\tvar h = new Http(url);\n\t#if js\n\t\th.async = false;\n\t#end\n\t\tvar r = null;\n\t\th.onData = function(d){\n\t\t\tr = d;\n\t\t}\n\t\th.onError = function(e){\n\t\t\tthrow e;\n\t\t}\n\t\th.request(false);\n\t\treturn r;\n\t}\n#end\n\n}\n","package com.isartdigital.services;\r\nimport com.isartdigital.utils.Config;\r\nimport haxe.Http;\r\nimport haxe.Json;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass HttpService extends Http\r\n{\r\n\r\n\tprivate var callback:Dynamic->Void;\t\r\n\t\r\n\tprivate static inline var SERVICE_PATH:String = \"https://fbgame.isartdigital.com/2017_builder/builder0/broadcast/\";\r\n\t\r\n\tpublic function new(pCallback:Dynamic->Void=null) \r\n\t{\r\n\t\tcallback = pCallback;\r\n\t\tsuper(SERVICE_PATH);\r\n\t\tif (callback!=null) {\r\n\t\t\tonData = _onData;\r\n\t\t\tonError = _onError;\r\n\t\t}\r\n\t\tif (Config.debug) addParameter(\"debug\", \"\");\r\n\t}\r\n\r\n\tprivate function _onData (pData:String): Void {\r\n\t\tcallback(Json.parse(pData));\r\n\t\tcallback = null;\r\n\t}\r\n\t\r\n\tprivate function _onError (pError:String): Void {\r\n\t\ttrace (pError);\r\n\t\tcallback = null;\r\n\t}\t\r\n\t\r\n}","package com.isartdigital.services;\r\nimport com.isartdigital.builder.game.def.UserInfoDef;\r\nimport haxe.Json;\r\n\r\n/**\r\n * ...\r\n * @author Dorian MILLIERE\r\n */\r\nclass Users\r\n{\r\n\t\r\n\tpublic static var infos:UserInfoDef;\r\n\r\n\tpublic static function setInfos(infosSource:Dynamic) {\r\n\t\tvar infosSourceTyped:UserInfoDef = typeUserInfos(infosSource);\r\n\t\treturn infos = infosSourceTyped;\r\n\t}\t\r\n\t\r\n\tprivate static function typeUserInfos(userInfos:Dynamic):UserInfoDef {\r\n\t\tfor (i in 0...userInfos.lanterns.length) {\r\n\t\t\tuserInfos.lanterns[i].x = Std.int(userInfos.lanterns[i].x);\r\n\t\t\tuserInfos.lanterns[i].y = Std.int(userInfos.lanterns[i].y);\r\n\t\t}\r\n\t\t\r\n\t\tuserInfos.dailyreward = Date.fromString(userInfos.dailyreward);\r\n\t\tuserInfos.experience = Std.int(userInfos.experience);\r\n\t\tuserInfos.ftue_complet = userInfos.ftue_complet == 1;\r\n\t\tuserInfos.parade = Date.fromString(userInfos.parade);\r\n\t\tuserInfos.resources.gold = Std.int(userInfos.resources.gold);\r\n\t\tuserInfos.resources.offering = Std.int(userInfos.resources.offering);\r\n\t\tuserInfos.resources.spice = Std.int(userInfos.resources.spice);\r\n\t\t\r\n\t\treturn userInfos;\r\n\t}\r\n}","package com.isartdigital.utils ;\r\nimport haxe.Json;\r\nimport js.Browser;\r\n\r\n\t\r\n/**\r\n * Classe utilitaire contenant les données de configuration du jeu\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Config \r\n{\r\n\t\t\r\n\t/**\r\n\t * version de l'application\r\n\t */\r\n\tpublic static var version (get,never):String;\r\n\t\r\n\t/**\r\n\t * langue courante\r\n\t */\r\n\tpublic static var language (get,never): String;\r\n\t\r\n\t/**\r\n\t * langues disponibles\r\n\t */\r\n\tpublic static var languages (get,never): Array<String>;\r\n\t\r\n\t/**\r\n\t * défini si le jeu est en mode \"debug\" ou pas (si prévu dans le code du jeu)\r\n\t */\r\n\tpublic static var debug (get, never): Bool;\r\n\t\r\n\t/**\r\n\t * défini si il faut afficher les fps ou non\r\n\t */\r\n\tpublic static var fps (get,never): Bool;\r\n\r\n\t/**\r\n\t * défini si il faut afficher le qrcode ou non\r\n\t */\r\n\tpublic static var qrcode (get, never): Bool;\t\r\n\t\r\n\t/** \r\n\t * chemin du dossier de langues\r\n\t */\r\n\tpublic static var langPath (get, never): String;\r\n\t\r\n\t/** \r\n\t * chemin du dossier des fichiers textes\r\n\t */\r\n\tpublic static var txtsPath (get, never): String;\r\n\t\r\n\t/** \r\n\t * chemin du dossier d'assets graphiques\r\n\t */\r\n\tpublic static var assetsPath (get, never): String;\r\n\t\r\n\t\r\n\t\r\n\t/** \r\n\t * chemin du dossier de sons\r\n\t */\r\n\tpublic static var soundsPath (get, never): String;\r\n\t\r\n\t\r\n\t/** \r\n\t * chemin du dossier de sons\r\n\t */\r\n\tpublic static var jsonPath (get, never): String;\r\n\r\n\t\r\n\t/** \r\n\t * chemin du dossier des polices de caractères\r\n\t */\r\n\tpublic static var fontsPath (get, never): String;\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Tailles (en px) des tiles\r\n\t */\r\n\tpublic static var tileWidth:UInt = 152;// 192;\r\n\tpublic static var tileHeight:UInt = 76;// 96;\r\n\tpublic static var mapSize:Int = 100;\r\n\t\r\n\t/**\r\n\t * conteneur des données de configuration\r\n\t */\r\n\tpublic static var data (get, never):Dynamic;\r\n\tprivate static var _data:Dynamic={};\r\n\t\r\n\tpublic static function init(pConfig:Json): Void {\t\t\r\n\t\tfor (i in Reflect.fields(pConfig)) Reflect.setField(_data, i, Reflect.field(pConfig, i));\r\n\t\t\r\n\t\t\r\n\t\tif (_data.version == null) _data.version = \"0.0.0\";\r\n\t\tif (_data.language == null || _data.language == \"\") _data.language = Browser.window.navigator.language.substr(0, 2);\r\n\t\tif (_data.languages == []) _data.languages.push(_data.language);\r\n\t\tif (_data.debug == null) _data.debug = false;\r\n\t\tif (_data.fps == null) _data.fps = false;\r\n\t\tif (_data.qrcode == null) _data.qrcode = false;\r\n\r\n\t\tif (_data.langPath == null) _data.langPath = \"\";\r\n\t\tif (_data.txtsPath == null) _data.txtsPath = \"\";\r\n\t\tif (_data.assetsPath == null) _data.assetsPath = \"\";\r\n\t\tif (_data.fontsPath == null) _data.fontsPath = \"\";\r\n\t\tif (_data.soundsPath == null) _data.soundsPath = \"\";\r\n\t\tif (_data.jsonPath == null) _data.jsonPath = \"\";\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static function get_data ():Dynamic {\r\n\t\treturn _data;\r\n\t}\r\n\t\r\n\tprivate static function get_version ():String {\r\n\t\treturn _data.version;\r\n\t}\r\n\t\r\n\tprivate static function get_language ():String {\r\n\t\treturn data.language;\r\n\t}\r\n\t\r\n\tprivate static function get_languages ():Array<String> {\r\n\t\treturn data.languages;\r\n\t}\r\n\t\r\n\tprivate static function get_debug ():Bool {\r\n\t\treturn data.debug;\r\n\t}\r\n\t\r\n\tprivate static function get_fps ():Bool {\r\n\t\treturn data.fps;\r\n\t}\r\n\t\r\n\tprivate static function get_qrcode ():Bool {\r\n\t\treturn data.qrcode;\r\n\t}\r\n\t\r\n\tprivate static function get_langPath ():String {\r\n\t\treturn _data.langPath;\r\n\t}\r\n\r\n\tprivate static function get_txtsPath ():String {\r\n\t\treturn _data.txtsPath;\r\n\t}\t\r\n\t\r\n\tprivate static function get_assetsPath ():String {\r\n\t\treturn _data.assetsPath;\r\n\t}\r\n\t\r\n\tprivate static function get_fontsPath ():String {\r\n\t\treturn _data.fontsPath;\r\n\t}\r\n\t\r\n\tprivate static function get_soundsPath ():String {\r\n\t\treturn _data.soundsPath;\r\n\t}\r\n\t\r\n\tprivate static function get_jsonPath ():String {\r\n\t\treturn _data.jsonPath;\r\n\t}\r\n\r\n}","package com.isartdigital.utils;\r\n\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport js.Browser;\r\nimport js.html.Image;\r\nimport pixi.core.ticker.Ticker;\r\nimport jsfps.fpsmeter.FPSMeter;\r\n\r\n\r\n/**\r\n * Classe de Debug\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Debug\r\n{\r\n\r\n\t/**\r\n\t * instance unique de la classe Main\r\n\t */\r\n\tprivate static var instance: Debug;\t\r\n\t\r\n\tpublic var fps:FPSMeter;\r\n\tprivate static inline var QR_SIZE:Float = 0.35;\r\n\tprivate var ticker:Ticker;\r\n\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Debug {\r\n\t\tif (instance == null) instance = new Debug();\r\n\t\treturn instance;\r\n\t}\t\r\n\t\r\n\tprivate function new() {}\r\n\t\r\n\t/**\r\n\t * initialisation du débogueur\r\n\t * @param\tpGameDispatcher\r\n\t */\r\n\tpublic function init():Void \r\n\t{\r\n\t\tif (Config.fps) \r\n\t\t{\r\n\t\t\tfps = new FPSMeter();\r\n\t\t\tfps.show();\r\n\t\t\tfps.showFps();\r\n\t\t\t\r\n\t\t\tticker = new Ticker();\r\n\t\t\tticker.add(updateFps);\r\n\t\t\tticker.start();\r\n\t\t}\r\n\t\t\r\n\t\tif (Config.qrcode) \r\n\t\t{\r\n\t\t\tvar lQr:Image = new Image();\r\n\t\t\tlQr.style.position = 'absolute';\r\n\t\t\tlQr.style.right = '0px';\r\n\t\t\tlQr.style.bottom = '0px';\r\n\t\t\tvar lSize:Int = Std.int(QR_SIZE * DeviceCapabilities.getSizeFactor());\r\n\t\t\tlQr.src = 'https://chart.googleapis.com/chart?chs='+lSize+'x'+lSize+'&cht=qr&chl=' + Browser.location.href + '&choe=UTF-8';\r\n\t\t\tBrowser.document.body.appendChild(lQr);\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate function updateFps ():Void {\r\n\t\tfps.tick();\r\n\t\tfps.tickStart();\r\n\t}\r\n\t\r\n\tpublic static function error (pArg:Dynamic): Void {\r\n\t\tuntyped console.error (pArg);\r\n\t}\r\n\t\r\n\tpublic static function warn (pArg:Dynamic): Void {\r\n\t\tuntyped console.warn (pArg);\r\n\t}\r\n\r\n\tpublic static function table (pArg:Dynamic): Void {\r\n\t\tuntyped console.table (pArg);\r\n\t}\r\n\r\n\tpublic static function info (pArg:Dynamic): Void {\r\n\t\tuntyped console.info (pArg);\r\n\t}\r\n\t\r\n\tpublic function destroy (): Void {\r\n\t\tticker.stop();\r\n\t}\r\n\r\n}","package com.isartdigital.utils;\r\nimport com.isartdigital.builder.game.def.LocalizationDef;\r\nimport com.isartdigital.builder.Main;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport com.isartdigital.utils.ui.UIBuilder;\r\nimport flump.json.FlumpJSON;\r\nimport haxe.Json;\r\nimport haxe.macro.Expr.Var;\r\nimport pixi.loaders.Loader;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Thorcal\r\n */\r\nclass Localization \r\n{\r\n\t\r\n\tpublic var myJson:Map<String,String> = new Map <String, String>();\r\n\tpublic var json:Json;\r\n\tpublic var stringJson:String;\r\n\tpublic static inline var LANG_EN = \"en\";\r\n\tpublic static inline var LANG_FR = \"fr\";\r\n\t/**\r\n\t * instance unique de la classe Localization\r\n\t */\r\n\tprivate static var instance: Localization;\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Localization {\r\n\t\tif (instance == null) instance = new Localization();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * constructeur privé pour éviter qu'une instance soit créée directement\r\n\t */\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function setDataLocalization (pData : String) : Void {\r\n\t\tfor (label in Reflect.fields(pData)) {\r\n\t\t\tmyJson.set(label, Reflect.field(pData, label));\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function getText(pLabel:String):String {\r\n\t\treturn myJson.get(pLabel);\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t}\r\n\r\n}","package com.isartdigital.utils.facebook;\r\n\r\nimport com.isartdigital.utils.events.FacebookEventType;\r\nimport js.Browser;\r\nimport js.html.Element;\r\nimport js.html.HTMLDocument;\r\nimport js.html.ScriptElement;\r\nimport js.html.SourceElement;\r\n\r\n/**\r\n * Classe haxe permettant l'accès à l'api Facebook \r\n * @author Mathieu Anthoine\r\n */\r\nclass Facebook\r\n{\r\n\r\n\t/**\r\n\t * id de l'app\r\n\t */\r\n\tprivate static var appId:String;\r\n\t\r\n\t/**\r\n\t * informations de l'application une fois connectée\r\n\t */\r\n\tprivate static var authResponse:AuthResponse;\r\n\t\r\n\t/**\r\n\t * access token\r\n\t */\r\n\tpublic static var token (default, null):String;\r\n\r\n\t/**\r\n\t * user id\r\n\t */\r\n\tpublic static var uid (default, null):String;\t\r\n\t\r\n\t/**\r\n\t * permissions de l'application\r\n\t */\r\n\tprivate static var permissions:Permissions = { scope:\"user_friends,email\" };\r\n\t \r\n\t/**\r\n\t * callback de connexion\r\n\t */\r\n\tpublic static var onLogin:Void->Void;\r\n\t\r\n\t/**\r\n\t * Initialisation asynchrone de la lib Facebook\r\n\t */\r\n\tprivate static function init ():Void {\t\r\n\t\tuntyped FB.init({\r\n\t\t\tappId\t\t: appId,\r\n\t\t\txfbml\t\t: true,\r\n\t\t\tversion\t: \"v2.5\",\r\n\t\t\tcookie\t: true\r\n\t\t});\r\n\t\t\r\n\t\tuntyped FB.getLoginStatus(getLoginStatus);\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Chargement et connexion à l'app Facebook\r\n\t * @param\tpAppId\r\n\t */\r\n\tpublic static function load (pAppId:String,?pPermissions:Permissions=null):Void {\r\n\t\tappId = pAppId;\r\n\t\tuntyped Browser.window.fbAsyncInit = init;\r\n\t\t\r\n\t\tvar lDoc:HTMLDocument = Browser.window.document;\r\n\t\tvar lScript:String = \"script\";\r\n\t\tvar lID:String = \"facebook-jssdk\";\r\n\t\tvar lJs:ScriptElement;\r\n\t\tvar lFjs:Element = lDoc.getElementsByTagName(lScript)[0];\r\n\t\t\t\t\r\n\t\tif (lDoc.getElementById(appId)!=null) return;\r\n\t\t\r\n\t\tif (pPermissions!=null) permissions = pPermissions;\t\t\r\n\t\t\r\n\t\tlJs = cast (lDoc.createElement(lScript),ScriptElement);\r\n\t\tlJs.id = lID;\r\n\t\tlJs.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n\t\tlFjs.parentNode.insertBefore(lJs, lFjs);\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Permet de déterminer su un utilisateur est loggé dans Facebook\r\n\t * @param\tpResponse\r\n\t */\r\n\tprivate static function getLoginStatus (pResponse:Response):Void {\r\n\t\tif (pResponse.status == FacebookEventType.CONNECTED) {\r\n\t\t\tauthResponse = pResponse.authResponse;\r\n\t\t\ttoken = authResponse.accessToken;\r\n\t\t\tuid = authResponse.userID;\r\n\t\t\tonLogin();\r\n\t\t} else {\r\n\t\t\tuntyped FB.login(getLoginStatus, permissions);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * permet un appel à Graph API\r\n\t * La méthode peut être appelée de différentes facons:\r\n\t * \r\n\t * Facebook.api (pPath,pCallBack);\r\n\t * Facebook.api (pPath,pParams,pCallBack);\r\n\t * Facebook.api (pPath,pMethod,pParams,pCallBack);\r\n\t * \r\n\t * @param\tpPath path de la graph API\r\n\t * @param\tpMethod méthode HTTP (\"get\",\"post\", \"delete\")\r\n\t * @param\tpParams paramètres à passer à l'appel\r\n\t * @param\tpCallBack fonction de retour\r\n\t */\r\n\tpublic static function api (pPath:String,pMethod:Dynamic,?pParams:Dynamic,?pCallBack:Dynamic): Void {\r\n\t\tuntyped FB.api(pPath, pMethod, pParams, pCallBack);\r\n\t}\r\n\t\r\n\t/**\r\n\t * permet de déclencher l'apparition de différentes fenêtres de dialogue UI\r\n\t * @param\tpParams paramètres de la fenêtre appelée\r\n\t * @param\tpCallBack function appelée à la fermeture de la fenêtre de dialogue\r\n\t */\r\n\tpublic static function ui (pParams:Dynamic,?pCallBack:Dynamic->Void): Void {\r\n\t\tuntyped FB.ui (pParams, pCallBack);\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\n","package com.isartdigital.utils.game;\r\n\r\nimport com.isartdigital.builder.game.GameManager;\r\nimport com.isartdigital.builder.game.map.GMap;\r\nimport com.isartdigital.utils.events.MouseEventType;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport js.Browser;\r\nimport js.html.CanvasElement;\r\nimport js.html.MouseEvent;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\r\n/**\r\n * Classe Camera\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass Camera\r\n{\r\n\tprivate static inline var MINIMUM_OFFSET_MOVE_TO_CONSIDER_SCROLLING:Int = 1;\r\n\tprivate var render:Dynamic;\r\n\t\r\n\tpublic var cameraFocus:GameObject = new GameObject();\r\n\tpublic var target (default,null):DisplayObject;\r\n\tpublic var focus (default, null):DisplayObject;\r\n\t\r\n\tpublic var asMoved:Bool = false;\r\n\tprivate var isScrolling:Bool = false;\r\n\tprivate var startScrollPosition:Point = new Point(0, 0);\r\n\t\r\n\tprivate var inertiaMax:Point = new Point(40, 20);\r\n\tprivate var inertiaMin:Point = new Point(2, 8);\r\n\tprivate var countH:UInt = 0;\r\n\tprivate var delayH:UInt = 120;\r\n\tprivate var countV:UInt = 0;\r\n\tprivate var delayV:UInt = 60;\r\n\t\r\n\t/**\r\n\t * instance unique de la classe GamePlane\r\n\t */\r\n\tprivate static var instance: Camera;\r\n\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): Camera {\r\n\t\tif (instance == null) instance = new Camera();\r\n\t\treturn instance;\r\n\t}\t\r\n\t\r\n\tprivate function new() \r\n\t{\r\n\t\tvar lGameContainer:Container = GameStage.getInstance().getGameContainer();\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_DOWN, startScroll);\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_UP, stopScroll);\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_MOVE, moveScroll);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialise la camera\r\n\t */\r\n\tpublic function init():Void {\r\n\t\tGameStage.getInstance().getGameContainer().addChild(cameraFocus);\r\n\t\tsetTarget(GameStage.getInstance().getGameContainer());\r\n\t\tsetFocus(cameraFocus);\r\n\t\tcameraFocus.x = 0;\r\n\t\tcameraFocus.y = (Config.tileWidth / 2) * (Config.mapSize / 2);\r\n\t\tsetPosition();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Défini la cible de la caméra\r\n\t * @param\tpTarget cible\r\n\t */\r\n\tpublic function setTarget (pTarget:DisplayObject):Void {\r\n\t\ttarget = pTarget;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Défini l'élement à repositionner au centre de l'écran\r\n\t * @param\tpFocus focus\r\n\t */\r\n\tpublic function setFocus(pFocus:DisplayObject):Void {\r\n\t\tfocus = pFocus;\r\n\t}\r\n\t\r\n\t/**\r\n\t * recadre la caméra\r\n\t * @param\tpDelay si false, la caméra est recadrée instantannément\r\n\t */\r\n\tprivate function changePosition (?pDelay:Bool=true) :Void {\r\n\t\t\r\n\t\tcountH++;\r\n\t\tcountV++;\r\n\t\t\r\n\t\tvar lCenter:Rectangle = DeviceCapabilities.getScreenRect(target.parent);\t\t\t\t\r\n\t\tvar lFocus:Point = getFocusCoord();\r\n\t\tvar lInertiaX:Float = pDelay ? getInertiaX() : 1;\r\n\t\tvar lInertiaY:Float = pDelay ? getInertiaY() : 1;\r\n\t\t\r\n\t\tvar lDeltaX:Float = (lCenter.x + lCenter.width / 2 - lFocus.x - target.x) / lInertiaX;\r\n\t\tvar lDeltaY:Float = (lCenter.y + lCenter.height / 2 - lFocus.y - target.y) / lInertiaY;\r\n\t\t\r\n\t\ttarget.x+= lDeltaX;\r\n\t\ttarget.y += lDeltaY;\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne une inertie en X variable suivant le temps\r\n\t * @return inertie en X\r\n\t */\r\n\tprivate function getInertiaX() : Float {\r\n\t\tif (countH > delayH) return inertiaMin.x;\r\n\t\treturn inertiaMax.x + (inertiaMin.x-inertiaMax.x)*countH/delayH;\r\n\t}\r\n\r\n\t/**\r\n\t * retourne une inertie en Y variable suivant le temps\r\n\t * @return inertie en Y\r\n\t */\t\r\n\tprivate function getInertiaY() : Float {\r\n\t\tif (countV > delayV) return inertiaMin.y;\r\n\t\treturn inertiaMax.y + (inertiaMin.y-inertiaMax.y)*countV/delayV;\r\n\t}\r\n\t\r\n\t/**\r\n\t * cadre instantannément la caméra sur le focus\r\n\t */\r\n\tpublic function setPosition():Void {\r\n\t\tGameStage.getInstance().render();\r\n\t\tchangePosition(false);\r\n\t}\r\n\t\r\n\t/**\r\n\t * cadre la caméra sur le focus avec de l'inertie\r\n\t */\r\n\tpublic function move():Void {\r\n\t\tchangePosition();\r\n\t}\r\n\t\r\n\t/**\r\n\t * remet à zéro le compteur qui fait passer la caméra de l'inertie en X maximum à minimum\r\n\t */\r\n\tpublic function resetX():Void {\r\n\t\tcountH = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * remet à zéro le compteur qui fait passer la caméra de l'inertie en Y maximum à minimum\r\n\t */\r\n\tpublic function resetY():Void {\r\n\t\tcountV = 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne les coordonnées du focus dans le repère de la target\r\n\t */\r\n\tpublic function getFocusCoord ():Point {\r\n\t\treturn target.toLocal(focus.position, focus.parent);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Commence un scrolling\r\n\t */\r\n\tprivate function startScroll(pEvent:MouseEvent):Void {\r\n\t\tisScrolling = true;\r\n\t\tvar lCameraFocus:GameObject = cameraFocus;\r\n\t\tstartScrollPosition = new Point(\r\n\t\t\tlCameraFocus.x + (pEvent.layerX * 2),\r\n\t\t\tlCameraFocus.y + (pEvent.layerY * 2)\r\n\t\t);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Arrête le scrolling (Appellé après un mouseup)\r\n\t */\r\n\tprivate function stopScroll():Void {\r\n\t\tisScrolling = false;\r\n\t\thaxe.Timer.delay(function() {\r\n\t\t\tasMoved = false;\r\n\t\t}, 10);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Bouge la souris\r\n\t */\r\n\tprivate function moveScroll(pEvent:MouseEvent):Void {\r\n\t\tvar totalOffsetMovedSinceLastMouseUp = Math.abs(startScrollPosition.x - (pEvent.layerX * 2)) + Math.abs(startScrollPosition.y - (pEvent.layerY * 2));\r\n\t\tif (!Std.is(pEvent.target, CanvasElement)) return;\r\n\t\tif (isScrolling && totalOffsetMovedSinceLastMouseUp > MINIMUM_OFFSET_MOVE_TO_CONSIDER_SCROLLING) {\r\n\t\t\tasMoved = true;\r\n\t\t\tcameraFocus.x = startScrollPosition.x - (pEvent.layerX * 2);\r\n\t\t\tcameraFocus.y = startScrollPosition.y - (pEvent.layerY * 2);\r\n\t\t\tsetPosition();\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\tpublic function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tvar lGameContainer:Container = GameStage.getInstance().getGameContainer();\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_DOWN, startScroll);\r\n\t\tBrowser.window.addEventListener(MouseEventType.MOUSE_UP, stopScroll);\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game;\r\n\r\nimport pixi.core.display.Container;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.graphics.Graphics;\r\nimport pixi.core.graphics.GraphicsData;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\nimport pixi.core.sprites.Sprite;\r\n\r\n/**\r\n * Classe utilitaire permettant de tester diverses collisions entre boites, formes et points\r\n * @author Mathieu ANTHOINE\r\n * @version 0.9.0\r\n */\r\nclass CollisionManager \r\n{\r\n\r\n\tprivate function new() {}\r\n\t\t\r\n\t/**\r\n\t * test la collision entre les boites englobantes de deux DisplayObject\r\n\t * @param\tpObjectA objet à tester\r\n\t * @param\tpObjectB objet à tester\r\n\t * @return résultat du test de collision\r\n\t */\r\n\tpublic static function hitTestObject(pObjectA:DisplayObject, pObjectB:DisplayObject):Bool {\r\n\t\t\r\n\t\treturn getIntersection(pObjectA.getBounds(), pObjectB.getBounds());\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * test la collision entre l'objet et un point (prend en compte la hitArea si elle est définie). Légère adaptation de la méthode hitTest de la classe InteractionManager\r\n\t * @param\tpObject objet à tester\r\n\t * @param\tpPoint point exprimé en coordonnées globales\r\n\t * @return\trésultat du test de collision\r\n\t */\r\n\tpublic static function hitTestPoint (pItem:DisplayObject, pGlobalPoint:Point):Bool {\r\n\r\n\t\tvar lPoint:Point=pItem.toLocal(pGlobalPoint);\r\n\t\tvar x:Float = lPoint.x;\r\n\t\tvar y:Float = lPoint.y;\r\n\t\t\r\n\t\tif (pItem.hitArea != null && pItem.hitArea.contains != null) {\r\n\t\t\treturn pItem.hitArea.contains(x, y);\t\t\r\n\t\t}\r\n\t\telse if (Std.is(pItem, Sprite)) {\t\r\n\t\t\t\r\n\t\t\tvar lSprite:Sprite = cast(pItem, Sprite);\r\n\t\t\t\r\n\t\t\tvar lWidth:Float = lSprite.texture.frame.width;\r\n\t\t\tvar lHeight:Float = lSprite.texture.frame.height;\r\n\t\t\tvar lX1:Float = -lWidth * lSprite.anchor.x;\r\n\t\t\tvar lY1:Float;\r\n\t \r\n\t\t\tif (x > lX1 && x < lX1 + lWidth)\r\n\t\t\t{\r\n\t\t\t\tlY1 = -lHeight * lSprite.anchor.y;\r\n\t\t\t\tif (y > lY1 && y < lY1 + lHeight) return true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Std.is(pItem, Graphics)) {\r\n\t\t\tvar lGraphicsData:Array<GraphicsData> = untyped pItem.graphicsData;\t\t\r\n\t\t\tfor (i in 0...lGraphicsData.length) {\r\n\t\t\t\tvar lData = lGraphicsData[i];\r\n\t\t\t\t // only deal with fills..\r\n\t\t\t\tif (! untyped lData.fill) continue;\t\t\t\r\n\t\t\t\tif(lData.shape!=null && lData.shape.contains(x, y)) return true;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (Std.is (pItem, Container)) {\r\n\t\t\tvar lContainer:Container = cast(pItem, Container);\r\n\t\t\tvar lLength:Int = lContainer.children.length;\r\n\t\t\tfor (i in 0...lLength) {\r\n\t\t\t\tif (hitTestPoint(lContainer.children[i], pGlobalPoint)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param\tpHitBoxA boite englobante principale\r\n\t * @param\tpHitBoxB boite englobante principale\r\n\t * @param\tpPointsA liste de points de collision\r\n\t * @param\tpPointsB liste de points de collision\r\n\t * @return  résultat de la collision\r\n\t */\r\n\tpublic static function hasCollision (pHitBoxA:DisplayObject, pHitBoxB:DisplayObject, pPointsA:Array<Point> = null, pPointsB:Array<Point> = null): Bool {\r\n\t\tif (pHitBoxA == null || pHitBoxB == null) return false;\r\n\t\t\r\n\t\t// test des boites de collision principale\r\n\t\tif (!hitTestObject(pHitBoxA,pHitBoxB)) return false;\r\n\t\t\r\n\t\t// si il n'y a pas de boites de collision plus précises on valide\r\n\t\tif (pPointsA == null && pPointsB == null) return true;\t\t\t\r\n\t\t\r\n\t\t// test points vers la forme de la boite principale \r\n\t\tif (pPointsA!=null) return testPoints(pPointsA, pHitBoxB);\r\n\t\tif (pPointsB!=null) return testPoints(pPointsB, pHitBoxA);\r\n\t\t\r\n\t\treturn false;\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * teste l'intersection des boites englobantes\r\n\t * @param\tpRectA rectangle à tester\r\n\t * @param\tpRectB rectangle à tester\r\n\t * @return résultat de l'intersection\r\n\t */\r\n\tprivate static function getIntersection (pRectA:Rectangle, pRectB:Rectangle): Bool {\r\n\t\treturn !(pRectB.x > (pRectA.x + pRectA.width) || (pRectB.x + pRectB.width) < pRectA.x || pRectB.y > (pRectA.y + pRectA.height) || (pRectB.y + pRectB.height) < pRectA.y);\r\n\t}\r\n\t\r\n\t/**\r\n\t * \r\n\t * @param\tpHitPoints liste de points de collision (dont le repère est déjà converti en global)\r\n\t * @param\tpHitBox boite englobante\r\n\t * @return  résultat de la collision\r\n\t */\r\n\tprivate static function testPoints (pHitPoints:Array<Point>, pHitBox:DisplayObject): Bool {\r\n\t\tvar lLength:Int = pHitPoints.length;\r\n\t\tfor (i in 0...lLength) {\r\n\t\t\tif (hitTestPoint(pHitBox,pHitPoints[i])) return true;\r\n\t\t}\r\n\t\t\t\r\n\t\treturn false;\r\n\t\t\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game;\r\nimport pixi.filters.color.ColorMatrixFilter;\r\n\r\n/**\r\n * ...\r\n * @author Dorian MILLIERE\r\n */\r\nclass Filter\r\n{\r\n\tpublic static inline var EMPTY_FILTER:Dynamic = null;\r\n\t\r\n    public static function getRed():Array<ColorMatrixFilter> {\r\n\t\tvar lColorMatrixFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tlColorMatrixFilter.matrix = [\r\n\t\t\t1, 0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 1, 0\r\n\t\t];\r\n\t\treturn [lColorMatrixFilter];\r\n    }\r\n    \r\n    public static function getGreen():Array<ColorMatrixFilter> {\r\n\t\tvar lColorMatrixFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tlColorMatrixFilter.matrix = [\r\n\t\t\t0, 0, 0, 0, 0,\r\n\t\t\t1, 0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 0, 0,\r\n\t\t\t0, 0, 0, 1, 0\r\n\t\t];\r\n\t\treturn [lColorMatrixFilter];\r\n            \r\n    }\r\n\t\r\n    public static function getBrightness(intensity:Float):Array<ColorMatrixFilter> {\r\n\t\tvar lColorMatrixFilter:ColorMatrixFilter = new ColorMatrixFilter();\r\n\t\tlColorMatrixFilter.brightness(intensity, false);\r\n\t\treturn [lColorMatrixFilter];\r\n    }\r\n}","package com.isartdigital.utils.game;\r\n\r\nimport com.isartdigital.utils.events.EventType;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\r\n/**\r\n * Classe en charge de mettre en place la structure graphique du jeu (conteneurs divers)\r\n * et la gestion du redimensionnement de la zone de jeu en fonction du contexte\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass GameStage extends Container\r\n{\r\n\t\r\n\t/**\r\n\t * instance unique de la classe GameStage\r\n\t */\r\n\tprivate static var instance: GameStage;\r\n\r\n\tprivate var _alignMode: GameStageAlign = GameStageAlign.CENTER;\t\r\n\r\n\tprivate var _scaleMode: GameStageScale = GameStageScale.SHOW_ALL;\r\n\t\r\n\tprivate var _safeZone:Rectangle= new Rectangle(0,0,SAFE_ZONE_WIDTH,SAFE_ZONE_HEIGHT);\r\n\r\n\t/**\r\n\t * callback de render\r\n\t */\r\n\tprivate var _render:Void->Void;\t\r\n\t\r\n\t/**\r\n\t * largeur minimum pour le contenu visible par défaut\r\n\t */\r\n\tprivate static inline var SAFE_ZONE_WIDTH: Int = 2048;\r\n\r\n\t/**\r\n\t * hauteur minimum pour le contenu visible par défaut\r\n\t */\r\n\tprivate static inline var SAFE_ZONE_HEIGHT: Int = 1366;\r\n\t\t\r\n\t/**\r\n\t * conteneur des pop-in\r\n\t */\r\n\tprivate var popinsContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur du Hud\r\n\t */\r\n\tprivate var hudContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur des écrans d'interface\r\n\t */\r\n\tprivate var screensContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur du jeu\r\n\t */\r\n\tprivate var gameContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur des tiles\r\n\t */\r\n\tprivate var tilesContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur des buildings\r\n\t */\r\n\tprivate var buildingsContainer:Container;\r\n\t\r\n\t/**\r\n\t * conteneur du background\r\n\t */\r\n\tprivate var backgroundContainer:Container;\r\n\t\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\t\t\r\n\t\tgameContainer = new Container();\t\t\r\n\t\taddChild(gameContainer);\r\n\t\t\r\n\t\tscreensContainer = new Container();\r\n\t\taddChild(screensContainer);\r\n\t\t\r\n\t\thudContainer = new Container();\r\n\t\taddChild(hudContainer);\r\n\t\t\r\n\t\tpopinsContainer = new Container();\r\n\t\taddChild(popinsContainer);\r\n\t\t\r\n\t\r\n\t\tbackgroundContainer = new Container();\r\n\t\tgameContainer.addChild(backgroundContainer);\r\n\t\t\r\n\t\ttilesContainer = new Container();\t\t\r\n\t\tgameContainer.addChild(tilesContainer);\t\t\r\n\t\t\r\n\t\tbuildingsContainer = new Container();\t\t\r\n\t\tgameContainer.addChild(buildingsContainer);\r\n\t\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialisation de la zone de jeu\r\n\t * @param   pRender Callback qui fait le rendu pour mettre à jour le système de coordonnées avant de reconstruire d'éventuels éléments\r\n\t * @param\tpSafeZoneWidth largeur de la safeZone\r\n\t * @param\tpSafeZoneHeight hauteur de la safeZone\r\n\t * @param\tcenterGameContainer centrer ou pas le conteneur des élements InGame\r\n\t * @param\tcenterScreensContainer centrer ou pas le conteneur des Ecrans\r\n\t * @param\tcenterPopinContainer centrer ou pas le conteneur des Popins\r\n\t */\r\n\tpublic function init (pRender:Void->Void, ?pSafeZoneWidth:UInt = SAFE_ZONE_WIDTH, ?pSafeZoneHeight:UInt = SAFE_ZONE_WIDTH, ?pCenterGameContainer:Bool = false, ?pCenterScreensContainer:Bool = true, ?pCenterPopinContainer:Bool = true):Void {\r\n\t\t\r\n\t\t_render = pRender;\r\n\t\t\r\n\t\t_safeZone = new Rectangle (0, 0, pSafeZoneWidth, pSafeZoneHeight);\r\n\t\t\r\n\t\tif (pCenterGameContainer) {\r\n\t\t\tgameContainer.x = safeZone.width / 2;\r\n\t\t\tgameContainer.y = safeZone.height / 2;\r\n\t\t}\r\n\t\t\r\n\t\tif (pCenterScreensContainer) {\r\n\t\t\tscreensContainer.x = safeZone.width / 2;\r\n\t\t\tscreensContainer.y = safeZone.height / 2;\r\n\t\t}\r\n\t\t\r\n\t\tif (pCenterPopinContainer) {\r\n\t\t\tpopinsContainer.x = safeZone.width / 2;\r\n\t\t\tpopinsContainer.y = safeZone.height / 2;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Retourne l'instance unique de la classe, et la crée si elle n'existait pas au préalable\r\n\t * @return instance unique\r\n\t */\r\n\tpublic static function getInstance (): GameStage {\r\n\t\tif (instance == null) instance = new GameStage();\r\n\t\treturn instance;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Redimensionne la scène du jeu en fonction de la taille disponible pour l'affichage\r\n\t */\r\n\tpublic function resize (): Void {\r\n\t\t\r\n\t\tvar lWidth:UInt = DeviceCapabilities.width;\r\n\t\tvar lHeight:UInt = DeviceCapabilities.height;\r\n\t\t\t\t\r\n\t\tvar lRatio:Float = Math.round(10000 * Math.min( lWidth / safeZone.width, lHeight / safeZone.height)) / 10000;\r\n\t\t\r\n\t\tif (scaleMode == GameStageScale.SHOW_ALL) scale.set(lRatio, lRatio);\r\n\t\telse scale.set (DeviceCapabilities.textureRatio, DeviceCapabilities.textureRatio);\r\n\t\t\r\n\t\tif (alignMode == GameStageAlign.LEFT || alignMode == GameStageAlign.TOP_LEFT || alignMode == GameStageAlign.BOTTOM_LEFT) x = 0;\r\n\t\telse if (alignMode == GameStageAlign.RIGHT || alignMode == GameStageAlign.TOP_RIGHT || alignMode == GameStageAlign.BOTTOM_RIGHT) x = lWidth - safeZone.width * scale.x;\r\n\t\telse x = (lWidth - safeZone.width * scale.x) / 2;\r\n\t\t\r\n\t\tif (alignMode == GameStageAlign.TOP || alignMode == GameStageAlign.TOP_LEFT || alignMode == GameStageAlign.TOP_RIGHT) y = 0;\r\n\t\telse if (alignMode == GameStageAlign.BOTTOM || alignMode == GameStageAlign.BOTTOM_LEFT || alignMode == GameStageAlign.BOTTOM_RIGHT) y = lHeight - safeZone.height * scale.y;\r\n\t\telse y = (lHeight - safeZone.height * scale.y) / 2;\r\n\t\t\r\n\t\t\r\n\t\trender();\r\n\t\t\r\n\t\temit (EventType.RESIZE, { width:lWidth, height:lHeight } );\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * fait le rendu de l'écran\r\n\t */\r\n\tpublic function render (): Void {\r\n\t\tif (_render!=null) _render();\r\n\t}\t\r\n\t\r\n\t/*\r\n\t * style d'alignement au sein de l'écran\r\n\t */\r\n\tpublic var alignMode (get, set) : GameStageAlign;\r\n\t\r\n\tprivate function get_alignMode( ) { \r\n\t\treturn _alignMode;\r\n\t}\r\n\t\r\n\tprivate function set_alignMode(pAlign:GameStageAlign) {\r\n\t\t_alignMode = pAlign;\r\n\t\tresize();\r\n\t\treturn _alignMode;\r\n\t}\r\n\r\n\t/*\r\n\t * style de redimensionnement au sein de l'écran\r\n\t */\r\n\tpublic var scaleMode (get, set) : GameStageScale;\r\n\t\r\n\tprivate function get_scaleMode( ) { \r\n\t\treturn _scaleMode;\r\n\t}\r\n\t\r\n\tprivate function set_scaleMode(pScale:GameStageScale) {\r\n\t\t_scaleMode = pScale;\r\n\t\tresize();\r\n\t\treturn _scaleMode;\r\n\t}\t\r\n\t\r\n\t/**\r\n\t * Rectangle délimitant le contenu minimum visible\r\n\t */\r\n\tpublic var safeZone (get, never):Rectangle;\r\n\t\r\n\tprivate function get_safeZone () {\r\n\t\treturn _safeZone;\r\n\t}\r\n\r\n\t/**\r\n\t * accès en lecture au conteneur de jeu\r\n\t * @return gameContainer\r\n\t */\r\n\tpublic function getGameContainer (): Container {\r\n\t\treturn gameContainer;\r\n\t}\r\n\t\r\n\t/**\r\n\t * accès en lecture au conteneur d'écrans\r\n\t * @return screensContainer\r\n\t */\r\n\tpublic function getScreensContainer (): Container {\r\n\t\treturn screensContainer;\r\n\t}\r\n\t\r\n\t/**\r\n\t * accès en lecture au conteneur de hud\r\n\t * @return hudContainer\r\n\t */\r\n\tpublic function getHudContainer (): Container {\r\n\t\treturn hudContainer;\r\n\t}\r\n\t\r\n\t/**\r\n\t * accès en lecture au conteneur de PopIn\r\n\t * @return popinContainer\r\n\t */\r\n\tpublic function getPopinsContainer (): Container {\r\n\t\treturn popinsContainer;\r\n\t}\r\n\t\r\n\t\t\t\r\n\t/**\t\t\r\n\t * Accès en lecture au contenaure de tiles\t\t\r\n\t * @return conteneur de tiles\t\t\r\n\t */\t\t\r\n\tpublic function getTilesContainer ():Container {\t\t\r\n\t\treturn tilesContainer;\t\t\r\n\t}\t\t\r\n\t\t\t\r\n\t/**\t\t\r\n\t * Accès en lecture au contenaure de buildings\t\t\r\n\t * @return conteneur de buildings\t\t\r\n\t */\t\t\r\n\tpublic function getBuildingsContainer ():Container {\t\t\r\n\t\treturn buildingsContainer;\t\t\r\n\t}\t\r\n\t\r\n\t/**\t\t\r\n\t * Accès en lecture au contenaure de buildings\t\t\r\n\t * @return conteneur de background\t\t\r\n\t */\t\t\r\n\tpublic function getBackgroundContainer ():Container {\t\t\r\n\t\treturn backgroundContainer;\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * détruit l'instance unique et met sa référence interne à null\r\n\t */\r\n\toverride public function destroy (): Void {\r\n\t\tinstance = null;\r\n\t\tsuper.destroy(true);\r\n\t}\r\n\r\n}","package com.isartdigital.utils.game.factory;\r\n\r\nimport pixi.core.display.Container;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass AnimFactory\r\n{\r\n\r\n\tprivate var anim:Container;\r\n\t\r\n\tprivate function new() \r\n\t{\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function getAnim ():Container {\r\n\t\treturn anim;\r\n\t}\r\n\t\r\n\tpublic function create (pID:String):Container {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\tpublic function update (pId:String):Void {\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function setFrame (?pAutoPlay:Bool=true, ?pStart:UInt = 0): Void {\r\n\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game.factory;\r\n\r\nimport pixi.display.FlumpMovie;\r\nimport pixi.core.display.Container;\r\n\t\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass FlumpMovieAnimFactory extends AnimFactory \r\n{\r\n\t\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\toverride public function getAnim ():Container {\r\n\t\tif (anim !=null) {\r\n\t\t\tanim.parent.removeChild(anim);\r\n\t\t\tanim.destroy();\r\n\t\t\tanim = null;\r\n\t\t}\r\n\t\treturn super.getAnim();\r\n\t}\r\n\t\r\n\toverride public function create (pID:String):Container {\r\n\t\tanim = new FlumpMovie(pID);\r\n\t\treturn anim;\r\n\t}\r\n\t\r\n\toverride public function setFrame (?pAutoPlay:Bool = true, ?pStart:UInt = 0): Void {\r\n\t\tvar lAnim:FlumpMovie = cast(anim, FlumpMovie);\r\n\t\t\r\n\t\tif (lAnim.totalFrames > 1) {\r\n\t\t\tif (pAutoPlay) lAnim.gotoAndPlay(pStart);\r\n\t\t\telse lAnim.gotoAndStop(pStart);\r\n\t\t}\r\n\t\telse if (!pAutoPlay) lAnim.stop();\r\n\t}\r\n\r\n}","package com.isartdigital.utils.game.factory;\r\n\r\nimport pixi.core.display.Container;\r\nimport pixi.display.FlumpSprite;\r\n\r\n\t\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass FlumpSpriteAnimFactory extends AnimFactory \r\n{\r\n\t\r\n\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\toverride public function getAnim ():Container {\r\n\t\tif (anim !=null) {\r\n\t\t\tanim.parent.removeChild(anim);\r\n\t\t\tanim.destroy();\r\n\t\t\tanim = null;\r\n\t\t}\r\n\t\treturn super.getAnim();\r\n\t}\r\n\t\r\n\toverride public function create (pID:String):Container {\r\n\t\tanim = new FlumpSprite(pID);\r\n\t\treturn anim;\r\n\t}\r\n\t\r\n\toverride public function setFrame (?pAutoPlay:Bool=true, ?pStart:UInt = 0): Void {\r\n\t}\r\n\r\n}","package com.isartdigital.utils.game.factory;\r\nimport haxe.Json;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.textures.Texture;\r\nimport pixi.extras.MovieClip;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass MovieClipAnimFactory extends AnimFactory\r\n{\r\n\r\n\t/**\r\n\t * longueur de la numérotation des textures\r\n\t */\r\n\tpublic static var textureDigits (default, set) :UInt = 4;\r\n\t\r\n\tprivate static function set_textureDigits (pDigits:UInt) : UInt {\r\n\t\tdigits = \"\";\r\n\t\tfor (i in 0...pDigits) digits += \"0\";\r\n\t\treturn textureDigits = pDigits;\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * définition des textures (nombre d'images)\r\n\t */\r\n\tprivate static var texturesDefinition:Map<String,Int>;\r\n\t\r\n\t/**\r\n\t * cache des textures de tous les StateGraphic\r\n\t */\r\n\tprivate static var texturesCache:Map<String,Array<Texture>>;\r\n\t\r\n\t/**\r\n\t * nombre de zéro a ajouter pour construire un nom de frame\r\n\t */\r\n\tprivate static var digits:String;\t\r\n\t\r\n\t/**\r\n\t * Analyse et crée les définitions de textures\r\n\t * @param\tpJson objet contenant la description des assets\r\n\t */\r\n\tstatic public function addTextures (pJson:Json): Void {\r\n\t\t\r\n\t\tvar lFrames:Dynamic = Reflect.field(pJson, \"frames\");\r\n\t\t\r\n\t\tif (texturesDefinition == null) texturesDefinition = new Map<String,Int>();\r\n\t\tif (digits == null) textureDigits = textureDigits;\r\n\t\t\r\n\t\tvar lID:String;\r\n\t\tvar lNum:Int;\r\n\t\t\r\n\t\tfor (lID in Reflect.fields(lFrames)) {\r\n\t\t\t\r\n\t\t\tlID = lID.split(\".\")[0];\r\n\t\t\tlNum = Std.parseInt(lID.substr(-1*textureDigits));\r\n\t\t\tif (lNum != null) lID = lID.substr(0, lID.length - textureDigits);\r\n\t\t\t\r\n\t\t\tif (texturesDefinition[lID] == null) texturesDefinition[lID] = lNum == null ? 1 : lNum;\r\n\t\t\telse if (lNum > texturesDefinition[lID]) texturesDefinition[lID] = lNum;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (texturesCache == null) texturesCache = new Map<String,Array<Texture>>();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Vide le cache de textures correspondant à la description passée en paramètres\r\n\t * @param\tpJson objet contenant la description des assets\r\n\t */\r\n\tstatic public function clearTextures (pJson:Json): Void {\r\n\t\t\r\n\t\tvar lFrames:Dynamic = Reflect.field(pJson, \"frames\");\r\n\t\t\r\n\t\tif (texturesDefinition == null) return;\r\n\t\t\r\n\t\tvar lID:String;\r\n\t\tvar lNum:Int;\r\n\t\t\r\n\t\tfor (lID in Reflect.fields(lFrames)) {\r\n\t\t\t\r\n\t\t\tlID = lID.split(\".\")[0];\r\n\t\t\tlNum = Std.parseInt(lID.substr(-1*textureDigits));\r\n\t\t\tif (lNum != null) lID = lID.substr(0, lID.length - textureDigits);\r\n\t\t\t\r\n\t\t\ttexturesDefinition[lID] = null;\r\n\t\t\ttexturesCache[lID] = null;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsuper();\r\n\t\t\r\n\t}\r\n\t\r\n\toverride public function create (pID:String):Container {\r\n\t\tanim = new MovieClip(getTextures(pID));\r\n\t\treturn anim;\r\n\t}\r\n\t\r\n\toverride public function update (pID:String):Void {\r\n\t\tcast(anim,MovieClip).textures = getTextures(pID);\r\n\t}\r\n\t\r\n\toverride public function setFrame (?pAutoPlay:Bool=true, ?pStart:UInt = 0): Void {\r\n\t\tvar lAnim:MovieClip = cast(anim, MovieClip);\r\n\t\t\r\n\t\tlAnim.gotoAndStop(pStart);\r\n\t\tif (pAutoPlay) lAnim.play();\r\n\t}\r\n\t\r\n\t/**\r\n\t * Cherche dans le cache général de textures le tableau de textures correspondant au state et le retourne.\r\n\t * Si le tableau de texture n'éxiste pas, il le crée et le stocke dans le cache\r\n\t * @param\tpID ID complet de l'anim\r\n\t * @return\tle tableau de texture correspondant au state de l'instance\r\n\t */\r\n\tprivate function getTextures(pID:String):Array<Texture> {\r\n\t\t\r\n\t\tif (texturesCache[pID] == null) {\r\n\t\t\tvar lFrames:UInt = texturesDefinition[pID];\r\n\t\t\tif (lFrames == 1) texturesCache[pID] =[Texture.fromFrame(pID+\".png\")];\r\n\t\t\telse {\r\n\t\t\t\ttexturesCache[pID] = new Array<Texture>();\r\n\t\t\t\tfor (i in 1...lFrames+1) texturesCache[pID].push(Texture.fromFrame(pID+(digits + i).substr(-1*textureDigits) + \".png\"));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn texturesCache[pID];\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.game.iso;\r\nimport com.isartdigital.builder.game.GameManager;\r\nimport pixi.core.math.Point;\r\n\r\n/**\r\n * Manager Iso\r\n * @author Mathieu Anthoine\r\n */\r\nclass IsoManager\r\n{\t\r\n\t\r\n\tprivate static var halfWidth:Float;\r\n\tprivate static var halfHeight:Float;\r\n\t\r\n\t/**\r\n\t * Initialisation du Manager Iso\r\n\t * @param\tpTileWidth largeur des tuiles\r\n\t * @param\tpTileHeight hauteur des tuiles\r\n\t */\r\n\tpublic static function init (pTileWidth:UInt, pTileHeight:UInt): Void {\r\n\t\thalfWidth = pTileWidth / 2;\r\n\t\thalfHeight = pTileHeight / 2;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Conversion du modèle à la vue Isométrique\r\n\t * @param\tpPoint colonne et ligne dans le modèle\r\n\t * @return point en x, y dans la vue\r\n\t */\r\n\tpublic static function modelToIsoView(pPoint:Point):Point {\r\n\t\treturn new Point (\r\n\t\t\t(pPoint.x - pPoint.y)*halfWidth,\r\n\t\t\t(pPoint.x + pPoint.y)*halfHeight\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Conversion de la vue Isométrique au modèle\r\n\t * @param\tpPoint coordonnées dans la vue\r\n\t * @return colonne et ligne dans le modèle (valeurs non arrondies)\r\n\t */\r\n\tpublic static function isoViewToModel(pPoint:Point):Point {\r\n\t\treturn new Point (\r\n\t\t\tMath.ceil((pPoint.y/halfHeight+pPoint.x/halfWidth)/2),\r\n\t\t\tMath.ceil((pPoint.y/halfHeight-pPoint.x/halfWidth)/2)\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n     * détermine si l'objet A est devant l'objet B\r\n     * @param    pA Objet \"Zsortable\" A\r\n     * @param    pB Objet \"Zsortable\" B\r\n     * @return pA, pB ou null si les objets ne se superposent pas\r\n     */\r\n    public static function isInFrontOf(pA:IZSortable,pB:IZSortable):IZSortable {\r\n        \r\n        // test d'intersection\r\n        if ((pA.colMax < pB.colMin || pA.colMin > pB.colMax) && (pA.rowMax < pB.rowMin || pA.rowMin > pB.rowMax)) {\r\n            if (pA.colMax + pA.rowMax> pB.colMax + pB.rowMax) return pA;\r\n            else return pB;\r\n        }\r\n        \r\n        // test sur col\r\n        if (pA.colMax<pB.colMin || pA.colMin >pB.colMax) {\r\n            if (pA.colMin >= pB.colMax) return pA;\r\n            if (pB.colMin >= pA.colMax) return pB;\r\n        }\r\n        \r\n        //test sur row\r\n        if (pA.rowMax<pB.rowMin || pA.rowMin >pB.rowMax) {\r\n            if (pA.rowMin >= pB.rowMax) return pA;\r\n            if (pB.rowMin >= pA.rowMax) return pB;\r\n        }\r\n        \r\n        return pB;\r\n\r\n    }\r\n\t\r\n\t/**\r\n\t * Détermine la profondeur de l'objet \r\n\t * @param\tpItem Objet \"Zsortable\"\r\n\t * @param\tpList tableau des objets \"Zsortable\" à l'écran\r\n\t * @return\tprofondeur \r\n\t */\r\n\tpublic static function getDepth (pItem:IZSortable, pList:Array<IZSortable>):UInt {\r\n\t\tfor (i in 0...pList.length) {\r\n\t\t\tif (pList[i] == isInFrontOf(pItem, pList[i])) return i;\r\n\t\t}\r\n\t\t\r\n\t\treturn pList.length;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Récupère l'index de la position de la souris dans la grille\r\n\t * @return\r\n\t */\r\n\tpublic static function getMousePositionIndex():Point {\r\n\t\tvar lGameManager:GameManager = GameManager.getInstance();\r\n\t\tvar mouseCoord:Point = isoViewToModel(lGameManager.mousePosition);\r\n\t\treturn mouseCoord;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Tri tous les objet du jeu\r\n\t */\r\n\tpublic static function sortAll():Void {\r\n\t\tGameStage.getInstance().getBuildingsContainer().children.sort(cast(isInFrontOf));\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.loader;\r\nimport com.isartdigital.utils.events.LoadEventType;\r\nimport com.isartdigital.utils.sounds.SoundDef;\r\nimport com.isartdigital.utils.sounds.SoundManager;\r\nimport haxe.Json;\r\nimport howler.Howl;\r\nimport howler.Howler;\r\nimport pixi.loaders.FlumpParser;\r\nimport pixi.loaders.Loader;\r\nimport pixi.loaders.Resource;\r\nimport pixi.loaders.ResourceLoader;\r\nimport webfont.WebFontLoader;\r\n\r\n/**\r\n * Classe de chargement\r\n * Cette classe permet de gérer des chargements par lot aussi bien de fichiers textes que de ressources graphiques ou du son\r\n * @author Mathieu ANTHOINE\r\n * @version 0.2.0\r\n */\r\nclass GameLoader extends Loader\r\n{\r\n\r\n\t/**\r\n\t * liste des fichiers sons à charger\r\n\t */\r\n\tprivate var soundsList:Array<String>;\r\n\t\r\n\tprivate var soundsSpecs:Map<String,HowlOptions>;\r\n\t\r\n\t/**\r\n\t * liste des fichiers chargés\r\n\t */\r\n\tprivate static var txtLoaded:Map<String,Dynamic> = new Map<String,Dynamic>();\r\n\t\r\n\t/**\r\n\t* retourne le contenu chargé pour le chemin de fichier passé en paramètre\r\n\t* @param\tpFile chemin du fichier\r\n\t* @return\tfichier Json\r\n\t*/\r\n\tpublic static function getContent (pFile:String):Json {\r\n\t\treturn txtLoaded[Config.txtsPath+pFile];\r\n\t}\r\n\t\r\n\tpublic function new() \r\n\t{\r\n\t\tsoundsList = [];\r\n\t\tsoundsSpecs = new Map();\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/**\r\n\t* ajoute un fichier de type texte à la liste de chargement (actuellement seuls les JSon sont supportés)\r\n\t* @param\tpUrl chaine de caractères spécifiant le chemin vers le fichier\r\n\t*/\r\n\tpublic function addTxtFile (pUrl:String):Void {\r\n\t\tvar lUrl:String = Config.txtsPath + pUrl;\r\n\t\tadd(lUrl);\r\n\t}\t\r\n\t\r\n\t/**\r\n\t* ajoute un fichier d'assets à la liste de chargement\r\n\t* @param\tpUrl chaine de caractère spécifiant le nom du fichier\r\n\t*/\r\n\tpublic function addAssetFile (pUrl:String):Void {\t\r\n\t\tvar lUrl:String = Config.assetsPath + pUrl;\r\n\t\tadd(lUrl);\t\t\r\n\t}\r\n\r\n\t/**\r\n\t* ajoute une liste de sons à la liste de chargement\r\n\t* @param\tpUrl chaine de caractère spécifiant le nom du fichier\r\n\t*/\r\n\tpublic function addSoundFile (pUrl:String):Void {\t\r\n\t\tvar lUrl:String = Config.soundsPath + pUrl;\r\n\t\tsoundsList.push(lUrl);\r\n\t\tadd(lUrl);\r\n\t}\t\r\n\t\r\n\t/**\r\n\t* ajoute un fichier css de polices de caractère\r\n\t* @param\tpUrl chaine de caractère spécifiant le nom du fichier\r\n\t*/\r\n\tpublic function addFontFile (pUrl:String):Void {\t\r\n\t\tvar lUrl:String = Config.fontsPath + pUrl;\r\n\t\tadd(lUrl);\t\t\r\n\t}\r\n\t\r\n\tprivate function parseData (pResource:Resource, pNext:Void->Void): Void {\r\n\t\t\r\n\t\ttrace (pResource.url + \" loaded\");\r\n\t\t\r\n\t\tif (pResource.url.indexOf(\".css\") > 0) {\r\n\t\t\t\r\n\t\t\tvar lData:Array<String> = pResource.data.split(\";\");\r\n\t\t\tvar lFamilies:Array<String> = [];\r\n\t\t\tvar lReg:EReg = ~/font-family:\\s?(.*)/; \r\n\t\t\t\r\n\t\t\tfor (i in 0...lData.length) {\r\n\t\t\t\tif (lReg.match(lData[i])) lFamilies.push(lReg.matched(1));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar lWebFontConfig = {\r\n\t\t\t\tcustom: {\r\n\t\t\t\t\tfamilies: lFamilies,\r\n\t\t\t\t\turls: [Config.fontsPath+\"fonts.css\"],\r\n\t\t\t\t},\r\n\r\n\t\t\t\tactive: pNext\r\n\t\t\t};\r\n\t\t   \r\n\t\t\tWebFontLoader.load(lWebFontConfig);\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (pResource.isJson) {\t\t\t\r\n\t\t\ttxtLoaded[pResource.url] = pResource.data;\r\n\t\t\t\r\n\t\t\tif(pResource.url.substr(-12,12)==\"library.json\" && Reflect.hasField(pResource.data,\"md5\") && Reflect.hasField(pResource.data,\"movies\") && Reflect.hasField(pResource.data,\"textureGroups\") && Reflect.hasField(pResource.data,\"frameRate\")) {\r\n\t\t\t\tFlumpParser.flumpParser(pResource, pNext);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if (soundsList.length>0) { \r\n\t\t\t\r\n\t\t\t\tvar lData:SoundDef;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...soundsList.length) {\r\n\t\t\t\t\tif (pResource.url == soundsList[i]) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsoundsList.splice(i, 1);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlData = pResource.data;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tfor (j in 0...lData.extensions.length) {\r\n\t\t\t\t\t\t\tif (Howler.codecs(lData.extensions[j])) {\r\n\t\t\t\t\t\t\t\taddSounds(lData.fxs,false,lData.extensions,lData.extensions[i]);\r\n\t\t\t\t\t\t\t\taddSounds(lData.musics,true,lData.extensions,lData.extensions[i]);\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tpNext();\r\n\t}\r\n\t\r\n\tprivate function addSounds (pList:Dynamic, pLoop:Bool, pExtensions:Array<String>, pCodec:String): Void {\t\r\n\t\tvar lUrl:String;\r\n\t\tfor (lID in Reflect.fields(pList)) {\r\n\t\t\tlUrl = Config.soundsPath + lID + \".\" + pCodec;\r\n\t\t\tsoundsSpecs.set(lID, {urls:[lUrl],volume:Reflect.field(pList, lID) / 100, loop:pLoop} );\r\n\t\t\tadd(lUrl);\r\n\t\t}\r\n\t}\r\n\r\n\toverride public function load (?cb:Void -> Void):ResourceLoader {\r\n\t\tafter(parseData);\r\n\t\tonce(LoadEventType.COMPLETE, onComplete);\r\n\t\treturn super.load();\r\n\t}\r\n\t\r\n\tprivate function onComplete ():Void {\r\n\t\tfor (lID in soundsSpecs.keys()) {\r\n\t\t\tSoundManager.addSound(lID, new Howl (soundsSpecs[lID]));\r\n\t\t}\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.sounds;\r\n\r\nimport howler.Howl;\r\n\r\n\t\r\n/**\r\n * Manager centralisé de Sons Howler\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass SoundManager\r\n{\r\n\t/**\r\n\t * liste de tous les sons du jeu\r\n\t */\r\n\tprivate static var list (default,null):Map<String,Howl>;\r\n\t\r\n\tprivate function new() {\r\n\t}\r\n\t\r\n\t/**\r\n\t * ajoute un son à la liste\r\n\t * @param\tpName identifiant du son\r\n\t * @param\tpSound son\r\n\t */\r\n\tpublic static function addSound (pName:String,pSound:Howl):Void {\r\n\t\tif (list == null) list = new Map<String,Howl>();\r\n\t\tlist[pName] = pSound;\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne une référence vers le son par l'intermédiaire de son identifiant\r\n\t * @param\tpName identifiant du son\r\n\t * @return le son\r\n\t */\r\n\tpublic static function getSound(pName:String): Howl {\r\n\t\treturn list[pName];\r\n\t}\r\n\r\n}","package com.isartdigital.utils.system;\r\n\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport js.Browser;\r\nimport js.html.Element;\r\nimport js.html.Event;\r\nimport js.html.Image;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\t\r\n/**\r\n * Classe Utilitaire donnant accès à des propriétés du périphérique cible\r\n * Tous les périphériques ne se comportant pas comme on l'attend, DeviceCapabilities permet de\r\n * masquer les comportement différents et présenter une facade unique au reste du code\r\n * @version 0.3.0\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass DeviceCapabilities \r\n{\t\t\r\n\r\n\tpublic static inline var SYSTEM_ANDROID: String = \"Android\";\r\n\tpublic static inline var SYSTEM_IOS: String = \"iOS\";\r\n\tpublic static inline var SYSTEM_BLACKBERRY: String = \"BlackBerry\";\r\n\tpublic static inline var SYSTEM_BB_PLAYBOOK: String = \"BlackBerry PlayBook\";\r\n\tpublic static inline var SYSTEM_WINDOWS_MOBILE: String = \"IEMobile\";\r\n\tpublic static inline var SYSTEM_DESKTOP: String = \"Desktop\";\t\r\n\t\r\n\tprivate static var fullScreenButton:Image;\r\n\tprivate static inline var ICON_SIZE:Float = 0.075;\r\n\r\n\tpublic static inline var TEXTURE_NO_SCALE: String = \"\";\r\n\tpublic static inline var TEXTURE_HD: String = \"hd\";\r\n\tpublic static inline var TEXTURE_MD: String = \"md\";\r\n\tpublic static inline var TEXTURE_LD: String = \"ld\";\t\r\n\t\r\n\tprivate static var texturesRatios: Map<String,Float> = [\"hd\"=>1,\"md\"=>0.5,\"ld\"=>0.25];\r\n\t\r\n\tpublic static var textureRatio (default,null):Float = 1;\r\n\tpublic static var textureType (default,null):String = TEXTURE_NO_SCALE;\t\r\n\t\r\n\tprivate static var screenRatio:Float = 1;\r\n\t\r\n\t/**\r\n\t  * hauteur du Canvas (change avec l'orientation)\r\n\t  */\r\n\tpublic static var height (get, never) : UInt;\r\n\t\r\n\tprivate static function get_height () {\r\n\t\treturn Browser.window.innerHeight;\r\n\t}\r\n\t\r\n\t/**\r\n\t  * largeur du Canvas (change avec l'orientation)\r\n\t  */\r\n\tpublic static var width (get, never) : UInt;\r\n\t\r\n\tprivate static function get_width () {\r\n\t\treturn Browser.window.innerWidth;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Système d'exploitation du Device\r\n\t */\r\n\tpublic static var system (get, never) : String;\r\n\t\r\n\tprivate static function get_system( ) {\r\n\t\tif ( ~/IEMobile/i.match(Browser.navigator.userAgent)) return SYSTEM_WINDOWS_MOBILE;\t\r\n\t\telse if ( ~/iPhone|iPad|iPod/i.match(Browser.navigator.userAgent)) return SYSTEM_IOS;\r\n\t\telse if ( ~/BlackBerry/i.match(Browser.navigator.userAgent)) return SYSTEM_BLACKBERRY;\r\n\t\telse if ( ~/PlayBook/i.match(Browser.navigator.userAgent)) return SYSTEM_BB_PLAYBOOK;\r\n\t\telse if ( ~/Android/i.match(Browser.navigator.userAgent)) return SYSTEM_ANDROID;\r\n\t\telse return SYSTEM_DESKTOP;\r\n\t}\r\n\t\r\n\t/**\r\n\t * affiche le bouton de fullscreen\r\n\t */\r\n\tpublic static function displayFullScreenButton ():Void {\r\n\t\tif (!~/(iPad|iPhone|iPod)/g.match(Browser.navigator.userAgent) && !~/MSIE/i.match(Browser.navigator.userAgent) /*&& !(Browser.window.location.hash = !!Browser.window.MSInputMethodContext)*/) {\r\n\r\n\t\t\tBrowser.document.onfullscreenchange = onChangeFullScreen;\r\n\t\t\tuntyped Browser.document.onwebkitfullscreenchange = onChangeFullScreen;\r\n\t\t\tuntyped Browser.document.onmozfullscreenchange = onChangeFullScreen;\r\n\t\t\tuntyped Browser.document.onmsfullscreenchange = onChangeFullScreen;\r\n\t\t\t//Browser.document.addEventListener(\"MSFullscreenChange\", onChangeFullScreen );\r\n\t\t\t\r\n\t\t\tfullScreenButton = new Image();\r\n\t\t\tfullScreenButton.style.position = 'absolute';\r\n\t\t\tfullScreenButton.style.right = '0px';\r\n\t\t\tfullScreenButton.style.top = '0px';\r\n\t\t\tfullScreenButton.style.cursor = \"pointer\";\r\n\t\t\tfullScreenButton.width = Std.int(getSizeFactor()*ICON_SIZE);\r\n\t\t\tfullScreenButton.height = Std.int(getSizeFactor()*ICON_SIZE);\r\n\t\t\tfullScreenButton.onclick = enterFullscreen;\r\n\t\t\tfullScreenButton.src = Config.assetsPath+\"fullscreen.png\";\r\n\t\t\t\r\n\t\t\tBrowser.document.body.appendChild(fullScreenButton);\r\n\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * entre dans le mode fullscreen\r\n\t * @param\tpEvent\r\n\t */\r\n\tprivate static function enterFullscreen(pEvent:Event):Void {\r\n\t\tvar lDocElm:Element = Browser.document.documentElement;\r\n\t\tif (lDocElm.requestFullscreen!=null) lDocElm.requestFullscreen();\r\n\t\telse if (untyped lDocElm.mozRequestFullScreen!=null) untyped lDocElm.mozRequestFullScreen();\r\n\t\telse if (untyped lDocElm.webkitRequestFullScreen!=null) untyped lDocElm.webkitRequestFullScreen();\r\n\t\telse if (untyped lDocElm.msRequestFullscreen!=null) untyped lDocElm.msRequestFullscreen();\r\n\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * sort du mode fullscreen\r\n\t */\r\n\tprivate static function exitFullscreen():Void {\r\n\t\tif (Browser.document.exitFullscreen!=null) Browser.document.exitFullscreen();\r\n\t\telse if (untyped Browser.document.mozCancelFullScreen!=null) untyped Browser.document.mozCancelFullScreen();\r\n\t\telse if (untyped Browser.document.webkitCancelFullScreen!=null) untyped Browser.document.webkitCancelFullScreen();\r\n\t\telse if (untyped Browser.document.msExitFullscreen) untyped Browser.document.msExitFullscreen();\r\n\t}\r\n\r\n\t/**\r\n\t * callback appelée sur changement d'état fullscreen\r\n\t * @param\tpEvent\r\n\t */\r\n\tprivate static function onChangeFullScreen (pEvent:Event):Void {\r\n\t\tif (untyped Browser.document.fullScreen || untyped Browser.document.mozFullScreen || untyped Browser.document.webkitIsFullScreen || untyped Browser.document.msFullscreenElement) {\r\n\t\t\tfullScreenButton.style.display = 'none';\r\n\t\t} else {\r\n\t\t\tfullScreenButton.style.display = 'block';\r\n\t\t}\r\n\t\tpEvent.preventDefault();\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Calcul la dimension idéale du bouton en fonction du device\r\n\t * @return fullscreen ideal size\r\n\t */\r\n\tpublic static function getSizeFactor ():Float {\r\n\t\tvar lSize:Float=Math.floor(Math.min(Browser.window.screen.width,Browser.window.screen.height));\r\n\t\tif (system==SYSTEM_DESKTOP) lSize/=3;\r\n\r\n\t\treturn lSize;\r\n\t}\r\n\t\t\r\n\t/**\r\n\t * retourne un objet Rectangle correspondant aux dimensions de l'écran dans le repère du DisplayObject passé en paramètre\r\n\t * @param pTarget repère cible\r\n\t * @return objet Rectangle\r\n\t */\r\n\tpublic static function getScreenRect(pTarget:DisplayObject):Rectangle {\r\n\r\n\t\tvar lTopLeft:Point = new Point (0, 0);\r\n\t\tvar lBottomRight:Point = new Point (width, height);\r\n\t\t\r\n\t\tlTopLeft = pTarget.toLocal(lTopLeft);\r\n\t\tlBottomRight = pTarget.toLocal(lBottomRight);\r\n\t\t\r\n\t\treturn new Rectangle(lTopLeft.x, lTopLeft.y, lBottomRight.x - lTopLeft.x, lBottomRight.y - lTopLeft.y);\r\n\t}\r\n\r\n\t/**\r\n\t * Calibre le viewport pour que le Browser affiche la résolution réeelle du Device\r\n\t */\r\n\tpublic static function scaleViewport (): Void {\r\n\t\tif (system == SYSTEM_WINDOWS_MOBILE) return;\r\n\t\t\r\n\t\tscreenRatio = Browser.window.devicePixelRatio;\r\n\t\tBrowser.document.write('<meta name=\"viewport\" content=\"initial-scale=' + Math.round(100 / screenRatio) / 100 + ', user-scalable=no, minimal-ui\">');\t\t\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Défini les ratios de texture\r\n\t * @param\tpHd ratio texture pour HD\r\n\t * @param\tpMd ratio texture pour MD\r\n\t * @param\tpLd ratio texture pour LD\r\n\t */\r\n\tpublic static function init(?pHd:Float = 1, ?pMd:Float = 0.5, ?pLd:Float = 0.25):Void {\r\n\r\n\t\ttexturesRatios[TEXTURE_HD]=pHd;\r\n\t\ttexturesRatios[TEXTURE_MD]=pMd;\r\n\t\ttexturesRatios[TEXTURE_LD]=pLd;\r\n\t\t\r\n\t\tif (Config.data.texture != null && Config.data.texture!=\"\") textureType = Config.data.texture;\r\n\t\telse {\r\n\t\t\tvar lRatio:Float = Math.min(Browser.window.screen.width * screenRatio / GameStage.getInstance().safeZone.width, Browser.window.screen.height * screenRatio / GameStage.getInstance().safeZone.height);\r\n\t\t\tif (lRatio <= 0.25) textureType = TEXTURE_LD;\r\n\t\t\telse if (lRatio <= 0.5) textureType = TEXTURE_MD;\r\n\t\t\telse textureType = TEXTURE_HD;\r\n\t\t}\r\n\t\ttextureRatio = texturesRatios[textureType];\r\n\t\t\r\n\t}\r\n\r\n}","package com.isartdigital.utils.ui;\r\n\r\nimport com.isartdigital.utils.game.factory.FlumpSpriteAnimFactory;\r\nimport com.isartdigital.utils.game.StateGraphic;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass UIAsset extends StateGraphic\r\n{\r\n\r\n\tpublic function new(pAssetName:String) \r\n\t{\r\n\t\tsuper();\r\n\t\tassetName = pAssetName;\r\n\t\tfactory = new FlumpSpriteAnimFactory();\r\n\t\tsetState(DEFAULT_STATE);\r\n\t}\r\n\t\r\n}","package com.isartdigital.utils.ui;\r\n\r\nimport com.isartdigital.builder.ui.uimodule.MoveButton;\r\nimport com.isartdigital.utils.game.GameStage;\r\nimport com.isartdigital.utils.loader.GameLoader;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport com.isartdigital.utils.ui.UIPosition;\r\nimport flump.json.FlumpJSON;\r\nimport pixi.core.display.Container;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.text.Text;\r\nimport pixi.display.FlumpSprite;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass UIBuilder\r\n{\r\n\t\r\n\t/**\r\n\t * fichier de description des assuets d'UI au format Flump\r\n\t */\r\n\tprivate static var description:String;\r\n\t\r\n\t/**\r\n\t * suffixe des FlumpSprite \"texte\"\r\n\t */\r\n\tprivate static inline var TXT_SUFFIX:String = \"_txt\";\r\n\t\r\n\t/**\r\n\t * suffixe des FlumpButton\r\n\t */\r\n\tprivate static inline var BTN_SUFFIX:String = \"Button\";\r\n\t\r\n\t/**\r\n\t * suffixe des Currencys\r\n\t */\r\n\tprivate static inline var CURRENCY_SUFFIX:String = \"_currency\";\t\r\n\t\r\n\t/**\r\n\t * suffixe des buildingHUD\r\n\t */\r\n\tprivate static inline var BUILDING_HUD_SUFFIX:String = \"_bHud\";\r\n\t\r\n\t/**\r\n\t * suffixe des Items du Shop\r\n\t */\r\n\tprivate static inline var ITEM_SHOP_SUFFIX:String = \"_item\";\r\n\t\r\n\t/**\r\n\t * package des classes Button du projet\r\n\t */\r\n\tprivate static var btnPackage:String;\r\n\tprivate static var hudPackage:String;\r\n\tprivate static var itemPackage:String;\r\n\t\r\n\tprivate static var textStyle:Map<String, UITextStyle> = new Map<String, UITextStyle>();\r\n\t\r\n\t/**\r\n\t * wrapper vers UIPosition\r\n\t */\r\n\tprivate static var uiPos:Map<String,String> =\r\n\t\t[\r\n\t\t\t\"L\" => UIPosition.LEFT,\r\n\t\t\t\"R\" => UIPosition.RIGHT,\r\n\t\t\t\"T\" => UIPosition.TOP,\r\n\t\t\t\"B\" => UIPosition.BOTTOM,\r\n\t\t\t\"TL\" => UIPosition.TOP_LEFT,\r\n\t\t\t\"TR\" => UIPosition.TOP_RIGHT,\r\n\t\t\t\"BL\" => UIPosition.BOTTOM_LEFT,\r\n\t\t\t\"BR\" => UIPosition.BOTTOM_RIGHT,\r\n\t\t\t\"FW\" => UIPosition.FIT_WIDTH,\r\n\t\t\t\"FH\" => UIPosition.FIT_HEIGHT,\r\n\t\t\t\"FS\" => UIPosition.FIT_SCREEN\r\n\t\t];\r\n\t\r\n\tprivate function new() {}\t\r\n\t\r\n\tpublic static function addTextStyle(pData:String) : Void\r\n\t{\r\n\t\tfor (pName in Reflect.fields(pData))\r\n\t\t{\r\n\t\t\ttextStyle.set(pName, Reflect.field(pData, pName));\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialise le parseur\r\n\t * @param\tpFile nom du fichier qui contient les données de mise en forme de l'UI\r\n\t * @param\tpPackage nom du package des boutons\r\n\t */\r\n\tpublic static function init(pFile:String,pPackage:String, pPackageCurrency:String, pPackgageItem:String):Void {\r\n\t\tdescription = pFile;\r\n\t\tbtnPackage = pPackage;\r\n\t\thudPackage = pPackageCurrency;\r\n\t\titemPackage = pPackgageItem;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Crée les éléments composant un Screen\r\n\t * @param\tpId assetName de l'écran\r\n\t */\r\n\tpublic static function build (pId:String) : Array<UIPositionable> {\r\n\t\t\r\n\t\tvar lData:FlumpJSON= cast GameLoader.getContent(description);\r\n\t\t\r\n\t\tvar lList:Array<Container>=[];\r\n\t\t\r\n\t\tvar lObj:Container;\r\n\t\tvar lItem;\r\n\t\t\r\n\t\tvar lUIPos:Array<UIPositionable>=[];\r\n\t\t\r\n\t\tfor (lMovie in lData.movies) {\r\n\t\t\tif (lMovie.id == pId) {\r\n\t\t\t\tfor (lItem in lMovie.layers) {\r\n\t\t\t\t\t//trace(\"Create Class : \" + lItem.keyframes[0].ref);\r\n\t\t\t\t\tif (lItem.name.indexOf(TXT_SUFFIX) != -1 && lItem.name.indexOf(TXT_SUFFIX)==lItem.name.length-TXT_SUFFIX.length) {\r\n\t\t\t\t\t\tlObj = getTextFromJson(lItem.name);\r\n\t\t\t\t\t} else if (lItem.name.indexOf(ITEM_SHOP_SUFFIX) != -1 && lItem.name.indexOf(ITEM_SHOP_SUFFIX) == lItem.name.length - ITEM_SHOP_SUFFIX.length) {\r\n\t\t\t\t\t\tlObj = Type.createInstance(Type.resolveClass(itemPackage +\".\"+lItem.keyframes[0].ref), []);\r\n\t\t\t\t\t} else if (lItem.name.indexOf(BTN_SUFFIX) != -1 && lItem.name.indexOf(BTN_SUFFIX)==lItem.name.length-BTN_SUFFIX.length) {\t\r\n\t\t\t\t\t\tlObj = Type.createInstance(Type.resolveClass(btnPackage+\".\" + lItem.keyframes[0].ref), []);\r\n\t\t\t\t\t} else if (lItem.name.indexOf(CURRENCY_SUFFIX) != -1 && lItem.name.indexOf(CURRENCY_SUFFIX) == lItem.name.length - CURRENCY_SUFFIX.length) {\r\n\t\t\t\t\t\tlObj = Type.createInstance(Type.resolveClass(hudPackage +\".\"+lItem.keyframes[0].ref), []);\r\n\t\t\t\t\t} else if (lItem.name.indexOf(BUILDING_HUD_SUFFIX) != -1 && lItem.name.indexOf(BUILDING_HUD_SUFFIX) == lItem.name.length - BUILDING_HUD_SUFFIX.length) {\r\n\t\t\t\t\t\tlObj = Type.createInstance(Type.resolveClass(hudPackage +\".\"+lItem.keyframes[0].ref), []);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlObj = new UIAsset(lItem.keyframes[0].ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlObj.name = lItem.keyframes[0].ref;\r\n\t\t\t\t\tif (Reflect.hasField(lItem.keyframes[0],\"loc\")) lObj.position.set(lItem.keyframes[0].loc.x, lItem.keyframes[0].loc.y);\r\n\t\t\t\t\tif (Reflect.hasField(lItem.keyframes[0],\"scale\")) lObj.scale.set(lItem.keyframes[0].scale.x, lItem.keyframes[0].scale.y);\r\n\t\t\t\t\tif (Reflect.hasField(lItem.keyframes[0],\"pivot\")) lObj.pivot.set(lItem.keyframes[0].pivot.x, lItem.keyframes[0].pivot.y);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// REMARQUE: gère uniquement la rotation, skew pas encore supporté par pixi en natif, attendre la future version pour pouvoir en profiter\r\n\t\t\t\t\tif (Reflect.hasField(lItem.keyframes[0],\"skew\")) lObj.rotation = lItem.keyframes[0].skew.x;\r\n\t\t\t\t\t\r\n\t\t\t\t\tlUIPos.push(getUIPositionable(lObj,uiPos.get(lItem.name.split(\"_\")[0])));\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn lUIPos;\r\n\t\t\r\n\t}\r\n\t\r\n\tprivate static function getTextFromJson(pName:String) : Text\r\n\t{\r\n\t\t//TO DO rajotuer les styles des textes\r\n\t\t\r\n\t\t//trace(\"get text from json \" + pName);\r\n\t\t//trace(textStyle);\r\n\t\tvar lTextStyle:UITextStyle = textStyle.get(pName);\r\n\t\t\r\n\t\t//trace(\"Size du text \" + lTextStyle.size);\r\n\t\t\r\n\t\tvar localizedText:String = lTextStyle.text;\r\n\t\t\r\n\t\tvar bold:String = lTextStyle.bold ? \"bold \" : \"\";\r\n\t\tvar italic:String = lTextStyle.italic ? \"italic \" : \"\";\r\n\t\tvar lStyle:TextStyle = { align : lTextStyle.align, font : bold + italic + lTextStyle.size + \"px Arial\"};\r\n\r\n\t\treturn new Text(localizedText, lStyle);\r\n\t}\r\n\t\r\n\t/**\r\n\t * retourne un UIPositionable correctement construit\r\n\t * @param\tpObj Item d'interface\r\n\t * @param\tpPosition ancrage \"UIPosition\"\r\n\t * @return un UIPositionable\r\n\t */\r\n\tprivate static function getUIPositionable (pObj:Container,pPosition:String):UIPositionable {\r\n\t\t\r\n\t\tvar lOffset:Point = new Point (0, 0);\r\n\t\t\r\n\t\tif (\r\n\t\t\tpPosition != UIPosition.BOTTOM &&\r\n\t\t\tpPosition != UIPosition.BOTTOM_LEFT &&\r\n\t\t\tpPosition != UIPosition.BOTTOM_RIGHT &&\r\n\t\t\tpPosition != UIPosition.FIT_HEIGHT &&\r\n\t\t\tpPosition != UIPosition.FIT_SCREEN &&\r\n\t\t\tpPosition != UIPosition.FIT_WIDTH &&\r\n\t\t\tpPosition != UIPosition.LEFT &&\r\n\t\t\tpPosition != UIPosition.RIGHT &&\r\n\t\t\tpPosition != UIPosition.TOP &&\r\n\t\t\tpPosition != UIPosition.TOP_LEFT &&\r\n\t\t\tpPosition != UIPosition.TOP_RIGHT\r\n\t\t) pPosition = \"\";\r\n\t\telse {\r\n\t\t\tif (pPosition == UIPosition.TOP || pPosition == UIPosition.TOP_LEFT || pPosition == UIPosition.TOP_RIGHT ||\r\n\t\t\t\tpPosition == UIPosition.BOTTOM || pPosition == UIPosition.BOTTOM_LEFT || pPosition == UIPosition.BOTTOM_RIGHT) lOffset.y = pObj.y;\r\n\t\t\tif (pPosition == UIPosition.LEFT || pPosition == UIPosition.TOP_LEFT || pPosition == UIPosition.BOTTOM_LEFT ||\r\n\t\t\t\tpPosition == UIPosition.RIGHT || pPosition == UIPosition.TOP_RIGHT || pPosition == UIPosition.BOTTOM_RIGHT) lOffset.x = pObj.x;\r\n\t\t}\r\n\t\t\r\n\t\treturn {item:pObj, align:pPosition, offsetX:lOffset.x, offsetY:lOffset.y, update:true};\r\n\t}\r\n}\r\n\r\n","package com.isartdigital.utils.ui;\r\nimport com.isartdigital.utils.system.DeviceCapabilities;\r\nimport pixi.core.display.DisplayObject;\r\nimport pixi.core.math.Point;\r\nimport pixi.core.math.shapes.Rectangle;\r\n\r\n/**\r\n * Classe utilitaire permettant de gérer le repositionnement des élements d'interface dans l'écran\r\n * @author Mathieu ANTHOINE\r\n */\r\n\r\nclass UIPosition \r\n{\r\n\tpublic static inline var LEFT:String=\"left\";\r\n\tpublic static inline var RIGHT:String=\"right\";\r\n\tpublic static inline var TOP:String=\"top\";\r\n\tpublic static inline var BOTTOM:String=\"bottom\";\r\n\tpublic static inline var TOP_LEFT:String=\"topLeft\";\r\n\tpublic static inline var TOP_RIGHT:String=\"topRight\";\r\n\tpublic static inline var BOTTOM_LEFT:String=\"bottomLeft\";\r\n\tpublic static inline var BOTTOM_RIGHT:String=\"bottomRight\";\r\n\t\r\n\tpublic static inline var FIT_WIDTH:String=\"fitWidth\";\r\n\tpublic static inline var FIT_HEIGHT:String=\"fitHeight\";\r\n\tpublic static inline var FIT_SCREEN:String = \"fitScreen\";\r\n\t\r\n\tprivate function new() {}\r\n\t\r\n\t/**\r\n\t* \r\n\t* @param\tpTarget DisplayObject à positionner\r\n\t* @param\tpPosition type de positionnement\r\n\t* @param\tpOffsetX décalage en X (positif si c'est vers l'interieur de la zone de jeu sinon en négatif)\r\n\t* @param\tpOffsetY décalage en Y (positif si c'est vers l'interieur de la zone de jeu sinon en négatif)\r\n\t*/\r\n\tstatic public function setPosition (pTarget:DisplayObject, pPosition:String, pOffsetX:Float = 0, pOffsetY:Float = 0): Void {\r\n\t\t\t\t\r\n\t\tvar lScreen:Rectangle = DeviceCapabilities.getScreenRect(pTarget.parent);\r\n\t\t\r\n\t\tvar lTopLeft:Point = new Point (lScreen.x, lScreen.y);\r\n\t\tvar lBottomRight:Point = new Point (lScreen.x+lScreen.width,lScreen.y+lScreen.height);\r\n\t\t\r\n\t\tif (pPosition == TOP || pPosition == TOP_LEFT || pPosition == TOP_RIGHT) pTarget.y = lTopLeft.y + pOffsetY;\r\n\t\tif (pPosition == BOTTOM || pPosition == BOTTOM_LEFT || pPosition == BOTTOM_RIGHT) pTarget.y = lBottomRight.y - pOffsetY;\r\n\t\tif (pPosition == LEFT || pPosition == TOP_LEFT || pPosition == BOTTOM_LEFT) pTarget.x = lTopLeft.x + pOffsetX;\r\n\t\tif (pPosition == RIGHT || pPosition == TOP_RIGHT || pPosition == BOTTOM_RIGHT) pTarget.x = lBottomRight.x - pOffsetX;\r\n\t\t\r\n\t\tif (pPosition == FIT_WIDTH || pPosition == FIT_SCREEN) {\r\n\t\t\tpTarget.x = lTopLeft.x;\r\n\t\t\tuntyped pTarget.width = lBottomRight.x - lTopLeft.x;\r\n\t\t}\r\n\t\tif (pPosition == FIT_HEIGHT || pPosition == FIT_SCREEN) {\r\n\t\t\tpTarget.y = lTopLeft.y;\r\n\t\t\tuntyped pTarget.height = lBottomRight.y - lTopLeft.y;\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n}\r\n","package flump;\n\nimport flump.library.Keyframe;\n\n\nclass DisplayObjectKey {\n\n\tpublic var symbolId:String;\n\n\n\tpublic function new(symbolId:String){\n\t\tthis.symbolId = symbolId;\n\t}\n\n}","package flump;\n\nimport flump.DisplayObjectKey;\nimport flump.IFlumpMovie;\nimport flump.library.MovieSymbol;\nimport flump.library.Layer;\nimport flump.library.Keyframe;\nimport flump.library.Label;\nusing Std;\n\n\nclass MoviePlayer{\n\n\tprivate var symbol:MovieSymbol;\n\tprivate var movie:IFlumpMovie;\n\n\tprivate var elapsed:Float = 0.0; // Total time that has elapsed\n\tprivate var previousElapsed:Float = 0.0;\n\tprivate var advanced:Float = 0.0; // Time advanced since the last frame\n\n\tpublic var independantTimeline:Bool = true;\n\tpublic var independantControl:Bool = false;\n\n\tprivate var state:String;\n\tprivate var STATE_PLAYING:String = \"playing\";\n\tprivate var STATE_LOOPING:String = \"looping\";\n\tprivate var STATE_STOPPED:String = \"stopped\";\n\t\t\n\tprivate var currentChildrenKey = new Map<Layer, DisplayObjectKey>();\n\tprivate var createdChildren = new Map<DisplayObjectKey, Bool>();\n\tprivate var childPlayers = new Map<DisplayObjectKey, MoviePlayer>();\n\n\tprivate var labelsToFire = new Array<Label>();\n\tprivate var dirty:Bool = false;\n\tprivate var fullyGenerated:Bool = false;\n\n\n\tpublic function new(symbol:MovieSymbol, movie:IFlumpMovie){\n\t\tthis.symbol = symbol;\n\t\tthis.movie = movie;\n\t\t\n\t\tfor(layer in symbol.layers){\n\t\t\tmovie.createLayer(layer);\n\t\t}\n\n\t\tstate = STATE_LOOPING;\n\t}\n\n\n\tpublic function getDisplayKey(layerId:String, keyframeIndex:UInt = 0):DisplayObjectKey{\n\t\tvar layer = symbol.getLayer(layerId);\n\t\tif(layer == null) throw(\"Layer \" + layerId + \" does not exist.\");\n\t\tvar keyframe = layer.getKeyframeForFrame(keyframeIndex);\n\t\tif(keyframe == null) throw(\"Keyframe does not exist at index \" + keyframeIndex);\n\t\tcreateChildIfNessessary(keyframe);\n\t\treturn keyframe.displayKey;\n\t}\n\n\n\tprivate function reset(){\n\t\telapsed = 0;\n\t\tpreviousElapsed = 0;\n\t}\n\n\n\tprivate var position(get, null):Float = 0.0;\n\tpublic function get_position():Float{\n\t\treturn (elapsed % symbol.duration + symbol.duration) % symbol.duration;\n\t}\n\n\n\tpublic var totalFrames (get, null) :UInt;\n\tprivate function get_totalFrames(){\n\t\treturn symbol.totalFrames;\n\t}\n\n\n\tpublic function play(){\n\t\tsetState(STATE_PLAYING);\n\t\treturn this;\n\t}\n\n\n\tpublic function loop(){\n\t\tsetState(STATE_LOOPING);\n\t\treturn this;\n\t}\n\n\n\tpublic function stop(){\n\t\tsetState(STATE_STOPPED);\n\t\treturn this;\n\t}\n\n\n\tpublic function goToLabel(label:String){\n\t\tif(!labelExists(label)) throw(\"Symbol \" + symbol.name + \" does not have label \" + label + \".\" );\n\t\tcurrentFrame = getLabelFrame(label);\n\t\treturn this;\n\t}\n\n\n\tpublic function goToFrame(frame:Int){\n\t\tcurrentFrame = frame;\n\t\treturn this;\n\t}\n\n\n\tpublic function goToPosition(time:Float){\n\t\telapsed = time;\n\t\tpreviousElapsed = time;\n\t\tclearLabels();\n\t\tfireLabels();\n\t\treturn this;\n\t}\n\n\n\tpublic var playing(get, null):Bool;\n\tprivate function get_playing(){\n\t\treturn state == STATE_PLAYING;\n\t}\n\n\n\tpublic var looping(get, null):Bool;\n\tprivate function get_looping(){\n\t\treturn state == STATE_LOOPING;\n\t}\n\n\n\tpublic var stopped(get, null):Bool;\n\tprivate function get_stopped(){\n\t\treturn state == STATE_STOPPED;\n\t}\n\n\n\tpublic function getLabelFrame(label:String):UInt{\n\t\tif(!labelExists(label)) throw(\"Symbol \" + symbol.name + \" does not have label \" + label + \".\" );\n\t\treturn symbol.labels.get(label).keyframe.index;\n\t}\n\t\n\n\tpublic var currentFrame(get, set):Int;\n\tprivate function get_currentFrame():Int{\n\t\treturn Std.int(position / symbol.library.frameTime);\n\t}\n\tprivate function set_currentFrame(value:Int):Int{\n\t\tgoToPosition( symbol.library.frameTime * value);\n\t\treturn value;\n\t}\n\n\n\tpublic function labelExists(label:String):Bool{\n\t\treturn symbol.labels.exists(\"label\");\n\t}\n\n\n\tpublic function advanceTime(ms:Float):Void{\n\t\tif(state != STATE_STOPPED){\n\t\t\telapsed += ms;\n\t\t\twhile(elapsed < 0){\n\t\t\t\telapsed += symbol.duration;\n\t\t\t\tpreviousElapsed += symbol.duration;\n\t\t\t}\n\t\t}\n\t\tadvanced += ms;\n\n\t\tif(state != STATE_STOPPED) fireLabels();\n\t\trender();\n\t}\n\n\n\tprivate function clearLabels(){\n\t\twhile(labelsToFire.length > 0) labelsToFire.pop();\n\t}\n\n\n\tprivate function fireLabels(){\n\t\tif(symbol.firstLabel == null) return;\n\t\tif(previousElapsed > elapsed) return;\n\t\t\n\t\t\n\t\tvar label:Label = previousElapsed <= elapsed\n\t\t\t? symbol.firstLabel\n\t\t\t: symbol.lastLabel;\n\t\t\n\t\tvar checking = true;\n\t\twhile(checking){\n\t\t\tif(label.keyframe.time > previousElapsed%symbol.duration){\n\t\t\t\tchecking = false;\n\t\t\t\t//trace(label.keyframe.index);\n\t\t\t\t//label = label.prev;\n\t\t\t}else if(label.next.keyframe.index <= label.keyframe.index){\n\t\t\t\tchecking = false;\n\t\t\t\tlabel = label.next;\n\t\t\t}else{\n\t\t\t\tlabel = label.next;\n\t\t\t}\n\t\t}\n\t\t\n\n\n\t\tvar firstChecked = label;\n\n\t\twhile(label != null){\n\t\t\tvar checkFrom = previousElapsed % symbol.duration;\n\t\t\tvar checkTo = elapsed % symbol.duration;\n\t\t\tif(label.keyframe.insideRangeStart(checkFrom, checkTo)){\n\t\t\t\tlabelsToFire.push(label);\n\t\t\t\t//trace(\"pushed: \" + label.keyframe.index + \" || \" + (checkFrom/symbol.library.frameTime) + \" : \" + (checkTo/symbol.library.frameTime));\n\t\t\t}\n\n\t\t\tlabel = label.next;\n\t\t\tif(label == firstChecked) label = null;\n\t\t}\n\t\t\n\n\t\twhile(labelsToFire.length > 0){\n\t\t\tmovie.labelPassed(labelsToFire.shift());\n\t\t}\n\n\t}\n\n\n\n\tprivate function render():Void{\n\t\tif(state == STATE_PLAYING){\n\t\t\tif(position < 0){\n\t\t\t\telapsed = 0;\n\t\t\t\tstop();\n\t\t\t\tmovie.onAnimationComplete();\n\t\t\t}else if(position >= symbol.duration - symbol.library.frameTime){\n\t\t\t\telapsed = symbol.duration - symbol.library.frameTime;\n\t\t\t\tstop();\n\t\t\t\tmovie.onAnimationComplete();\n\t\t\t}\n\t\t}\n\n\t\twhile(position < 0) position += symbol.duration;\n\t\t\n\t\tfor(layer in symbol.layers){\n\t\t\tvar keyframe = layer.getKeyframeForTime(position);\n\n\t\t\tif(keyframe.isEmpty == true){\n\t\t\t\tremoveChildIfNessessary(keyframe);\n\t\t\t}else if(keyframe.isEmpty == false){\n\t\t\t\tvar interped = getInterpolation(keyframe, position);\n\t\t\t\tvar next = keyframe.next;\n\t\t\t\tif(next.isEmpty) next = keyframe; // NASTY! FIX THIS!!\n\n\t\t\t\tmovie.renderFrame(\n\t\t\t\t\tkeyframe,\n\t\t\t\t\tkeyframe.location.x + (next.location.x - keyframe.location.x) * interped,\n\t\t\t\t\tkeyframe.location.y + (next.location.y - keyframe.location.y) * interped,\n\t\t\t\t\tkeyframe.scale.x + (next.scale.x - keyframe.scale.x) * interped,\n\t\t\t\t\tkeyframe.scale.y + (next.scale.y - keyframe.scale.y) * interped,\n\t\t\t\t\tkeyframe.skew.x + (next.skew.x - keyframe.skew.x) * interped,\n\t\t\t\t\tkeyframe.skew.y + (next.skew.y - keyframe.skew.y) * interped\n\t\t\t\t);\n\n\n\t\t\t\tif(currentChildrenKey.get(layer) != keyframe.displayKey){\n\t\t\t\t\tcreateChildIfNessessary(keyframe);\n\t\t\t\t\tremoveChildIfNessessary(keyframe);\n\t\t\t\t\taddChildIfNessessary(keyframe);\n\t\t\t\t}\n\n\t\t\t\tif(keyframe.symbol.is(MovieSymbol)){\n\t\t\t\t\tvar childMovie = movie.getChildPlayer(keyframe);\n\n\t\t\t\t\tif(childMovie.independantTimeline){\n\t\t\t\t\t\tchildMovie.advanceTime(advanced);\n\t\t\t\t\t\tchildMovie.render();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tchildMovie.elapsed = position;\n\t\t\t\t\t\tchildMovie.render();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tadvanced = 0;\n\t\tpreviousElapsed = elapsed;\n\t}\n\n\n\tprivate function createChildIfNessessary(keyframe:Keyframe){\n\t\tif(keyframe.isEmpty) return;\n\t\tif(createdChildren.exists(keyframe.displayKey) == false){\n\t\t\tmovie.createFlumpChild(keyframe.displayKey);\n\t\t\tcreatedChildren[keyframe.displayKey] = true;\n\t\t}\n\t}\n\n\n\tprivate function removeChildIfNessessary(keyframe:Keyframe){\n\t\tif(currentChildrenKey.exists(keyframe.layer)){\n\t\t\tmovie.removeFlumpChild(keyframe.layer, keyframe.displayKey);\n\t\t\tcurrentChildrenKey.remove(keyframe.layer);\n\t\t}\n\t}\n\n\n\tprivate function addChildIfNessessary(keyframe:Keyframe){\n\t\tif(keyframe.isEmpty) return;\n\t\tcurrentChildrenKey[keyframe.layer] = keyframe.displayKey;\n\t\tmovie.addFlumpChild(keyframe.layer, keyframe.displayKey);\n\t}\n\n\n\t\n\t//////////////////////////////////////////////////////////////\n\t//\n\t//  Utilities\n\t//\n\t//////////////////////////////////////////////////////////////\n\n\tprivate function setState(state:String){\n\t\tthis.state = state;\n\n\t\tfor(layer in symbol.layers){\n\t\t\tvar keyframe = layer.getKeyframeForTime(position);\n\t\t\tcreateChildIfNessessary(keyframe);\n\n\t\t\tif(keyframe.symbol.is(MovieSymbol)){\n\t\t\t\tvar childMovie = movie.getChildPlayer(keyframe);\n\t\t\t\tif(childMovie.independantControl == false){\n\t\t\t\t\tchildMovie.setState(state);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprivate function timeForLabel(label:String):Float{\n\t\treturn symbol.labels[label].keyframe.time;\n\t}\n\n\n\tprivate function getInterpolation(keyframe:Keyframe, time:Float){\n\t\tif(keyframe.tweened == false) return 0.0;\n\t\t\n\t\tvar interped = (time - keyframe.time) / keyframe.duration;\n\t\tvar ease:Float = keyframe.ease;\n\t\tif (ease != 0) {\n\t\t\tvar t :Float;\n\t\t\tif (ease < 0) {\n\t\t\t\t// Ease in\n\t\t\t\tvar inv:Float = 1 - interped;\n\t\t\t\tt = 1 - inv * inv;\n\t\t\t\tease = -ease;\n\t\t\t} else {\n\t\t\t\t// Ease out\n\t\t\t\tt = interped * interped;\n\t\t\t}\n\t\t\tinterped = ease * t + (1 - ease) * interped;\n\t\t}\n\t\treturn interped;\n\t}\n\n\n}\n\n","package flump.json;\n\ntypedef FlumpJSON = {\n\tvar md5:String;\n\tvar movies:Array<MovieSpec>;\n\tvar textureGroups:Array<TextureGroupSpec>;\n\tvar frameRate: UInt;\n}\n\n\nabstract FlumpPointSpec(Array<Float>){\n\n\tpublic var x(get, never):Float;\n\tpublic var y(get, never):Float;\n\n\tinline public function get_x():Float{\n\t\treturn this[0];\n\t}\n\n\tinline public function get_y():Float{\n\t\treturn this[1];\n\t}\n}\n\n\nabstract FlumpRectSpec(Array<Float>){\n\n\tpublic var x(get, never):Float;\n\tpublic var y(get, never):Float;\n\tpublic var width(get, never):Float;\n\tpublic var height(get, never):Float;\n\n\tinline public function get_x():Float{\n\t\treturn this[0];\n\t}\n\n\tinline public function get_y():Float{\n\t\treturn this[1];\n\t}\n\n\tinline public function get_width():Float{\n\t\treturn this[2];\n\t}\n\n\tinline public function get_height():Float{\n\t\treturn this[3];\n\t}\n}\n\ntypedef MovieSpec = {\n\tvar layers:Array<LayerSpec>;\n\tvar id:ReferenceSpec;\n}\n\ntypedef ReferenceSpec = String;\n\ntypedef KeyframeSpec = {\n\tvar pivot:FlumpPointSpec;\n\tvar duration:UInt;\n\tvar loc:FlumpPointSpec;\n\tvar index:UInt;\n\tvar ref:ReferenceSpec;\n\tvar scale:FlumpPointSpec;\n\tvar skew:FlumpPointSpec;\n\tvar ease:Float;\n\tvar tweened:Bool;\n\tvar label:String;\n}\n\n\ntypedef TextureSpec = {\n\tvar symbol:ReferenceSpec;\n\tvar rect:FlumpRectSpec;\n\tvar origin:FlumpPointSpec;\n}\n\n\ntypedef TextureGroupSpec = {\n\tvar atlases:Array<AtlasSpec>;\n\tvar scaleFactor:UInt;\n}\n\n\ntypedef AtlasSpec = {\n\tvar file:String;\n\tvar textures:Array<TextureSpec>;\n}\n\n\ntypedef LayerSpec = {\n\tvar name:String;\n\tvar keyframes:Array<KeyframeSpec>;\n}\n\n\n\n","package flump.library;\n\nimport flump.DisplayObjectKey;\nimport flump.json.FlumpJSON;\nimport flump.library.Label;\nusing Lambda;\n\n\nclass FlumpLibrary{\n\n\tpublic var movies = new Map<String, MovieSymbol>();\n\tpublic var sprites = new Map<String, SpriteSymbol>();\n\tpublic var atlases = new Array<AtlasSpec>();\n\tpublic var framerate:Float;\n\tpublic var frameTime:Float;\n\tpublic var md5:String;\n\n\tfunction new(){}\n\n\n\tpublic static function create(flumpData:Dynamic):FlumpLibrary{\n\t\tvar lib:FlumpJSON = cast flumpData;\n\t\t\n\t\tvar spriteSymbols = new Map<String, SpriteSymbol>();\n\t\tvar movieSymbols = new Map<String, MovieSymbol>();\n\n\t\tvar flumpLibrary = new FlumpLibrary();\n\t\tflumpLibrary.sprites = spriteSymbols;\n\t\tflumpLibrary.movies = movieSymbols;\n\t\tflumpLibrary.framerate = lib.frameRate;\n\t\tflumpLibrary.frameTime = 1000/flumpLibrary.framerate;\t\t\n\t\tflumpLibrary.md5 = lib.md5;\n\n\t\tvar atlasSpecs = new Array<flump.json.FlumpJSON.AtlasSpec>();\n\t\tfor(textureGroup in lib.textureGroups){\n\t\t\tfor(atlas in textureGroup.atlases){\n\t\t\t\tflumpLibrary.atlases.push(atlas);\n\t\t\t\tatlasSpecs.push(atlas);\n\t\t\t}\n\t\t}\n\n\n\t\tfor(spec in atlasSpecs){\t\t\t\n\t\t\tfor(textureSpec in spec.textures){\n\t\t\t\tvar frame = new Rectangle(textureSpec.rect.x, textureSpec.rect.y, textureSpec.rect.width, textureSpec.rect.height);\n\t\t\t\tvar origin = new Point(textureSpec.origin.x, textureSpec.origin.y);\n\t\t\t\torigin.x = origin.x / frame.width;\n\t\t\t\torigin.y = origin.y / frame.height;\n\n\t\t\t\tvar symbol = new SpriteSymbol();\n\t\t\t\tsymbol.name = textureSpec.symbol;\n\t\t\t\tsymbol.origin = origin;\n\t\t\t\tsymbol.texture = textureSpec.symbol;\n\t\t\t\tspriteSymbols[symbol.name] = symbol;\n\t\t\t}\n\t\t}\n\n\t\tvar pendingSymbolAttachments = new Map<Keyframe, String>();\n\t\tfor(movieSpec in lib.movies){\n\t\t\tvar symbol = new MovieSymbol();\n\t\t\tsymbol.name = movieSpec.id;\n\t\t\tsymbol.library = flumpLibrary;\n\t\t\tfor(layerSpec in movieSpec.layers){\n\t\t\t\tvar layer = new Layer(layerSpec.name);\n\t\t\t\tlayer.movie = symbol;\n\t\t\t\tvar layerDuration:Float = 0;\n\t\t\t\tvar previousKeyframe:Keyframe = null;\n\t\t\t\tfor(keyframeSpec in layerSpec.keyframes){\n\t\t\t\t\tvar keyframe = new Keyframe();\n\t\t\t\t\tkeyframe.prev = previousKeyframe;\n\t\t\t\t\tif(previousKeyframe != null) previousKeyframe.next = keyframe;\n\t\t\t\t\tkeyframe.layer = layer;\n\t\t\t\t\tkeyframe.numFrames = keyframeSpec.duration;\n\t\t\t\t\tkeyframe.duration = keyframeSpec.duration * flumpLibrary.frameTime;\n\t\t\t\t\tkeyframe.index = keyframeSpec.index;\n\n\t\t\t\t\tvar time = keyframe.index * flumpLibrary.frameTime;\n\t\t\t\t\ttime *= 10;\n\t\t\t\t\ttime = Math.floor(time);\n\t\t\t\t\ttime /= 10;\n\t\t\t\t\tkeyframe.time = time;\n\t\t\t\t\t\n\t\t\t\t\tif(keyframeSpec.ref == null){\n\t\t\t\t\t\tkeyframe.isEmpty = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tkeyframe.isEmpty = false;\n\t\t\t\t\t\tkeyframe.symbolId = keyframeSpec.ref;\n\t\t\t\t\t\tkeyframe.pivot = keyframeSpec.pivot == null ? new Point(0,0) : new Point( keyframeSpec.pivot.x, keyframeSpec.pivot.y );\n\t\t\t\t\t\tkeyframe.location = keyframeSpec.loc == null ? new Point(0,0) : new Point( keyframeSpec.loc.x, keyframeSpec.loc.y );\n\t\t\t\t\t\tkeyframe.tweened = keyframeSpec.tweened == false ? false : true;\n\t\t\t\t\t\tkeyframe.symbol = null;\n\t\t\t\t\t\tkeyframe.scale = keyframeSpec.scale == null ? new Point(1,1) : new Point(keyframeSpec.scale.x, keyframeSpec.scale.y);\n\t\t\t\t\t\tkeyframe.skew = keyframeSpec.skew == null ? new Point(0,0) : new Point(keyframeSpec.skew.x, keyframeSpec.skew.y);\n\t\t\t\t\t\t\n\t\t\t\t\t\tkeyframe.ease = keyframeSpec.ease == null ? 0 : keyframeSpec.ease;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(layer.keyframes.length == 0) layer.firstKeyframe = keyframe;\n\n\t\t\t\t\tif(keyframeSpec.label != null){\n\t\t\t\t\t\tkeyframe.label = new Label();\n\t\t\t\t\t\tkeyframe.label.keyframe = keyframe;\n\t\t\t\t\t\tkeyframe.label.name = keyframeSpec.label;\n\t\t\t\t\t\tsymbol.labels.set(keyframe.label.name, keyframe.label);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(keyframe.time + keyframe.duration > layer.duration){\n\t\t\t\t\t\tlayerDuration = keyframe.time + keyframe.duration;\n\t\t\t\t\t}\n\n\t\t\t\t\tpendingSymbolAttachments[keyframe] = keyframeSpec.ref;\n\t\t\t\t\tlayer.keyframes.push(keyframe);\n\t\t\t\t\tpreviousKeyframe = keyframe;\n\t\t\t\t}\n\n\t\t\t\tlayer.lastKeyframe = layer.keyframes[layer.keyframes.length - 1];\n\t\t\t\tlayer.keyframes[0].prev = layer.lastKeyframe;\n\t\t\t\tlayer.lastKeyframe.next = layer.keyframes[0];\n\t\t\t\tsymbol.layers.push(layer);\n\n\t\t\t\tvar allAreEmpty = layer.keyframes.foreach(function(keyframe) return keyframe.isEmpty);\n\n\t\t\t\tif(allAreEmpty){\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tfor(keyframe in layer.keyframes){\n\t\t\t\t\t\tvar hasNonEmptySibling = layer.keyframes.exists(function(checkedKeyframe) return checkedKeyframe.isEmpty == false && checkedKeyframe != keyframe);\n\t\t\t\t\t\tif(hasNonEmptySibling){\n\t\t\t\t\t\t\tvar checked = keyframe.prev;\n\t\t\t\t\t\t\twhile(checked.isEmpty) checked = checked.prev;\n\t\t\t\t\t\t\tkeyframe.prevNonEmptyKeyframe = checked;\n\n\t\t\t\t\t\t\tchecked = keyframe.next;\n\t\t\t\t\t\t\twhile(checked.isEmpty) checked = checked.next;\n\t\t\t\t\t\t\tkeyframe.nextNonEmptyKeyframe = checked;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tkeyframe.prevNonEmptyKeyframe = keyframe;\n\t\t\t\t\t\t\tkeyframe.nextNonEmptyKeyframe = keyframe;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set up diplay keys\n\t\t\t\t\tvar firstNonEmpty = layer.keyframes.find(function(checkedKeyframe) return checkedKeyframe.isEmpty == false);\n\t\t\t\t\tif(firstNonEmpty != null) firstNonEmpty.displayKey = new DisplayObjectKey(firstNonEmpty.symbolId);\n\t\t\t\t\tvar checked = firstNonEmpty.nextNonEmptyKeyframe;\n\t\t\t\t\twhile(checked != firstNonEmpty){\n\t\t\t\t\t\tif(checked.symbolId == checked.prevNonEmptyKeyframe.symbolId) checked.displayKey = checked.prevNonEmptyKeyframe.displayKey;\n\t\t\t\t\t\telse checked.displayKey = new DisplayObjectKey(checked.symbolId);\n\t\t\t\t\t\tchecked = checked.nextNonEmptyKeyframe;\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t}\n\n\t\t\tfunction getHighestFrameNumber(layer:Layer, accum:UInt){\n\t\t\t\tvar layerLength = layer.lastKeyframe.index + layer.lastKeyframe.numFrames;\n\t\t\t\treturn layerLength > accum\n\t\t\t\t\t? layerLength\n\t\t\t\t\t: accum;\n\t\t\t}\n\n\t\t\tsymbol.totalFrames = symbol.layers.fold( getHighestFrameNumber, 0 );\n\t\t\tsymbol.duration = symbol.totalFrames * flumpLibrary.frameTime;\n\n\t\t\tvar labels = new Array<Label>();\n\t\t\tfor(layer in symbol.layers){\n\t\t\t\tfor(keyframe in layer.keyframes){\n\t\t\t\t\tif(keyframe.label != null){\n\t\t\t\t\t\tlabels.push(keyframe.label);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\thaxe.ds.ArraySort.sort(labels, sortLabel);\n\t\t\tfor(i in 0...labels.length){\n\t\t\t\tvar nextIndex = i+1;\n\t\t\t\tif(nextIndex >= labels.length) nextIndex = 0;\n\n\t\t\t\tvar label = labels[i];\n\t\t\t\tvar nextLabel = labels[nextIndex];\n\t\t\t\tlabel.next = nextLabel;\n\t\t\t\tnextLabel.prev = label;\n\t\t\t}\n\t\t\tsymbol.firstLabel = labels[0];\n\t\t\tsymbol.lastLabel = labels[labels.length-1];\n\t\t\t\n\t\t\tmovieSymbols[symbol.name] = symbol;\t\t\t\n\t\t}\n\n\t\tfor(keyframe in pendingSymbolAttachments.keys()){\n\t\t\tvar symbolId = pendingSymbolAttachments[keyframe];\n\t\t\tkeyframe.symbol = spriteSymbols[symbolId] != null ? spriteSymbols[symbolId] : movieSymbols[symbolId];\n\t\t}\n\n\t\treturn flumpLibrary;\n\t}\n\n\n\tprivate static function sortLabel(a:Label, b:Label):Int{\n\t\tif(a.keyframe.index < b.keyframe.index) return -1;\n\t\telse if(a.keyframe.index > b.keyframe.index) return 1;\n\t\treturn 0;\n\t}\n\n\n\n}","package flump.library;\n\n\nclass Keyframe{\n\n\tpublic var layer:Layer;\n\tpublic var symbolId:String;\n\tpublic var pivot:Point;\n\t\n\tpublic var location:Point;\n\tpublic var tweened:Bool;\n\n\tpublic var index:UInt;\n\tpublic var numFrames:UInt;\n\n\tpublic var time:Float;\n\tpublic var duration:Float;\n\t\n\tpublic var symbol:Symbol;\n\tpublic var scale:Point;\n\tpublic var skew:Point;\n\tpublic var ease:Float;\n\tpublic var label:Label;\n\tpublic var isEmpty:Bool;\n\n\tpublic var next:Keyframe;\n\tpublic var prev:Keyframe;\n\tpublic var nextNonEmptyKeyframe:Keyframe;\n\tpublic var prevNonEmptyKeyframe:Keyframe;\n\tpublic var displayKey:DisplayObjectKey;\n\n\tpublic function new(){}\n\n\t// Does the time fall inside of the the keyframe frames\n\tpublic function timeInside(time:Float):Bool{\n\t\treturn (this.time <= time) && (this.time + duration) > time;\n\t}\n\n\t// Does the range fit inside of the keyframe frames\n\tpublic function rangeInside(from:Float, to:Float):Bool{\n\t\treturn timeInside(from) && timeInside(to);\n\t}\n\n\t// Does the range intersect with the keyframe frames\n\tpublic function rangeIntersect(from:Float, to:Float):Bool{\n\t\treturn timeInside(from) || timeInside(to);\n\t}\n\n\t// Does the start of the keyframe frames fall inside the range. (Checks for a range that wraps around)\n\tpublic function insideRangeStart(from:Float, to:Float):Bool{\n\t\tif(from == to && to == time) return true;\n\t\treturn from <= to \n\t\t\t? time > from && time <= to\n\t\t\t: time > from || time <= to;\n\t}\n\n\t// Does the end of the keyframe frames fall inside the range. (Checks for a range that wraps around, and assuming backward playback);\n\tpublic function insideRangeEnd(from:Float, to:Float):Bool{\n\t\tif(from == to && to == time + duration) return true;\n\t\treturn from > to\n\t\t\t? to <= time + duration && from > time + duration\n\t\t\t: to <= time + duration || from > time + duration;\n\t}\n\n}\n\n","package flump.library;\n\nclass Label{\n\n\tpublic var name:String;\n\tpublic var keyframe:Keyframe;\n\tpublic var next:Label;\n\tpublic var prev:Label;\n\n\tpublic static var LABEL_ENTER:String = \"labelEnter\";\n\tpublic static var LABEL_EXIT:String = \"labelExit\";\n\tpublic static var LABEL_UPDATE:String = \"labelUpdate\";\n\n\tpublic function new(){}\n\n}","package flump.library;\n\nclass Layer{\n\n\tpublic var keyframes = new Array<Keyframe>();\n\tpublic var duration:Float;\n\tpublic var name:String;\n\tpublic var movie:MovieSymbol;\n\tpublic var numFrames:UInt;\n\n\tpublic var firstKeyframe:Keyframe;\n\tpublic var lastKeyframe:Keyframe;\n\n\n\tpublic function new(name:String){\n\t\tthis.name = name;\n\t}\n\n\n\tpublic function getKeyframeForFrame(index:UInt):Keyframe{\n\t\tfor(keyframe in keyframes) if(keyframe.index == index) return keyframe;\n\t\treturn null;\n\t}\n\n\n\tpublic function getKeyframeForTime(time:Float){\n\t\tvar keyframe = lastKeyframe;\n\t\twhile(keyframe.time > time % movie.duration) keyframe = keyframe.prev;\n\t\treturn keyframe;\n\t}\n\n}","package flump.library;\n\n\nclass Symbol{\n\n\tpublic var name:String;\n\tpublic var origin:Point;\n\t\n\tpublic function new(){}\n\n}","package flump.library;\n\nimport flump.library.FlumpLibrary;\n\n\nclass MovieSymbol extends Symbol{\n\n\tpublic var layers = new Array<Layer>();\n\tpublic var labels = new Map<String, Label>();\n\tpublic var library:FlumpLibrary;\n\n\tpublic var duration:Float;\n\tpublic var totalFrames:UInt;\n\tpublic var firstLabel:Label;\n\tpublic var lastLabel:Label;\n\n\n\tpublic function new(){\n\t\tsuper();\n\t}\n\n\n\tpublic function getLayer(name:String):Layer{\n\t\tfor(layer in layers) if(layer.name == name) return layer;\n\t\treturn null;\n\t}\n\n\n\tpublic function debug(){\n\t\tvar largestLayerChars = Lambda.fold(layers, function(layer, result) return layer.name.length > result ? layer.name.length : result, 0);\n\n\t\tfunction repeat(character, amount){\n\t\t\tvar output = \"\";\n\t\t\twhile(amount > 0){\n\t\t\t\toutput += character;\n\t\t\t\tamount--;\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\n\t\t//◙◉◉◉◙◙○◌◌◌◙▸▸▸◙○◌◌\n\t\tvar output = \"asdfsadf\\n\";\n\n\t\toutput += repeat(\" \", largestLayerChars);\t\n\t\toutput += \"   \";\n\t\tfor(i in 0...totalFrames){\n\t\t\tif(i%5 == 0) output += i;\n\t\t\telse{\n\t\t\t\tif(i % 6 != 0 || i < 10) output += \" \";\n\t\t\t}\n\t\t}\n\t\toutput += \"\\n\";\n\n\t\toutput += repeat(\" \", largestLayerChars);\t\n\t\toutput += \"   \";\n\t\tfor(i in 0...totalFrames){\n\t\t\tif(i%5 == 0) output += \"▽\";\n\t\t\telse output += \" \";\n\t\t}\n\t\toutput += \"\\n\";\n\n\n\t\tfor(i in 0...layers.length){\n\t\t\tvar layer = layers[i];\n\n\t\t\toutput += layer.name + repeat(\" \", largestLayerChars-layer.name.length); \n\t\t\toutput += \" : \";\n\t\t\tfor(keyframe in layer.keyframes){\n\t\t\t\tif(keyframe.symbolId != null){\n\t\t\t\t\toutput += \"◙\";\n\t\t\t\t\tif(keyframe.tweened) output += repeat(\"▸\", keyframe.numFrames-1);\n\t\t\t\t\telse output += repeat(\"◉\", keyframe.numFrames-1) ;\n\t\t\t\t}else{\n\t\t\t\t\toutput += \"○\";\n\t\t\t\t\toutput += repeat(\"◌\", keyframe.numFrames-1);\n\t\t\t\t}\n\t\t\t}\n\t\t\toutput += '\\n';\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}","package flump.library;\n\nclass Point{\n\n\tpublic var x:Float;\n\tpublic var y:Float;\n\n\n\tpublic function new(x:Float, y:Float){\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n}","package flump.library;\n\nclass Rectangle{\n\n\tpublic var x:Float;\n\tpublic var y:Float;\n\tpublic var width:Float;\n\tpublic var height:Float;\n\n\n\tpublic function new(x:Float, y:Float, width:Float, height:Float){\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n}","package flump.library;\n\nclass SpriteSymbol extends Symbol{\n\n\tpublic var texture:String;\n\n\n\tpublic function new(){\n\t\tsuper();\n\t}\n\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n/**\n\tArraySort provides a stable implementation of merge sort through its `sort`\n\tmethod. It should be used instead of `Array.sort` in cases where the order\n\tof equal elements has to be retained on all targets.\n**/\nclass ArraySort {\n\n\t/**\n\t\tSorts Array `a` according to the comparison function `cmp`, where\n\t\t`cmp(x,y)` returns 0 if `x == y`, a positive Int if `x > y` and a\n\t\tnegative Int if `x < y`.\n\n\t\tThis operation modifies Array `a` in place.\n\n\t\tThis operation is stable: The order of equal elements is preserved.\n\n\t\tIf `a` or `cmp` are null, the result is unspecified.\n\t**/\n\tstatic public function sort<T>(a:Array<T>, cmp:T -> T -> Int) {\n\t\trec(a, cmp, 0, a.length);\n\t}\n\n\tstatic function rec<T>(a:Array<T>, cmp, from, to) {\n\t\tvar middle = (from + to) >> 1;\n\t\tif (to - from < 12) {\n\t\t\tif (to <= from) return;\n\t\t\tfor (i in (from + 1)...to) {\n\t\t\t\tvar j = i;\n\t\t\t\twhile (j > from) {\n\t\t\t\t\tif (compare(a, cmp, j, j - 1) < 0)\n\t\t\t\t\t\tswap(a, j - 1, j);\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tj--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\trec(a, cmp, from, middle);\n\t\trec(a, cmp, middle, to);\n\t\tdoMerge(a, cmp, from, middle, to, middle - from, to - middle);\n\t}\n\n\tstatic function doMerge<T>(a:Array<T>, cmp, from, pivot, to, len1, len2) {\n\t\tvar first_cut, second_cut, len11, len22, new_mid;\n\t\tif (len1 == 0 || len2 == 0)\n\t\t\treturn;\n\t\tif (len1 + len2 == 2) {\n\t\t\tif (compare(a, cmp, pivot, from) < 0)\n\t\t\t\tswap(a, pivot, from);\n\t\t\treturn;\n\t\t}\n\t\tif (len1 > len2) {\n\t\t\tlen11 = len1 >> 1;\n\t\t\tfirst_cut = from + len11;\n\t\t\tsecond_cut = lower(a, cmp, pivot, to, first_cut);\n\t\t\tlen22 = second_cut - pivot;\n\t\t} else {\n\t\t\tlen22 = len2 >> 1;\n\t\t\tsecond_cut = pivot + len22;\n\t\t\tfirst_cut = upper(a, cmp, from, pivot, second_cut);\n\t\t\tlen11 = first_cut - from;\n\t\t}\n\t\trotate(a, cmp, first_cut, pivot, second_cut);\n\t\tnew_mid = first_cut + len22;\n\t\tdoMerge(a, cmp, from, first_cut, new_mid, len11, len22);\n\t\tdoMerge(a, cmp, new_mid, second_cut, to, len1 - len11, len2 - len22);\n\t}\n\n\tstatic function rotate<T>(a:Array<T>, cmp, from, mid, to) {\n\t\tvar n;\n\t\tif (from == mid || mid == to) return;\n\t\tn = gcd(to - from, mid - from);\n\t\twhile (n-- != 0) {\n\t\t\tvar val = a[from + n];\n\t\t\tvar shift = mid - from;\n\t\t\tvar p1 = from + n, p2 = from + n + shift;\n\t\t\twhile (p2 != from + n) {\n\t\t\t\ta[p1] = a[p2];\n\t\t\t\tp1 = p2;\n\t\t\t\tif (to - p2 > shift) p2 += shift;\n\t\t\t\telse p2 = from + (shift - (to - p2));\n\t\t\t}\n\t\t\ta[p1] = val;\n\t\t}\n\t}\n\n\tstatic function gcd(m, n) {\n\t\twhile (n != 0) {\n\t\t\tvar t = m % n;\n\t\t\tm = n;\n\t\t\tn = t;\n\t\t}\n\t\treturn m;\n\t}\n\n\tstatic function upper<T>(a:Array<T>, cmp, from, to, val) {\n\t\tvar len = to - from, half, mid;\n\t\twhile (len > 0) {\n\t\t\thalf = len >> 1;\n\t\t\tmid = from + half;\n\t\t\tif (compare(a, cmp, val, mid) < 0)\n\t\t\t\tlen = half;\n\t\t\telse {\n\t\t\t\tfrom = mid + 1;\n\t\t\t\tlen = len - half - 1;\n\t\t\t}\n\t\t}\n\t\treturn from;\n\t}\n\n\tstatic function lower<T>(a:Array<T>, cmp, from, to, val) {\n\t\tvar len = to - from, half, mid;\n\t\twhile (len > 0) {\n\t\t\thalf = len >> 1;\n\t\t\tmid = from + half;\n\t\t\tif (compare(a, cmp, mid, val) < 0) {\n\t\t\t\tfrom = mid + 1;\n\t\t\t\tlen = len - half - 1;\n\t\t\t} else\n\t\t\t\tlen = half;\n\t\t}\n\t\treturn from;\n\t}\n\n\tstatic function swap<T>(a:Array<T>, i, j) {\n\t\tvar tmp = a[i];\n\t\ta[i] = a[j];\n\t\ta[j] = tmp;\n\t}\n\n\tstatic inline function compare<T>(a:Array<T>, cmp, i, j) {\n\t\treturn cmp(a[i], a[j]);\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic inline function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic inline function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic inline function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nprivate class HaxeError extends js.Error {\n\n\tvar val:Dynamic;\n\n\tpublic function new(val:Dynamic) untyped {\n\t\tsuper();\n\t\tthis.val = __define_feature__(\"js.Boot.HaxeError\", val);\n\t\tthis.message = String(val);\n\t\tif (js.Error.captureStackTrace) js.Error.captureStackTrace(this, HaxeError);\n\t}\n}\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"has_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class in the global scope:\n\tstatic function __resolveNativeClass(name:String) untyped {\n\t\treturn untyped Function('return typeof $name != \"undefined\" ? $name : null')();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\t/** The global window object. */\n\tpublic static var window(get, never):js.html.Window;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\t/** Shortcut to Window.document. */\n\tpublic static var document(get, never):js.html.HTMLDocument;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\t/** Shortcut to Window.location. */\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\t/** Shortcut to Window.navigator. */\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/** Shortcut to Window.console. */\n\tpublic static var console(get, never):js.html.Console;\n\tinline static function get_console() return untyped __js__(\"window.console\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tinline static function get_supported() return untyped __typeof__(window) != \"undefined\";\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n\t/**\n\t\tDisplay an alert message box containing the given message. See also `Window.alert()`.\n\t**/\n\tpublic static function alert( v : Dynamic ) {\n\t\t@:privateAccess window.alert(Boot.__string_rec(v,\"\"));\n\t}\n}\n","﻿package motion.actuators;\r\n\r\n\r\nimport motion.easing.IEasing;\r\nimport motion.Actuate;\r\n\r\n@:keepSub\r\n\r\n\r\nclass GenericActuator<T> implements IGenericActuator {\r\n\t\r\n\t\r\n\tprivate var duration:Float;\r\n\tprivate var id:String;\r\n\tprivate var properties:Dynamic;\r\n\tprivate var target:T;\r\n\tprivate var _autoVisible:Bool;\r\n\tprivate var _delay:Float;\r\n\tprivate var _ease:IEasing;\r\n\tprivate var _onComplete:Dynamic;\r\n\tprivate var _onCompleteParams:Array <Dynamic>;\r\n\tprivate var _onRepeat:Dynamic;\r\n\tprivate var _onRepeatParams:Array <Dynamic>;\r\n\tprivate var _onUpdate:Dynamic;\r\n\tprivate var _onUpdateParams:Array <Dynamic>;\r\n\tprivate var _onResume:Dynamic;\r\n\tprivate var _onResumeParams:Array <Dynamic>;\r\n\tprivate var _onPause:Dynamic;\r\n\tprivate var _onPauseParams:Array <Dynamic>;\r\n\tprivate var _reflect:Bool;\r\n\tprivate var _repeat:Int;\r\n\tprivate var _reverse:Bool;\r\n\tprivate var _smartRotation:Bool;\r\n\tprivate var _snapping:Bool;\r\n\tprivate var special:Bool;\r\n\t\r\n\t\r\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\r\n\t\t\r\n\t\t_autoVisible = true;\r\n\t\t_delay = 0;\r\n\t\t_reflect = false;\r\n\t\t_repeat = 0;\r\n\t\t_reverse = false;\r\n\t\t_smartRotation = false;\r\n\t\t_snapping = false;\r\n\t\tspecial = false;\r\n\t\t\r\n\t\tthis.target = target;\r\n\t\tthis.properties = properties;\r\n\t\tthis.duration = duration;\r\n\t\t\r\n\t\t_ease = Actuate.defaultEase;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function apply ():Void {\r\n\t\t\r\n\t\tfor (i in Reflect.fields (properties)) {\r\n\t\t\t\r\n\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\r\n\t\t\tif (#if flash false && #end Reflect.hasField (target, i)) {\r\n\t\t\t\t\r\n\t\t\t\tReflect.setField (target, i, Reflect.field (properties, i));\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tReflect.setProperty (target, i, Reflect.field (properties, i));\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#else\r\n\t\t\t\r\n\t\t\tReflect.setField (target, i, Reflect.field (properties, i));\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Flash performs faster when objects are set to visible = false rather than only alpha = 0. autoVisible toggles automatically based on alpha values\r\n\t * @param\tvalue\t\tWhether autoVisible should be enabled (Default is true)\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function autoVisible (?value:Null<Bool>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tvalue = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_autoVisible = value;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function callMethod (method:Dynamic, params:Array<Dynamic> = null):Dynamic {\r\n\t\t\r\n\t\tif (params == null) {\r\n\t\t\t\r\n\t\t\tparams = [];\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#if neko\r\n\t\t\r\n\t\tvar diff = untyped ($nargs)(method) - params.length;\r\n\t\t\r\n\t\tif (diff > 0) {\r\n\t\t\t\r\n\t\t\tparams = params.copy ();\r\n\t\t\t\r\n\t\t\tfor (i in 0...diff) {\r\n\t\t\t\t\r\n\t\t\t\tparams.push (null);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\treturn Reflect.callMethod (method, method, params);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function change ():Void {\r\n\t\t\r\n\t\tif (_onUpdate != null) {\r\n\t\t\t\r\n\t\t\tcallMethod (_onUpdate, _onUpdateParams);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function complete (sendEvent:Bool = true):Void {\r\n\t\t\r\n\t\tif (sendEvent) {\r\n\t\t\t\r\n\t\t\tchange ();\r\n\t\t\t\r\n\t\t\tif (_onComplete != null) {\r\n\t\t\t\t\r\n\t\t\t\tcallMethod (_onComplete, _onCompleteParams);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tActuate.unload (this);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Increases the delay before a tween is executed\r\n\t * @param\tduration\t\tThe amount of seconds to delay\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function delay (duration:Float):GenericActuator<T> {\r\n\t\t\r\n\t\t_delay = duration;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets the easing which is used when running the tween\r\n\t * @param\teasing\t\tAn easing equation, like Elastic.easeIn or Quad.easeOut\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function ease (easing:IEasing):GenericActuator<T> {\r\n\t\t\r\n\t\t_ease = easing;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function move ():Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Defines a function which will be called when the tween finishes\r\n\t * @param\thandler\t\tThe function you would like to be called\r\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function onComplete (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\r\n\t\t\r\n\t\t_onComplete = handler;\r\n\t\t\r\n\t\tif (parameters == null) {\r\n\t\t\t\r\n\t\t\t_onCompleteParams = [];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t_onCompleteParams = parameters;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (duration == 0) {\r\n\t\t\t\r\n\t\t\tcomplete ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Defines a function which will be called when the tween repeats\r\n\t * @param\thandler\t\tThe function you would like to be called\r\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function onRepeat (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\r\n\t\t\r\n\t\t_onRepeat = handler;\r\n\t\t\r\n\t\tif (parameters == null) {\r\n\t\t\t\r\n\t\t\t_onRepeatParams = [];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t_onRepeatParams = parameters;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Defines a function which will be called when the tween updates\r\n\t * @param\thandler\t\tThe function you would like to be called\r\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function onUpdate (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\r\n\t\t\r\n\t\t_onUpdate = handler;\r\n\t\t\r\n\t\tif (parameters == null) {\r\n\t\t\t\r\n\t\t\t_onUpdateParams = [];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t_onUpdateParams = parameters;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defines a function which will be called when the tween is paused\r\n\t * @param\thandler\t\tThe function you would like to be called\r\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function onPause (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\r\n\t\t\r\n\t\t_onPause = handler;\r\n\t\t\r\n\t\tif (parameters == null) {\r\n\t\t\t\r\n\t\t\t_onPauseParams = [];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t_onPauseParams = parameters;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Defines a function which will be called when the tween resumed after pause\r\n\t * @param\thandler\t\tThe function you would like to be called\r\n\t * @param\tparameters\t\tParameters you would like to pass to the handler function when it is called\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function onResume (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\r\n\t\t\r\n\t\t_onResume = handler;\r\n\t\t\r\n\t\tif (parameters == null) {\r\n\t\t\t\r\n\t\t\t_onResumeParams = [];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t_onResumeParams = parameters;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function pause ():Void {\r\n\t\t\r\n\t\tif (_onPause != null)\r\n\t\t\tcallMethod(_onPause, _onPauseParams);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Automatically changes the reverse value when the tween repeats. Repeat must be enabled for this to have any effect\r\n\t * @param\tvalue\t\tWhether reflect should be enabled (Default is true)\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function reflect (?value:Null<Bool>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tvalue = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_reflect = value;\r\n\t\tspecial = true;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Repeats the tween after it finishes\r\n\t * @param\ttimes\t\tThe number of times you would like the tween to repeat, or -1 if you would like to repeat the tween indefinitely (Default is -1)\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function repeat (?times:Null<Int>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (times == null) {\r\n\t\t\t\r\n\t\t\ttimes = -1;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_repeat = times;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function resume ():Void {\r\n\t\t\r\n\t\tif (_onResume != null)\r\n\t\t\tcallMethod(_onResume, _onResumeParams);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets if the tween should be handled in reverse\r\n\t * @param\tvalue\t\tWhether the tween should be reversed (Default is true)\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function reverse (?value:Null<Bool>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tvalue = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_reverse = value;\r\n\t\tspecial = true;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Enabling smartRotation can prevent undesired results when tweening rotation values\r\n\t * @param\tvalue\t\tWhether smart rotation should be enabled (Default is true)\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function smartRotation (?value:Null<Bool>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tvalue = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_smartRotation = value;\r\n\t\tspecial = true;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Snapping causes tween values to be rounded automatically\r\n\t * @param\tvalue\t\tWhether tween values should be rounded (Default is true)\r\n\t * @return\t\tThe current actuator instance\r\n\t */\r\n\tpublic function snapping (?value:Null<Bool>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tvalue = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_snapping = value;\r\n\t\tspecial = true;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function stop (properties:Dynamic, complete:Bool, sendEvent:Bool):Void {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","﻿package motion.actuators;\r\n\r\n\r\nimport motion.actuators.GenericActuator;\r\n#if (flash || nme || openfl)\r\nimport flash.display.DisplayObject;\r\nimport flash.events.Event;\r\nimport flash.Lib;\r\n#elseif lime\r\nimport lime.app.Application;\r\nimport lime.system.System;\r\n#else\r\n#if neko\r\nimport haxe.Log;\r\nimport haxe.PosInfos;\r\n#end\r\nimport haxe.Timer;\r\n#end\r\n\r\n\r\nclass SimpleActuator<T, U> extends GenericActuator<T> {\r\n\t\r\n\t\r\n\t#if actuate_manual_time\r\n\tpublic static var getTime:Void->Float;\r\n\t#end\r\n\t\r\n\tprivate var timeOffset:Float;\r\n\t\r\n\tprivate static var actuators = new Array<SimpleActuator<Dynamic, Dynamic>> ();\r\n\tprivate static var actuatorsLength = 0;\r\n\tprivate static var addedEvent = false;\r\n\t\r\n\t#if (!flash && !nme && !openfl && !lime)\r\n\tprivate static var timer:Timer;\r\n\t#end\r\n\t\r\n\tprivate var active:Bool;\r\n\tprivate var cacheVisible:Bool;\r\n\tprivate var detailsLength:Int;\r\n\tprivate var initialized:Bool;\r\n\tprivate var paused:Bool;\r\n\tprivate var pauseTime:Float;\r\n\tprivate var propertyDetails:Array <PropertyDetails<U>>;\r\n\tprivate var sendChange:Bool;\r\n\tprivate var setVisible:Bool;\r\n\tprivate var startTime:Float;\r\n\tprivate var toggleVisible:Bool;\r\n\t\r\n\t\r\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\r\n\t\t\r\n\t\tactive = true;\r\n\t\tpropertyDetails = new Array ();\r\n\t\tsendChange = false;\r\n\t\tpaused = false;\r\n\t\tcacheVisible = false;\r\n\t\tinitialized = false;\r\n\t\tsetVisible = false;\r\n\t\ttoggleVisible = false;\r\n\t\t\r\n\t\t#if !actuate_manual_time\r\n\t\t\t#if (flash || nme || openfl)\r\n\t\t\tstartTime = Lib.getTimer () / 1000;\r\n\t\t\t#elseif lime\r\n\t\t\tstartTime = System.getTimer () / 1000;\r\n\t\t\t#else\r\n\t\t\tstartTime = Timer.stamp ();\r\n\t\t\t#end\r\n\t\t#else\r\n\t\tstartTime = getTime();\r\n\t\t#end\r\n\t\t\r\n\t\tsuper (target, duration, properties);\r\n\t\t\r\n\t\tif (!addedEvent) {\r\n\t\t\t\r\n\t\t\taddedEvent = true;\r\n\t\t\t#if !actuate_manual_update\r\n\t\t\t\t#if (flash || nme || openfl)\r\n\t\t\t\tLib.current.stage.addEventListener (Event.ENTER_FRAME, stage_onEnterFrame);\r\n\t\t\t\t#elseif lime\r\n\t\t\t\tApplication.current.onUpdate.add (stage_onEnterFrame);\r\n\t\t\t\t#else\r\n\t\t\t\ttimer = new Timer (Std.int(1000 / 30));\r\n\t\t\t\ttimer.run = stage_onEnterFrame;\r\n\t\t\t\t#end\r\n\t\t\t#end\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic override function autoVisible (?value:Null<Bool>):GenericActuator<T> {\r\n\t\t\r\n\t\tif (value == null) {\r\n\t\t\t\r\n\t\t\tvalue = true;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t_autoVisible = value;\r\n\t\t\r\n\t\tif (!value) {\r\n\t\t\t\r\n\t\t\ttoggleVisible = false;\r\n\t\t\t\r\n\t\t\tif (setVisible) {\r\n\t\t\t\t\r\n\t\t\t\tsetField (target, \"visible\", cacheVisible);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic override function delay (duration:Float):GenericActuator<T> {\r\n\t\t\r\n\t\t_delay = duration;\r\n\t\ttimeOffset = startTime + duration;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function getField<V> (target:V, propertyName:String):Dynamic {\r\n\t\t\r\n\t\t#if (haxe_209 || haxe3)\r\n\t\t\r\n\t\tvar value = null;\r\n\t\t\r\n\t\tif (Reflect.hasField (target, propertyName)) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tvalue = untyped target[propertyName];\r\n\t\t\t#else\r\n\t\t\tvalue = Reflect.field (target, propertyName);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvalue = Reflect.getProperty (target, propertyName);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn value;\r\n\t\t\r\n\t\t#else\r\n\t\t\r\n\t\treturn Reflect.field (target, propertyName);\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function initialize ():Void {\r\n\t\t\r\n\t\tvar details:PropertyDetails<U>;\r\n\t\tvar start:Dynamic;\r\n\t\t\r\n\t\tfor (i in Reflect.fields (properties)) {\r\n\t\t\t\r\n\t\t\tvar isField = true;\r\n\t\t\t\r\n\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\r\n\t\t\tif (Reflect.hasField (target, i) #if flash && !untyped (target).hasOwnProperty (\"set_\" + i) #elseif html5 && !(untyped (target).__properties__ && untyped (target).__properties__[\"set_\" + i]) #end) {\r\n\t\t\t\t\r\n\t\t\t\tstart = Reflect.field (target, i);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tisField = false;\r\n\t\t\t\tstart = Reflect.getProperty (target, i);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#else\r\n\t\t\t\r\n\t\t\tstart = Reflect.field (target, i);\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tif (Std.is (start, Float)) {\r\n\t\t\t\t\r\n\t\t\t\tvar value:Dynamic = getField (properties, i);\r\n\t\t\t\t\r\n\t\t\t\t#if (neko || js)\r\n\t\t\t\tif (start == null) start = 0;\r\n\t\t\t\tif (value == null) value = 0;\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tdetails = new PropertyDetails (cast target, i, start, value - start, isField);\r\n\t\t\t\tpropertyDetails.push (details);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdetailsLength = propertyDetails.length;\r\n\t\tinitialized = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function move ():Void {\r\n\t\t\r\n\t\t#if (flash || nme || openfl)\r\n\t\ttoggleVisible = (Reflect.hasField (properties, \"alpha\") && Std.is (target, DisplayObject));\r\n\t\t#else\r\n\t\ttoggleVisible = (Reflect.hasField (properties, \"alpha\") && Reflect.hasField (properties, \"visible\"));\r\n\t\t#end\r\n\t\t\r\n\t\tif (toggleVisible && properties.alpha != 0 && !getField (target, \"visible\")) {\r\n\t\t\t\r\n\t\t\tsetVisible = true;\r\n\t\t\tcacheVisible = getField (target, \"visible\");\r\n\t\t\tsetField (target, \"visible\", true);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttimeOffset = startTime;\r\n\t\tactuators.push (this);\r\n\t\t++actuatorsLength;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * @inheritDoc\r\n\t */\r\n\tpublic override function onUpdate (handler:Dynamic, parameters:Array <Dynamic> = null):GenericActuator<T> {\r\n\t\t\r\n\t\t_onUpdate = handler;\r\n\t\t\r\n\t\tif (parameters == null) {\r\n\t\t\t\r\n\t\t\t_onUpdateParams = [];\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t_onUpdateParams = parameters;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tsendChange = true;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function pause ():Void {\r\n\t\t\r\n\t\tif (!paused)\r\n\t\t{\r\n\t\t\tpaused = true;\r\n\t\t\r\n\t\t\tsuper.pause();\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t#if !actuate_manual_time\r\n\t\t\t\t#if (flash || nme || openfl)\r\n\t\t\t\tpauseTime = Lib.getTimer ();\r\n\t\t\t\t#elseif lime\r\n\t\t\t\tpauseTime = System.getTimer ();\r\n\t\t\t\t#else\r\n\t\t\t\tpauseTime = Timer.stamp ();\r\n\t\t\t\t#end\r\n\t\t\t#else\r\n\t\t\tpauseTime = getTime();\r\n\t\t\t#end\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function resume ():Void {\r\n\t\t\r\n\t\tif (paused) {\r\n\t\t\t\r\n\t\t\tpaused = false;\r\n\t\t\t\r\n\t\t\t#if !actuate_manual_time\r\n\t\t\t\t#if (flash || nme || openfl)\r\n\t\t\t\ttimeOffset += (Lib.getTimer () - pauseTime) / 1000;\r\n\t\t\t\t#elseif lime\r\n\t\t\t\ttimeOffset += (System.getTimer () - pauseTime) / 1000;\r\n\t\t\t\t#else\r\n\t\t\t\ttimeOffset += (Timer.stamp () - pauseTime);\r\n\t\t\t\t#end\r\n\t\t\t#else\r\n\t\t\ttimeOffset += (getTime() - pauseTime) / 1000;\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t\tsuper.resume();\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t@:generic private inline function setField<V> (target:V, propertyName:String, value:Dynamic):Void {\r\n\t\t\r\n\t\tif (Reflect.hasField (target, propertyName)) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tuntyped target[propertyName] = value;\r\n\t\t\t#else\r\n\t\t\tReflect.setField (target, propertyName, value);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\tReflect.setProperty (target, propertyName, value);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate inline function setProperty (details:PropertyDetails<U>, value:Dynamic):Void {\r\n\t\t\r\n\t\tif (details.isField) {\r\n\t\t\t\r\n\t\t\t#if flash\r\n\t\t\tuntyped details.target[details.propertyName] = value;\r\n\t\t\t#else\r\n\t\t\tReflect.setField (details.target, details.propertyName, value);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\tReflect.setProperty (details.target, details.propertyName, value);\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function stop (properties:Dynamic, complete:Bool, sendEvent:Bool):Void {\r\n\t\t\r\n\t\tif (active) {\r\n\t\t\t\r\n\t\t\tif (properties == null) {\r\n\t\t\t\t\r\n\t\t\t\tactive = false;\r\n\t\t\t\t\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tapply ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.complete (sendEvent);\r\n\t\t\t\treturn;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (i in Reflect.fields (properties)) {\r\n\t\t\t\t\r\n\t\t\t\tif (Reflect.hasField (this.properties, i)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tactive = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (complete) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tapply ();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.complete (sendEvent);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function update (currentTime:Float):Void {\r\n\t\t\r\n\t\tif (!paused) {\r\n\t\t\t\r\n\t\t\tvar details:PropertyDetails<U>;\r\n\t\t\tvar easing:Float;\r\n\t\t\tvar i:Int;\r\n\t\t\t\r\n\t\t\tvar tweenPosition:Float = (currentTime - timeOffset) / duration;\r\n\t\t\t\r\n\t\t\tif (tweenPosition > 1) {\r\n\t\t\t\t\r\n\t\t\t\ttweenPosition = 1;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!initialized) {\r\n\t\t\t\t\r\n\t\t\t\tinitialize ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!special) {\r\n\t\t\t\t\r\n\t\t\t\teasing = _ease.calculate (tweenPosition);\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...detailsLength) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdetails = propertyDetails[i];\r\n\t\t\t\t\tsetProperty (details, details.start + (details.change * easing));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (!_reverse) {\r\n\t\t\t\t\t\r\n\t\t\t\t\teasing = _ease.calculate (tweenPosition);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\teasing = _ease.calculate (1 - tweenPosition);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar endValue:Float;\r\n\t\t\t\t\r\n\t\t\t\tfor (i in 0...detailsLength) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tdetails = propertyDetails[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_smartRotation && (details.propertyName == \"rotation\" || details.propertyName == \"rotationX\" || details.propertyName == \"rotationY\" || details.propertyName == \"rotationZ\")) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar rotation:Float = details.change % 360;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (rotation > 180) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trotation -= 360;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (rotation < -180) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trotation += 360;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tendValue = details.start + rotation * easing;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tendValue = details.start + (details.change * easing);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!_snapping) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsetProperty (details, endValue);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsetProperty (details, Math.round (endValue));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (tweenPosition == 1) {\r\n\t\t\t\t\r\n\t\t\t\tif (_repeat == 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tactive = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (toggleVisible && getField (target, \"alpha\") == 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsetField (target, \"visible\", false);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcomplete (true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_onRepeat != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcallMethod (_onRepeat, _onRepeatParams);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_reflect) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_reverse = !_reverse;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstartTime = currentTime;\r\n\t\t\t\t\ttimeOffset = startTime + _delay;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_repeat > 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_repeat --;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (sendChange) {\r\n\t\t\t\t\r\n\t\t\t\tchange ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Event Handlers\r\n\t\r\n\t\r\n\t#if actuate_manual_update \r\n\tpublic \r\n\t#else \r\n\tprivate \r\n\t#end\r\n\tstatic function stage_onEnterFrame (#if (flash || nme || openfl) event:Event #elseif lime deltaTime:Int #end):Void {\r\n\t\t\r\n\t\t#if !actuate_manual_time\r\n\t\t\t#if (flash || nme || openfl)\r\n\t\t\tvar currentTime:Float = Lib.getTimer () / 1000;\r\n\t\t\t#elseif lime\r\n\t\t\tvar currentTime = System.getTimer () / 1000;\r\n\t\t\t#else\r\n\t\t\tvar currentTime = Timer.stamp ();\r\n\t\t\t#end\r\n\t\t#else\r\n\t\t\tvar currentTime = getTime();\r\n\t\t#end\r\n\t\t\r\n\t\tvar actuator:SimpleActuator<Dynamic, Dynamic>;\r\n\t\t\r\n\t\tvar j:Int = 0;\r\n\t\tvar cleanup = false;\r\n\t\t\r\n\t\tfor (i in 0...actuatorsLength) {\r\n\t\t\t\r\n\t\t\tactuator = actuators[j];\r\n\t\t\t\r\n\t\t\tif (actuator != null && actuator.active) {\r\n\t\t\t\t\r\n\t\t\t\tif (currentTime >= actuator.timeOffset) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tactuator.update (currentTime);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tj++;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tactuators.splice (j, 1);\r\n\t\t\t\t--actuatorsLength;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if (!nme && neko || !nme && cpp)\r\n\r\n// Custom haxe.Timer implementation for C++ and Neko\r\n\r\ntypedef TimerList = Array <Timer>;\r\n\r\n\r\nclass Timer {\r\n\t\r\n\t\r\n\tstatic var sRunningTimers:TimerList = [];\r\n\t\r\n\tvar mTime:Float;\r\n\tvar mFireAt:Float;\r\n\tvar mRunning:Bool;\r\n\t\r\n\t\r\n\tpublic function new (time:Float) {\r\n\t\t\r\n\t\tmTime = time;\r\n\t\tsRunningTimers.push (this);\r\n\t\tmFireAt = GetMS () + mTime;\r\n\t\tmRunning = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function measure<T>( f : Void -> T, ?pos : haxe.PosInfos ) : T {\r\n\t\tvar t0 = stamp();\r\n\t\tvar r = f();\r\n\t\thaxe.Log.trace((stamp() - t0) + \"s\", pos);\r\n\t\treturn r;\r\n\t}\r\n\t\r\n\t\r\n\t// Set this with \"run=...\"\r\n\tdynamic public function run () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n   \r\n\t\r\n\tpublic function stop ():Void {\r\n\t\t\r\n\t\tif (mRunning) {\r\n\t\t\t\r\n\t\t\tmRunning = false;\r\n\t\t\tsRunningTimers.remove (this);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tstatic function GetMS ():Float {\r\n\t\t\r\n\t\treturn stamp () * 1000.0;\r\n\t\t\r\n\t}\r\n\t\r\n\r\n   // From std/haxe/Timer.hx\r\n\tpublic static function delay (f:Void -> Void, time:Int) {\r\n\t\t\r\n\t\tvar t = new Timer (time);\r\n\t\t\r\n\t\tt.run = function () {\r\n\t\t\tt.stop ();\r\n\t\t\tf ();\r\n\t\t};\r\n\t\t\r\n\t\treturn t;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tstatic public function stamp ():Float {\r\n\t\t\r\n\t\treturn Date.now().getTime ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#end\r\n","﻿/**\r\n * @author Joshua Granick\r\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\r\n */\r\n\r\n\r\npackage motion.easing;\r\n\r\n\r\n\r\nclass Expo {\r\n\t\r\n\t\r\n\tstatic public var easeIn (get_easeIn, never):IEasing;\r\n\tstatic public var easeInOut (get_easeInOut, never):IEasing;\r\n\tstatic public var easeOut (get_easeOut, never):IEasing;\r\n\t\r\n\t\r\n\tprivate static function get_easeIn ():IEasing {\r\n\t\t\r\n\t\treturn new ExpoEaseIn ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeInOut ():IEasing {\r\n\t\t\r\n\t\treturn new ExpoEaseInOut ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeOut ():IEasing {\r\n\t\t\r\n\t\treturn new ExpoEaseOut ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ExpoEaseIn implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\treturn k == 0 ? 0 : Math.pow(2, 10 * (k - 1));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\treturn t == 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ExpoEaseInOut implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif (k == 0) { return 0; }\r\n\t\tif (k == 1) { return 1; }\r\n\t\tif ((k /= 1 / 2.0) < 1.0) {\r\n\t\t\treturn 0.5 * Math.pow(2, 10 * (k - 1));\r\n\t\t}\r\n\t\treturn 0.5 * (2 - Math.pow(2, -10 * --k));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\tif (t == 0) {\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tif (t == d) {\r\n\t\t\treturn b + c;\r\n\t\t}\r\n\t\tif ((t /= d / 2.0) < 1.0) {\r\n\t\t\treturn c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n\t\t}\r\n\t\treturn c / 2 * (2 - Math.pow(2, -10 * --t)) + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ExpoEaseOut implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\treturn k == 1 ? 1 : (1 - Math.pow(2, -10 * k));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\treturn t == d ? b + c : c * (1 - Math.pow(2, -10 * t / d)) + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","﻿package motion;\r\n\r\n\r\nimport haxe.ds.ObjectMap;\r\nimport motion.actuators.FilterActuator;\r\nimport motion.actuators.GenericActuator;\r\nimport motion.actuators.IGenericActuator;\r\nimport motion.actuators.MethodActuator;\r\nimport motion.actuators.MotionPathActuator;\r\nimport motion.actuators.SimpleActuator;\r\nimport motion.actuators.TransformActuator;\r\nimport motion.easing.Expo;\r\nimport motion.easing.IEasing;\r\n#if (flash || nme || openfl)\r\nimport flash.display.DisplayObject;\r\n#end\r\n\r\n@:access(motion.actuators)\r\n\r\n\r\nclass Actuate {\r\n\t\r\n\t\r\n\tpublic static var defaultActuator:Class<IGenericActuator> = SimpleActuator;\r\n\tpublic static var defaultEase:IEasing = Expo.easeOut;\r\n\tprivate static var targetLibraries = new ObjectMap<Dynamic, Array<IGenericActuator>> ();\r\n\t#if neko\r\n\tprivate static var methodLibraries = new FunctionMap<Dynamic, Array<IGenericActuator>> ();\r\n\t#end\r\n\t\r\n\t\r\n\t/**\r\n\t * Copies properties from one object to another. Conflicting tweens are stopped automatically\r\n\t * @example\t\t<code>Actuate.apply (MyClip, { alpha: 1 } );</code>\r\n\t * @param\ttarget\t\tThe object to copy to\r\n\t * @param\tproperties\t\tThe object to copy from\r\n\t * @param\tcustomActuator\t\tA custom actuator to use instead of the default (Optional)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like onComplete or onUpdate handlers\r\n\t */\r\n\t/*@:generic*/ public static function apply<T> (target:T, properties:Dynamic, customActuator:Class<GenericActuator<T>> = null):GenericActuator<T> {\r\n\t\t\r\n\t\tstop (target, properties);\r\n\t\t\r\n\t\tif (customActuator == null) {\r\n\t\t\t\r\n\t\t\tcustomActuator = cast defaultActuator;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tvar actuator:GenericActuator<T> = Type.createInstance (customActuator, [ target, 0, properties ]);\r\n\t\tactuator.apply ();\r\n\t\t\r\n\t\treturn actuator;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (flash || nme || openfl)\r\n\t\r\n\t/**\r\n\t * Creates a new effects tween \r\n\t * @param\ttarget\t\tThe object to tween\r\n\t * @param\tduration\t\tThe length of the tween in seconds\r\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\r\n\t * @return\t\tAn EffectsOptions instance, which is used to select the kind of effect you would like to apply to the target\r\n\t */\r\n\tpublic static function effects (target:DisplayObject, duration:Float, overwrite:Bool = true):EffectsOptions {\r\n\t\t\r\n\t\treturn new EffectsOptions (target, duration, overwrite);\r\n\t\t\r\n\t}\r\n\t\r\n\t#end\r\n\t\r\n\t\r\n\tprivate static function getLibrary<T> (target:T, allowCreation:Bool = true):Array<IGenericActuator> {\r\n\t\t\r\n\t\t#if neko\r\n\t\t\r\n\t\tif (Reflect.isFunction (target)) {\r\n\t\t\t\r\n\t\t\tif (!methodLibraries.exists (target) && allowCreation) {\r\n\t\t\t\t\r\n\t\t\t\tmethodLibraries.set (target, new Array<IGenericActuator> ());\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn methodLibraries.get (target);\r\n\t\t\t\r\n\t\t}\r\n\t\t\t\r\n\t\t#end\r\n\t\t\r\n\t\tif (!targetLibraries.exists (target) && allowCreation) {\r\n\t\t\t\r\n\t\t\ttargetLibraries.set (target, new Array<IGenericActuator> ());\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn targetLibraries.get (target);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Checks if Actuate has any active tweens \r\n\t * @return\t\tWhether Actuate is active\r\n\t */\r\n\tpublic static function isActive ():Bool {\r\n\t\t\r\n\t\tvar result = false;\r\n\t\t\r\n\t\tfor (library in targetLibraries) {\r\n\t\t\t\r\n\t\t\tresult = true;\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new MotionPath tween\r\n\t * @param\ttarget\t\tThe object to tween\r\n\t * @param\tduration\t\tThe length of the tween in seconds\r\n\t * @param\tproperties\t\tAn object containing a motion path for each property you wish to tween\r\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\r\n\t */\r\n\t/*@:generic*/ public static function motionPath<T> (target:T, duration:Float, properties:Dynamic, overwrite:Bool = true):GenericActuator<T> {\r\n\t\t\r\n\t\treturn tween (target, duration, properties, overwrite, MotionPathActuator);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Pauses tweens for the specified target objects\r\n\t * @param\t... targets\t\tThe target objects which will have their tweens paused. Passing no value pauses tweens for all objects\r\n\t */\r\n\t///*@:generic*/ public static function pause (... targets:Array):void {\r\n\t/*@:generic*/ public static function pause<T> (target:T):Void {\r\n\t\t\r\n\t\tif (Std.is (target, IGenericActuator)) {\r\n\t\t\t\r\n\t\t\tvar actuator:IGenericActuator = cast target;\r\n\t\t\tactuator.pause ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar library = getLibrary (target, false);\r\n\t\t\t\r\n\t\t\tif (library != null) {\r\n\t\t\t\t\r\n\t\t\t\tfor (actuator in library) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tactuator.pause ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function pauseAll ():Void {\r\n\t\t\r\n\t\t#if neko\r\n\t\t\r\n\t\tfor (library in methodLibraries) {\r\n\t\t\t\r\n\t\t\tfor (actuator in library) {\r\n\t\t\t\t\r\n\t\t\t\tactuator.pause ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\tfor (library in targetLibraries) {\r\n\t\t\t\r\n\t\t\tfor (actuator in library) {\r\n\t\t\t\t\r\n\t\t\t\tactuator.pause ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Resets Actuate by stopping and removing tweens for all objects\r\n\t */\r\n\tpublic static function reset ():Void {\r\n\t\t\r\n\t\t#if neko\r\n\t\t\r\n\t\tfor (library in methodLibraries) {\r\n\t\t\t\r\n\t\t\tvar i = library.length - 1;\r\n\t\t\t\r\n\t\t\twhile (i >= 0) {\r\n\t\t\t\t\r\n\t\t\t\tlibrary[i].stop (null, false, false);\r\n\t\t\t\ti--;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tmethodLibraries = new FunctionMap<Dynamic, Array<IGenericActuator>> ();\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\tfor (library in targetLibraries) {\r\n\t\t\t\r\n\t\t\tvar i = library.length - 1;\r\n\t\t\t\r\n\t\t\twhile (i >= 0) {\r\n\t\t\t\t\r\n\t\t\t\tlibrary[i].stop (null, false, false);\r\n\t\t\t\ti--;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\ttargetLibraries = new ObjectMap<Dynamic, Array<IGenericActuator>> ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Resumes paused tweens for the specified target objects\r\n\t * @param\t... targets\t\tThe target objects which will have their tweens resumed. Passing no value resumes tweens for all objects\r\n\t */\r\n\t/*@:generic*/ public static function resume<T> (target:T):Void {\r\n\t\t\r\n\t\tif (Std.is (target, IGenericActuator)) {\r\n\t\t\t\r\n\t\t\tvar actuator:IGenericActuator = cast target;\r\n\t\t\tactuator.resume ();\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar library = getLibrary (target, false);\r\n\t\t\t\r\n\t\t\tif (library != null) {\r\n\t\t\t\t\r\n\t\t\t\tfor (actuator in library) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tactuator.resume ();\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic static function resumeAll ():Void {\r\n\t\t\r\n\t\t#if neko\r\n\t\t\r\n\t\tfor (library in methodLibraries) {\r\n\t\t\t\r\n\t\t\tfor (actuator in library) {\r\n\t\t\t\t\r\n\t\t\t\tactuator.resume ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\tfor (library in targetLibraries) {\r\n\t\t\t\r\n\t\t\tfor (actuator in library) {\r\n\t\t\t\t\r\n\t\t\t\tactuator.resume ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stops all tweens for an individual object\r\n\t * @param\ttarget\t\tThe target object which will have its tweens stopped, or a generic actuator instance\r\n\t * @param\tproperties\t\tA string, array or object which contains the properties you wish to stop, like \"alpha\", [ \"x\", \"y\" ] or { alpha: null }. Passing no value removes all tweens for the object (Optional)\r\n\t * @param\tcomplete\t\tIf tweens should apply their final target values before stopping. Default is false (Optional) \r\n\t * @param\tsendEvent\tIf a complete() event should be dispatched for the specified target. Default is true (Optional)\r\n\t */\r\n\t/*@:generic*/ public static function stop<T> (target:T, properties:Dynamic = null, complete:Bool = false, sendEvent:Bool = true):Void {\r\n\t\t\r\n\t\tif (target != null) {\r\n\t\t\t\r\n\t\t\tif (Std.is (target, IGenericActuator)) {\r\n\t\t\t\t\r\n\t\t\t\tvar actuator:IGenericActuator = cast target;\r\n\t\t\t\tactuator.stop (null, complete, sendEvent);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tvar library = getLibrary (target, false);\r\n\t\t\t\t\r\n\t\t\t\tif (library != null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (Std.is (properties, String)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar temp = { };\r\n\t\t\t\t\t\tReflect.setField (temp, properties, null);\r\n\t\t\t\t\t\tproperties = temp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (Std.is (properties, Array)) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tvar temp = {};\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (property in cast (properties, Array <Dynamic>)) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tReflect.setField (temp, property, null);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tproperties = temp;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar i = library.length - 1;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile (i >= 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tlibrary[i].stop (properties, complete, sendEvent);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a tween-based timer, which is useful for synchronizing function calls with other animations\r\n\t * @example\t\t<code>Actuate.timer (1).onComplete (trace, [ \"Timer is now complete\" ]);</code>\r\n\t * @param\tduration\t\tThe length of the timer in seconds\r\n\t * @param\tcustomActuator\t\tA custom actuator to use instead of the default (Optional)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like onComplete or to gain a reference to the target timer object\r\n\t */\r\n\tpublic static function timer (duration:Float, customActuator:Class<GenericActuator<TweenTimer>> = null):GenericActuator<TweenTimer> {\r\n\t\t\r\n\t\treturn cast tween (new TweenTimer (0), duration, new TweenTimer (1), false, cast customActuator);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t#if (flash || nme || openfl)\r\n\t\r\n\t/**\r\n\t * Creates a new transform tween\r\n\t * @example\t\t<code>Actuate.transform (MyClip, 1).color (0xFF0000);</code>\r\n\t * @param\ttarget\t\tThe object to tween\r\n\t * @param\tduration\t\tThe length of the tween in seconds\r\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\r\n\t * @return\t\tA TransformOptions instance, which is used to select the kind of transform you would like to apply to the target\r\n\t */\r\n\t/*@:generic*/ public static function transform<T> (target:T, duration:Float = 0, overwrite:Bool = true):TransformOptions<T> {\r\n\t\t\r\n\t\treturn new TransformOptions (target, duration, overwrite);\r\n\t\t\r\n\t}\r\n\t\r\n\t#end\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new tween\r\n\t * @example\t\t<code>Actuate.tween (MyClip, 1, { alpha: 1 } ).onComplete (trace, [ \"MyClip is now visible\" ]);</code>\r\n\t * @param\ttarget\t\tThe object to tween\r\n\t * @param\tduration\t\tThe length of the tween in seconds\r\n\t * @param\tproperties\t\tThe end values to tween the target to\r\n\t * @param\toverwrite\t\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\r\n\t * @param\tcustomActuator\t\tA custom actuator to use instead of the default (Optional)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\r\n\t */ \r\n\t/*@:generic*/ public static function tween<T> (target:T, duration:Float, properties:Dynamic, overwrite:Bool = true, customActuator:Class<GenericActuator<T>> = null):GenericActuator<T> {\r\n\t\t\r\n\t\tif (target != null) {\r\n\t\t\t\r\n\t\t\tif (duration > 0) {\r\n\t\t\t\t\r\n\t\t\t\tif (customActuator == null) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tcustomActuator = cast defaultActuator;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar actuator:GenericActuator<T> = Type.createInstance (customActuator, [ target, duration, properties ]);\r\n\t\t\t\tvar library = getLibrary (actuator.target);\r\n\t\t\t\t\r\n\t\t\t\tif (overwrite) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar i = library.length - 1;\r\n\t\t\t\t\t\r\n\t\t\t\t\twhile (i >= 0) {\r\n\t\t\t\t\t\tlibrary[i].stop (actuator.properties, false, false);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlibrary = getLibrary (actuator.target);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlibrary.push (actuator);\r\n\t\t\t\tactuator.move ();\r\n\t\t\t\t\r\n\t\t\t\treturn actuator;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\treturn apply (target, properties, customActuator);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/*@:generic*/ public static function unload<T> (actuator:GenericActuator<T>):Void {\r\n\t\t\r\n\t\tvar target = actuator.target;\r\n\t\t\r\n\t\t#if neko\r\n\t\t\r\n\t\tif (Reflect.isFunction (target)) {\r\n\t\t\t\r\n\t\t\tif (methodLibraries.exists (target)) {\r\n\t\t\t\t\r\n\t\t\t\tmethodLibraries.get (target).remove (actuator);\r\n\t\t\t\t\r\n\t\t\t\tif (methodLibraries.get (target).length == 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tmethodLibraries.remove (target);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t#end\r\n\t\t\r\n\t\tif (targetLibraries.exists (target)) {\r\n\t\t\t\r\n\t\t\ttargetLibraries.get (target).remove (actuator);\r\n\t\t\t\r\n\t\t\tif (targetLibraries.get (target).length == 0) {\r\n\t\t\t\t\r\n\t\t\t\ttargetLibraries.remove (target);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Creates a new tween that updates a method rather than setting the properties of an object\r\n\t * @example\t\t<code>Actuate.update (trace, 1, [\"Value: \", 0], [\"\", 1]).onComplete (trace, [ \"Finished tracing values between 0 and 1\" ]);</code>\r\n\t * @param\ttarget\t\tThe method to update\t\t\r\n\t * @param\tduration\t\tThe length of the tween in seconds\r\n\t * @param\tstart\t\tThe starting parameters of the method call. You may use both numeric and non-numeric values\r\n\t * @param\tend\t\tThe ending parameters of the method call. You may use both numeric and non-numeric values, but the signature should match the start parameters\r\n\t * @param\toverwrite\t\tSets whether previous tweens for the same target and properties will be overwritten (Default is true)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\r\n\t */\r\n\t/*@:generic*/ public static function update<T> (target:T, duration:Float, start:Array <Dynamic> = null, end:Array <Dynamic> = null, overwrite:Bool = true):GenericActuator<T> {\r\n\t\t\t\t\r\n\t\tvar properties:Dynamic = { start: start, end: end };\r\n\t\t\r\n\t\treturn tween (target, duration, properties, overwrite, MethodActuator);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if !haxe3\r\nimport com.eclecticdesignstudio.motion.actuators.FilterActuator;\r\nimport com.eclecticdesignstudio.motion.actuators.GenericActuator;\r\nimport com.eclecticdesignstudio.motion.actuators.TransformActuator;\r\nimport com.eclecticdesignstudio.motion.Actuate;\r\nimport flash.display.DisplayObject;\r\nimport flash.filters.BitmapFilter;\r\n//import flash.filters.ColorMatrixFilter;\r\nimport flash.geom.Matrix;\r\n#end\r\n\r\n\r\n#if (flash || nme || openfl)\r\n\r\nprivate class EffectsOptions {\r\n\r\n\r\n\tprivate var duration:Float;\r\n\tprivate var overwrite:Bool;\r\n\tprivate var target:DisplayObject;\r\n\r\n\r\n\tpublic function new (target:DisplayObject, duration:Float, overwrite:Bool) {\r\n\t\t\r\n\t\tthis.target = target;\r\n\t\tthis.duration = duration;\r\n\t\tthis.overwrite = overwrite;\r\n\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new BitmapFilter tween\r\n\t * @param\treference\t\tA reference to the target's filter, which can be an array index or the class of the filter\r\n\t * @param\tproperties\t\tThe end properties to use for the tween\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\r\n\t */\r\n\tpublic function filter (reference:Dynamic, properties:Dynamic):IGenericActuator {\r\n\t\t\r\n\t\tproperties.filter = reference;\r\n\t\t\r\n\t\treturn Actuate.tween (target, duration, properties, overwrite, FilterActuator);\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nprivate class TransformOptions<T> {\r\n\r\n\r\n\tprivate var duration:Float;\r\n\tprivate var overwrite:Bool;\r\n\tprivate var target:T;\r\n\r\n\r\n\tpublic function new (target:T, duration:Float, overwrite:Bool) {\r\n\t\t\r\n\t\tthis.target = target;\r\n\t\tthis.duration = duration;\r\n\t\tthis.overwrite = overwrite;\r\n\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new ColorTransform tween\r\n\t * @param\tcolor\t\tThe color value\r\n\t * @param\tstrength\t\tThe percentage amount of tint to apply (Default is 1)\r\n\t * @param\talpha\t\tThe end alpha of the target. If you wish to tween alpha and tint simultaneously, you must do them both as part of the ColorTransform. A value of null will make no change to the alpha of the object (Default is null)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\r\n\t */\r\n\tpublic function color (value:Int = 0x000000, strength:Float = 1, alpha:Null <Float> = null):IGenericActuator {\r\n\t\t\r\n\t\tvar properties:Dynamic = { colorValue: value, colorStrength: strength };\r\n\t\t\r\n\t\tif (alpha != null) {\r\n\t\t\t\r\n\t\t\tproperties.colorAlpha = alpha;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn Actuate.tween (target, duration, properties, overwrite, TransformActuator);\r\n\t\t\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Creates a new SoundTransform tween\r\n\t * @param\tvolume\t\tThe end volume for the target, or null if you would like to ignore this property (Default is null)\r\n\t * @param\tpan\t\tThe end pan for the target, or null if you would like to ignore this property (Default is null)\r\n\t * @return\t\tThe current actuator instance, which can be used to apply properties like ease, delay, onComplete or onUpdate\r\n\t */\r\n\tpublic function sound (volume:Null <Float> = null, pan:Null <Float> = null):IGenericActuator {\r\n\t\t\r\n\t\tvar properties:Dynamic = {};\r\n\t\t\r\n\t\tif (volume != null) {\r\n\t\t\t\r\n\t\t\tproperties.soundVolume = volume;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (pan != null) {\r\n\t\t\t\r\n\t\t\tproperties.soundPan = pan;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn Actuate.tween (target, duration, properties, overwrite, TransformActuator);\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\n\r\n#end\r\n\r\n\r\nprivate class TweenTimer {\r\n\r\n\r\n\tpublic var progress:Float;\r\n\r\n\r\n\tpublic function new (progress:Float):Void {\r\n\t\t\r\n\t\tthis.progress = progress;\r\n\t\t\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n#if neko\r\nprivate class KVPairMap<K, V>  {\r\n\tvar keyList:Array<K>;\r\n\tvar valList:Array<V>;\r\n\tpublic function new() {\r\n\t\tthis.keyList = [];\r\n\t\tthis.valList = [];\r\n\t}\r\n\tfunction equals(k1:K, k2:K):Bool \r\n\t\treturn throw 'base';\r\n\t\r\n\tfunction indexOf(k:K):Int {\r\n\t\tfor (i in 0...keyList.length)\r\n\t\t\tif (equals(k, keyList[i])) return i;\r\n\t\treturn -1;\r\n\t}\r\n\tpublic function get(k:K):Null<V> \r\n\t\treturn valList[indexOf(k)];\r\n\t\r\n\tpublic function set(k:K, v:V):V {\r\n\t\tvar i = indexOf(k);\r\n\t\tif (i == -1) {\r\n\t\t\tkeyList.push(k);\r\n\t\t\tvalList.push(v);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tkeyList[i] = k;\r\n\t\t\tvalList[i] = v;\r\n\t\t}\r\n\t\treturn v;\r\n\t}\r\n\tpublic function exists(k:K):Bool \r\n\t\treturn indexOf(k) != -1;\r\n\t\r\n\tpublic function remove(k:K):Bool {\r\n\t\tvar i = indexOf(k);\r\n\t\treturn\r\n\t\t\tif (i == -1) false;\r\n\t\t\telse {\r\n\t\t\t\tkeyList.splice(i, 1);\r\n\t\t\t\tvalList.splice(i, 1);\r\n\t\t\t\ttrue;\r\n\t\t\t}\r\n\t}\r\n\tpublic inline function keys():Iterator<K> \r\n\t\treturn keyList.iterator();\r\n\t\r\n\tpublic inline function iterator():Iterator<V> \r\n\t\treturn valList.iterator();\r\n\t\r\n\tpublic function toString() {\r\n\t\treturn [for (i in 0...keyList.length) Std.string(keyList[i]) => valList[i]].toString();\r\n\t}\r\n\t\r\n}\r\n\r\n       private class FunctionMap < K, V > extends KVPairMap < K, V > {\r\n                override function equals(k1:K, k2:K):Bool {\r\n                        return Reflect.compareMethods(k1, k2);\r\n                }\r\n        }\r\n\r\n#end","﻿package motion;\r\n\t\r\n\t\r\nclass MotionPath {\r\n\t\r\n\t\r\n\tpublic var rotation (get, null):RotationPath;\r\n\tpublic var x (get, null):IComponentPath;\r\n\tpublic var y (get, null):IComponentPath;\r\n\t\r\n\tprivate var _rotation:RotationPath;\r\n\tprivate var _x:ComponentPath;\r\n\tprivate var _y:ComponentPath;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t_x = new ComponentPath ();\r\n\t\t_y = new ComponentPath ();\r\n\t\t\r\n\t\t_rotation = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Adds a bezier curve to the current motion path\r\n\t * @param\tx\t\tThe x position of the end point for the curve\r\n\t * @param\ty\t\tThe y position of the end point for the curve\r\n\t * @param\tcontrolX\t\tThe x position of the control point for the curve, which affects the angle and midpoint\r\n\t * @param\tcontrolX\t\tThe x position of the control point for the curve, which affects the angle and midpoint\r\n\t * @param\tstrength\t\tThe degree of emphasis that should be placed on this segment. If a motion path contains multiple segments with the same strength, they all receive equal emphasis (Default is 1)\r\n\t * @return\t\tThe current motion path instance\r\n\t */\r\n\tpublic function bezier (x:Float, y:Float, controlX:Float, controlY:Float, strength:Float = 1):MotionPath {\r\n\t\t\r\n\t\t_x.addPath (new BezierPath (x, controlX, strength));\r\n\t\t_y.addPath (new BezierPath (y, controlY, strength));\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Adds a line to the current motion path\r\n\t * @param\tx\t\tThe x position of the end point for the line\r\n\t * @param\tx\t\tThe y position of the end point for the line\r\n\t * @param\tstrength\t\tThe degree of emphasis that should be placed on this segment . If a motion path contains multiple segments with the same strength, they all receive equal emphasis (Default is 1)\r\n\t * @return\t\tThe current motion path instance\r\n\t */\r\n\tpublic function line (x:Float, y:Float, strength:Float = 1):MotionPath {\r\n\t\t\r\n\t\t_x.addPath (new LinearPath (x, strength));\r\n\t\t_y.addPath (new LinearPath (y, strength));\r\n\t\t\r\n\t\treturn this;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_rotation ():RotationPath {\r\n\t\t\r\n\t\tif (_rotation == null) {\r\n\t\t\t\r\n\t\t\t_rotation = new RotationPath (_x, _y);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn _rotation;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_x ():IComponentPath {\r\n\t\t\r\n\t\treturn _x;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate function get_y ():IComponentPath {\r\n\t\t\r\n\t\treturn _y;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ComponentPath implements IComponentPath {\r\n\t\r\n\t\r\n\tpublic var start:Float;\r\n\tpublic var end (get, null):Float;\r\n\t\r\n\tprivate var paths:Array <BezierPath>;\r\n\tprivate var totalStrength:Float;\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\tpaths = new Array <BezierPath> ();\r\n\t\tstart = 0;\r\n\t\ttotalStrength = 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function addPath (path:BezierPath):Void {\r\n\t\t\r\n\t\tpaths.push (path);\r\n\t\ttotalStrength += path.strength;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif (paths.length == 1) {\r\n\t\t\t\r\n\t\t\treturn paths[0].calculate (start, k);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\tvar ratio = k * totalStrength;\r\n\t\t\tvar lastEnd = start;\r\n\t\t\t\r\n\t\t\tfor (path in paths) {\r\n\t\t\t\t\r\n\t\t\t\tif (ratio > path.strength) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tratio -= path.strength;\r\n\t\t\t\t\tlastEnd = path.end;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn path.calculate (lastEnd, ratio / path.strength);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tprivate function get_end ():Float {\r\n\t\t\r\n\t\tif (paths.length > 0) {\r\n\t\t\t\r\n\t\t\tvar path = paths[paths.length - 1];\r\n\t\t\treturn path.end;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn start;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\ninterface IComponentPath {\r\n\t\r\n\t\r\n\tvar end (get, null):Float;\r\n\tvar start:Float;\r\n\t\r\n\tfunction calculate (k:Float):Float;\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass BezierPath {\r\n\t\r\n\t\r\n\tpublic var control:Float;\r\n\tpublic var end:Float;\r\n\tpublic var strength:Float;\r\n\t\r\n\t\r\n\tpublic function new (end:Float, control:Float, strength:Float) {\r\n\t\t\r\n\t\tthis.end = end;\r\n\t\tthis.control = control;\r\n\t\tthis.strength = strength;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (start:Float, k:Float):Float {\r\n\t\t\r\n\t\treturn (1 - k) * (1 - k) * start + 2 * (1 - k) * k * control + k * k * end;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass LinearPath extends BezierPath {\r\n\t\r\n\t\r\n\tpublic function new (end:Float, strength:Float) {\r\n\t\t\r\n\t\tsuper (end, 0, strength);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic override function calculate (start:Float, k:Float):Float {\r\n\t\t\r\n\t\treturn start + k * (end - start);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass RotationPath implements IComponentPath {\r\n\t\r\n\t\r\n\tpublic var end (get, null):Float;\r\n\tpublic var offset:Float;\r\n\tpublic var start:Float;\r\n\t\r\n\tprivate var step = 0.01;\r\n\tprivate var _x:ComponentPath;\r\n\tprivate var _y:ComponentPath;\r\n\t\r\n\t\r\n\tpublic function new (x:ComponentPath, y:ComponentPath) {\r\n\t\t\r\n\t\t_x = x;\r\n\t\t_y = y;\r\n\t\t\r\n\t\toffset = 0;\r\n\t\t\r\n\t\tstart = calculate (0.0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tvar dX = _x.calculate (k) - _x.calculate (k + step);\r\n\t\tvar dY = _y.calculate (k) - _y.calculate (k + step);\r\n\t\t\r\n\t\tvar angle = Math.atan2(dY, dX) * (180 / Math.PI);\r\n\t\tangle = (angle + offset) % 360;\r\n\t\t\r\n\t\treturn angle;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Get & Set Methods\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tpublic function get_end ():Float {\r\n\t\t\r\n\t\treturn calculate (1.0);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","﻿package motion.actuators;\r\n\r\n\r\nclass MethodActuator<T> extends SimpleActuator<T, T> {\r\n\t\r\n\t\r\n\tprivate var currentParameters:Array <Dynamic>;\r\n\tprivate var tweenProperties:Dynamic;\r\n\t\r\n\t\r\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\r\n\t\t\r\n\t\tcurrentParameters = new Array <Dynamic> ();\r\n\t\ttweenProperties = { };\r\n\t\t\r\n\t\tsuper (target, duration, properties);\r\n\t\t\r\n\t\tif (!Reflect.hasField (properties, \"start\")) {\r\n\t\t\t\r\n\t\t\tthis.properties.start = new Array <Dynamic> ();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tif (!Reflect.hasField (properties, \"end\")) {\r\n\t\t\t\r\n\t\t\tthis.properties.end = this.properties.start;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tfor (i in 0...this.properties.start.length) {\r\n\t\t\t\r\n\t\t\tcurrentParameters.push (this.properties.start[i]);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function apply ():Void {\r\n\t\t\r\n\t\tcallMethod (target, properties.end);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function complete (sendEvent:Bool = true):Void {\r\n\t\t\r\n\t\tfor (i in 0...properties.start.length) {\r\n\t\t\t\r\n\t\t\tcurrentParameters[i] = Reflect.field (tweenProperties, \"param\" + i);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tcallMethod (target, currentParameters);\r\n\t\t\r\n\t\tsuper.complete (sendEvent);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function initialize ():Void {\r\n\t\t\r\n\t\tvar details:PropertyDetails<T>;\r\n\t\tvar propertyName:String;\r\n\t\tvar start:Dynamic;\r\n\t\t\r\n\t\tfor (i in 0...properties.start.length) {\r\n\t\t\t\r\n\t\t\tpropertyName = \"param\" + i;\r\n\t\t\tstart = properties.start[i];\r\n\t\t\t\r\n\t\t\tReflect.setField (tweenProperties, propertyName, start);\r\n\t\t\t\r\n\t\t\tif (Std.is (start, Float) || Std.is (start, Int)) {\r\n\t\t\t\t\r\n\t\t\t\tdetails = new PropertyDetails (tweenProperties, propertyName, start, properties.end[i] - start);\r\n\t\t\t\tpropertyDetails.push (details);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdetailsLength = propertyDetails.length;\r\n\t\tinitialized = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function update (currentTime:Float):Void {\r\n\t\t\r\n\t\tsuper.update (currentTime);\r\n\t\t\r\n\t\tif (active && !paused) {\r\n\t\t\t\r\n\t\t\tfor (i in 0...properties.start.length) {\r\n\t\t\t\t\r\n\t\t\t\tcurrentParameters[i] = Reflect.field (tweenProperties, \"param\" + i);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tcallMethod (target, currentParameters);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","﻿package motion.actuators;\r\n\r\n\r\nimport motion.MotionPath;\r\n\r\n\r\nclass MotionPathActuator<T> extends SimpleActuator<T, T> {\r\n\t\r\n\t\r\n\tpublic function new (target:T, duration:Float, properties:Dynamic) {\r\n\t\t\r\n\t\tsuper (target, duration, properties);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function apply ():Void {\r\n\t\t\r\n\t\tfor (propertyName in Reflect.fields (properties)) {\r\n\t\t\t\r\n\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\r\n\t\t\tif (#if flash false && #end Reflect.hasField (target, propertyName)) {\r\n\t\t\t\t\r\n\t\t\t\tReflect.setField (target, propertyName, cast (Reflect.field (properties, propertyName), IComponentPath).end);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tReflect.setProperty (target, propertyName, cast (Reflect.field (properties, propertyName), IComponentPath).end);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t#else\r\n\t\t\t\r\n\t\t\tReflect.setField (target, propertyName, cast (Reflect.field (properties, propertyName), IComponentPath).end);\r\n\t\t\t\r\n\t\t\t#end\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function initialize ():Void {\r\n\t\t\r\n\t\tvar details:PropertyPathDetails<T>;\r\n\t\tvar path:IComponentPath;\r\n\t\t\r\n\t\tfor (propertyName in Reflect.fields (properties)) {\r\n\t\t\t\r\n\t\t\tpath = cast (Reflect.field (properties, propertyName), IComponentPath);\r\n\t\t\t\r\n\t\t\tif (path != null) {\r\n\t\t\t\t\r\n\t\t\t\tvar isField = true;\r\n\t\t\t\t\r\n\t\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\t\r\n\t\t\t\tif (#if flash false && #end Reflect.hasField (target, propertyName)) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tpath.start = Reflect.field (target, propertyName);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tisField = false;\r\n\t\t\t\t\tpath.start = Reflect.getProperty (target, propertyName);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t#else\r\n\t\t\t\t\r\n\t\t\t\tpath.start = Reflect.field (target, propertyName);\r\n\t\t\t\t\r\n\t\t\t\t#end\r\n\t\t\t\t\r\n\t\t\t\tdetails = new PropertyPathDetails (target, propertyName, path, isField);\r\n\t\t\t\tpropertyDetails.push (details);\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tdetailsLength = propertyDetails.length;\r\n\t\tinitialized = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate override function update (currentTime:Float):Void {\r\n\t\t\r\n\t\tif (!paused) {\r\n\t\t\t\r\n\t\t\tvar details:PropertyPathDetails<T>;\r\n\t\t\tvar easing:Float;\r\n\t\t\t\r\n\t\t\tvar tweenPosition = (currentTime - timeOffset) / duration;\r\n\t\t\t\r\n\t\t\tif (tweenPosition > 1) {\r\n\t\t\t\t\r\n\t\t\t\ttweenPosition = 1;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!initialized) {\r\n\t\t\t\t\r\n\t\t\t\tinitialize ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (!special) {\r\n\t\t\t\t\r\n\t\t\t\teasing = _ease.calculate (tweenPosition);\r\n\t\t\t\t\r\n\t\t\t\tfor (details in propertyDetails) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (details.isField) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tReflect.setField (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\t\t\tReflect.setProperty (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\r\n\t\t\t\t\t\t#end\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tif (!_reverse) {\r\n\t\t\t\t\t\r\n\t\t\t\t\teasing = _ease.calculate (tweenPosition);\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\teasing = _ease.calculate (1 - tweenPosition);\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar endValue:Float;\r\n\t\t\t\t\r\n\t\t\t\tfor (details in propertyDetails) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!_snapping) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (details.isField) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tReflect.setField (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\t\t\t\tReflect.setProperty (details.target, details.propertyName, cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing));\r\n\t\t\t\t\t\t\t#end\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (details.isField) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tReflect.setField (details.target, details.propertyName, Math.round (cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing)));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t#if (haxe_209 || haxe3)\r\n\t\t\t\t\t\t\tReflect.setProperty (details.target, details.propertyName, Math.round (cast (details, PropertyPathDetails<Dynamic>).path.calculate (easing)));\r\n\t\t\t\t\t\t\t#end\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (tweenPosition == 1) {\r\n\t\t\t\t\r\n\t\t\t\tif (_repeat == 0) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tactive = false;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (toggleVisible && getField (target, \"alpha\") == 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsetField (target, \"visible\", false);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tcomplete (true);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_onRepeat != null) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tcallMethod (_onRepeat, _onRepeatParams);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_reflect) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_reverse = !_reverse;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tstartTime = currentTime;\r\n\t\t\t\t\ttimeOffset = startTime + _delay;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (_repeat > 0) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_repeat --;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (sendChange) {\r\n\t\t\t\t\r\n\t\t\t\tchange ();\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n#if !haxe3\r\nimport com.eclecticdesignstudio.motion.MotionPath;\r\n#end\r\n\r\n\r\nclass PropertyPathDetails<T> extends PropertyDetails<T> {\r\n\t\r\n\t\r\n\tpublic var path:IComponentPath;\r\n\t\r\n\t\r\n\tpublic function new (target:T, propertyName:String, path:IComponentPath, isField:Bool = true) {\r\n\t\t\r\n\t\tsuper (target, propertyName, 0, 0, isField);\r\n\t\t\r\n\t\tthis.path = path;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","﻿package motion.actuators;\r\n\r\n\r\nclass PropertyDetails<T> {\r\n\t\r\n\t\r\n\tpublic var change:Float;\r\n\tpublic var isField:Bool;\r\n\tpublic var propertyName:String;\r\n\tpublic var start:Float;\r\n\tpublic var target:T;\r\n\t\r\n\t\r\n\tpublic function new (target:T, propertyName:String, start:Float, change:Float, isField:Bool = true):Void {\r\n\t\t\r\n\t\tthis.target = target;\r\n\t\tthis.propertyName = propertyName;\r\n\t\tthis.start = start;\r\n\t\tthis.change = change;\r\n\t\tthis.isField = isField;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","\r\n/**\r\n * @author Erik Escoffier\r\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\r\n */\r\n\r\n\r\npackage motion.easing;\r\n\r\n\t\r\nclass Bounce {\r\n\r\n\tstatic public var easeIn (get_easeIn, never):IEasing;\r\n\tstatic public var easeInOut (get_easeInOut, never):IEasing;\r\n\tstatic public var easeOut (get_easeOut, never):IEasing;\r\n\t\r\n\t\r\n\tprivate static function get_easeIn ():IEasing {\r\n\t\t\r\n\t\treturn new BounceEaseIn ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeInOut ():IEasing {\r\n\t\t\r\n\t\treturn new BounceEaseInOut ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeOut ():IEasing {\r\n\t\t\r\n\t\treturn new BounceEaseOut ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass BounceEaseIn implements IEasing {\r\n\t\r\n\t\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\treturn BounceEaseIn._ease(k,0,1,1);\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn BounceEaseIn._ease(t,b,c,d);\r\n\t}\r\n\r\n\tpublic static inline function _ease  (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\treturn c - BounceEaseOut._ease (d-t, 0, c, d) + b;\r\n\t}\r\n}\r\n\t\r\n\r\n\r\nclass BounceEaseInOut implements IEasing {\r\n\t\r\n\t\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif (k < .5) {\r\n\t\t\treturn BounceEaseIn._ease(k*2, 0, 1, 1) * .5;\r\n\t\t} else {\r\n\t\t\treturn BounceEaseOut._ease(k*2-1, 0, 1, 1) * .5 + 1*.5; \r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\r\n\t\tif (t < d/2) {\r\n\t\t\treturn BounceEaseIn._ease(t*2, 0, c, d) * .5 + b;\r\n\t\t} else {\r\n\t\t\treturn BounceEaseOut._ease(t*2-d, 0, c, d) * .5 + c*.5 + b; \r\n\t\t}\r\n\t\t\r\n\t}\r\n}\r\n\t\r\n\r\n\r\n\r\n\r\nclass BounceEaseOut implements IEasing {\r\n\t\r\n\t\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\treturn BounceEaseOut._ease(k,0,1,1);\r\n\t\t\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\treturn BounceEaseOut._ease(t,b,c,d);\r\n\t\t\r\n\t}\r\n\r\n\tpublic static inline function _ease(t:Float, b:Float, c:Float, d:Float):Float \t{\r\n\t\tif ((t/=d) < (1/2.75)) {\r\n\t\t\treturn c*(7.5625*t*t) + b;\r\n\t\t} else if (t < (2/2.75)) {\r\n\t\t\treturn c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;\r\n\t\t} else if (t < (2.5/2.75)) {\r\n\t\t\treturn c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;\r\n\t\t} else {\r\n\t\t\treturn c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\t\r\n","/**\r\n * @author Joshua Granick\r\n * @author Philippe / http://philippe.elsass.me\r\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\r\n */\r\n\r\n\r\npackage motion.easing;\r\n\r\n\r\n\r\nclass Elastic {\r\n\t\r\n\t\r\n\tstatic public var easeIn (get_easeIn, never):IEasing;\r\n\tstatic public var easeInOut (get_easeInOut, never):IEasing;\r\n\tstatic public var easeOut (get_easeOut, never):IEasing;\r\n\t\r\n\t\r\n\tprivate static function get_easeIn ():IEasing {\r\n\t\t\r\n\t\treturn new ElasticEaseIn (0.1, 0.4);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeInOut ():IEasing {\r\n\t\t\r\n\t\treturn new ElasticEaseInOut (0.1, 0.4);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeOut ():IEasing {\r\n\t\t\r\n\t\treturn new ElasticEaseOut (0.1, 0.4);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ElasticEaseIn implements IEasing {\r\n\t\r\n\t\r\n\tpublic var a:Float;\r\n\tpublic var p:Float;\r\n\t\r\n\t\r\n\tpublic function new (a:Float, p:Float) {\r\n\t\t\r\n\t\tthis.a = a;\r\n\t\tthis.p = p;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif (k == 0) return 0; if (k == 1) return 1;\r\n\t\tvar s:Float;\r\n\t\tif (a < 1) { a = 1; s = p / 4; }\r\n\t\telse s = p / (2 * Math.PI) * Math.asin (1 / a);\r\n\t\treturn -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin( (k - s) * (2 * Math.PI) / p ));\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\tif (t == 0) {\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tif ((t /= d) == 1) {\r\n\t\t\treturn b + c;\r\n\t\t}\r\n\t\tvar s:Float;\r\n\t\tif (a < Math.abs(c)) {\r\n\t\t\ta = c;\r\n\t\t\ts = p / 4;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\r\n\t\t}\r\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ElasticEaseInOut implements IEasing {\r\n\t\r\n\t\r\n\tpublic var a:Float;\r\n\tpublic var p:Float;\r\n\t\r\n\t\r\n\tpublic function new (a:Float, p:Float) {\r\n\t\t\r\n\t\tthis.a = a;\r\n\t\tthis.p = p;\r\n\t\t\r\n\t}\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif (k == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif ((k /= 1 / 2) == 2) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\t\r\n\t\tvar p:Float = (0.3 * 1.5);\r\n\t\tvar a:Float = 1;\r\n\t\tvar s:Float = p / 4;\r\n\t\t\r\n\t\tif (k < 1) {\r\n\t\t\treturn -0.5 * (Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n\t\t}\r\n\t\treturn Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\tif (t == 0) {\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tif ((t /= d / 2) == 2) {\r\n\t\t\treturn b + c;\r\n\t\t}\r\n\t\tvar s:Float;\r\n\t\tif (a < Math.abs(c)) {\r\n\t\t\ta = c;\r\n\t\t\ts = p / 4;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\r\n\t\t}\r\n\t\tif (t < 1) {\r\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n\t\t}\r\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass ElasticEaseOut implements IEasing {\r\n\t\r\n\t\r\n\tpublic var a:Float;\r\n\tpublic var p:Float;\r\n\t\r\n\t\r\n\tpublic function new (a:Float, p:Float) {\r\n\t\t\r\n\t\tthis.a = a;\r\n\t\tthis.p = p;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif (k == 0) return 0; if (k == 1) return 1;\r\n\t\tvar s:Float;\r\n\t\tif (a < 1) { a = 1; s = p / 4; }\r\n\t\telse s = p / (2 * Math.PI) * Math.asin (1 / a);\r\n\t\treturn (a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p ) + 1);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\tif (t == 0) {\r\n\t\t\treturn b;\r\n\t\t}\r\n\t\tif ((t /= d) == 1) {\r\n\t\t\treturn b + c;\r\n\t\t}\r\n\t\tvar s:Float;\r\n\t\tif (a < Math.abs(c)) {\r\n\t\t\ta = c;\r\n\t\t\ts = p / 4;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ts = p / (2 * Math.PI) * Math.asin(c / a);\r\n\t\t}\r\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","/**\r\n * @author Joshua Granick\r\n * @author Philippe / http://philippe.elsass.me\r\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\r\n */\r\n\r\n\r\npackage motion.easing;\r\n\t\r\n\t\r\nclass Linear {\r\n\t\r\n\t\r\n\tstatic public var easeNone (get_easeNone, never):IEasing;\r\n\t\r\n\t\r\n\tprivate static function get_easeNone ():IEasing {\r\n\t\t\r\n\t\treturn new LinearEaseNone ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass LinearEaseNone implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\treturn k;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\treturn c * t / d + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","/**\r\n * @author Joshua Granick\r\n * @author Robert Penner / http://www.robertpenner.com/easing_terms_of_use.html\r\n */\r\n\r\n\r\npackage motion.easing;\r\n\r\n\r\n\r\nclass Quad {\r\n\t\r\n\t\r\n\tstatic public var easeIn (get_easeIn, never):IEasing;\r\n\tstatic public var easeInOut (get_easeInOut, never):IEasing;\r\n\tstatic public var easeOut (get_easeOut, never):IEasing;\r\n\t\r\n\t\r\n\tprivate static function get_easeIn ():IEasing {\r\n\t\t\r\n\t\treturn new QuadEaseIn ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeInOut ():IEasing {\r\n\t\t\r\n\t\treturn new QuadEaseInOut ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tprivate static function get_easeOut ():IEasing {\r\n\t\t\r\n\t\treturn new QuadEaseOut ();\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass QuadEaseIn implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\treturn k * k;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\treturn c * (t /= d) * t + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass QuadEaseInOut implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\tif ((k *= 2) < 1) {\r\n\t\t\treturn 1 / 2 * k * k;\r\n\t\t}\r\n\t\treturn -1 / 2 * ((k - 1) * (k - 3) - 1);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\tif ((t /= d / 2) < 1) {\r\n\t\t\treturn c / 2 * t * t + b;\r\n\t\t}\r\n\t\treturn -c / 2 * ((t - 1) * (t - 3) - 1) + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\nclass QuadEaseOut implements IEasing {\r\n\t\r\n\t\r\n\tpublic function new () {\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function calculate (k:Float):Float {\r\n\t\t\r\n\t\treturn -k * (k - 2);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\tpublic function ease (t:Float, b:Float, c:Float, d:Float):Float {\r\n\t\t\r\n\t\treturn -c * (t /= d) * (t - 2) + b;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}","/*                  __  __    _____           __\r\n *     ____  ____ _/ /_/ /_  / __(_)___  ____/ /__  _____\r\n *    / __ \\/ __ `/ __/ __ \\/ /_/ / __ \\/ __  / _ \\/ ___/\r\n *   / /_/ / /_/ / /_/ / / / __/ / / / / /_/ /  __/ /\r\n *  / .___/\\__,_/\\__/_/ /_/_/ /_/_/ /_/\\__,_/\\___/_/\r\n * /_/\r\n *\r\n * Copyright (c) 2013, Robert Fell\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\npackage pathfinder;\r\n\r\n/**\r\n * @author Statm\thttps://github.com/statm/haxe-astar\r\n * @author Robert Fell\r\n */\r\n\r\nclass Coordinate\r\n{\r\n\tpublic var x:Int;\r\n\tpublic var y:Int;\r\n\r\n\tpublic function new( p_x:Int = 0, p_y:Int = 0 )\r\n\t{\r\n\t\tx = p_x;\r\n\t\ty = p_y;\r\n\t}\r\n\r\n\tpublic function isEqualTo( p_coordinate:Coordinate ):Bool\r\n\t{\r\n\t\treturn ( ( x == p_coordinate.x ) && ( y == p_coordinate.y ) );\r\n\t}\r\n\r\n\tpublic function toString():String\r\n\t{\r\n\t\treturn \"(\" + x + \",\" + y + \")\";\r\n\t}\r\n\r\n\tpublic function clone():Coordinate\r\n\t{\r\n\t\treturn new Coordinate( x, y );\r\n\t}\r\n}","/*                  __  __    _____           __\r\n *     ____  ____ _/ /_/ /_  / __(_)___  ____/ /__  _____\r\n *    / __ \\/ __ `/ __/ __ \\/ /_/ / __ \\/ __  / _ \\/ ___/\r\n *   / /_/ / /_/ / /_/ / / / __/ / / / / /_/ /  __/ /\r\n *  / .___/\\__,_/\\__/_/ /_/_/ /_/_/ /_/\\__,_/\\___/_/\r\n * /_/\r\n *\r\n * Copyright (c) 2013, Robert Fell\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\npackage pathfinder;\r\n\r\n/**\r\n * @author Statm\thttps://github.com/statm/haxe-astar\r\n * @author Robert Fell\r\n */\r\n\r\nclass Node extends Coordinate\r\n{\r\n\tpublic var parent:Node;\r\n\tpublic var isWalkable:Bool;\r\n\tpublic var f:Float;\r\n\tpublic var g:Float;\r\n\r\n\tpublic function new( p_x:Int, p_y:Int, p_isWalkable:Bool = true )\r\n\t{\r\n\t\tisWalkable = p_isWalkable;\r\n\t\tsuper( p_x, p_y );\r\n\t}\r\n\r\n\toverride public function toString():String\r\n\t{\r\n\t\tvar l_result:String;\r\n\t\tl_result = \"[Node(\" + x + \",\" + y + \")\";\r\n\t\tif ( parent != null )\r\n\t\t{\r\n\t\t\tl_result += \", parent=(\" + parent.x + \",\" + parent.y + \")\";\r\n\t\t}\r\n\t\tl_result += \", \" + ( isWalkable ? \"W\" : \"X\" );\r\n\t\tl_result += \", f=\" + f;\r\n\t\tl_result += \", g=\" + g;\r\n\t\tl_result += \"]\";\r\n\t\treturn l_result;\r\n\t}\r\n}\r\n","/*                  __  __    _____           __\r\n *     ____  ____ _/ /_/ /_  / __(_)___  ____/ /__  _____\r\n *    / __ \\/ __ `/ __/ __ \\/ /_/ / __ \\/ __  / _ \\/ ___/\r\n *   / /_/ / /_/ / /_/ / / / __/ / / / / /_/ /  __/ /\r\n *  / .___/\\__,_/\\__/_/ /_/_/ /_/_/ /_/\\__,_/\\___/_/\r\n * /_/\r\n *\r\n * Copyright (c) 2013, Robert Fell\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\npackage pathfinder;\r\nimport haxe.Timer;\r\n\r\n/**\r\n * A class to find an optimized A Star path across an IMap boolean grid.\r\n * @author Statm\thttps://github.com/statm/haxe-astar\r\n * @author Robert Fell\r\n */\r\n\r\nclass Pathfinder\r\n{\r\n\tprivate inline static var _COST_ADJACENT:Int = 10;\r\n\tprivate inline static var _COST_DIAGIONAL:Int = 14;\r\n\r\n\tprivate var _map:IMap;\r\n\tprivate var _timeOutDuration:Int;\r\n\tprivate var _openList:Array<Node>;\r\n\tprivate var _closedList:Array<Node>;\r\n\tprivate var _isCompleted:Bool;\r\n\tprivate var _nodes:Array<Array<Node>>;\r\n\tprivate var _startNode:Node;\r\n\tprivate var _destNode:Node;\r\n\tprivate var _cols:Int;\r\n\tprivate var _rows:Int;\r\n\tprivate var _info:{ heuristic:EHeuristic, timeElapsed:Int, pathLength:Int, isDiagonalEnabled:Bool };\r\n\r\n\t/**\r\n\t * Creates a new pathfinder class\r\n\t * @param\tp_map\tThe boolean coordinate map\r\n\t * @param\tp_timeOutDuration\tThe maximum time spent to find a path\r\n\t */\r\n\tpublic function new( p_map:IMap, p_timeOutDuration:Int = 10000 )\r\n\t{\r\n\t\tconfigure( p_map, p_timeOutDuration );\r\n\t}\r\n\r\n\t/**\r\n\t * Reconfigures an existing pathfinder class\r\n\t * @param\tp_map\tThe boolean coordinate map\r\n\t * @param\tp_timeOutDuration\tThe maximum time spent to find a path\r\n\t */\r\n\tpublic function configure( p_map:IMap, p_timeOutDuration:Int = 10000 )\r\n\t{\r\n\t\t_map = p_map;\r\n\t\t_timeOutDuration = p_timeOutDuration;\r\n\t\t_nodes = new Array<Array<Node>>();\r\n\t\t_cols = _map.cols;\r\n\t\t_rows = _map.rows;\r\n\t\tfor ( l_ix in 0..._map.cols )\r\n\t\t{\r\n\t\t\tvar l_line = _nodes[l_ix] = new Array<Node>();\r\n\t\t\tfor ( l_iy in 0..._map.rows )\r\n\t\t\t{\r\n\t\t\t\tl_line[l_iy] = new Node( l_ix, l_iy, _map.isWalkable( l_ix, l_iy ) );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate inline function _getCost( p_node1:Node, p_node2:Node, p_heuristic:EHeuristic ):Float\r\n\t{\r\n\t\treturn switch( p_heuristic )\r\n\t\t{\r\n\t\t\tcase DIAGONAL : _getCostDiagonal( p_node1, p_node2 );\r\n\t\t\tcase PRODUCT : _getCostProduct( p_node1, p_node2 );\r\n\t\t\tcase EUCLIDIAN : _getCostEuclidian( p_node1, p_node2 );\r\n\t\t\tcase MANHATTAN : _getCostManhattan( p_node1, p_node2 );\r\n\t\t}\r\n\t}\r\n\r\n\tprivate inline function _getCostDiagonal( p_node1:Node, p_node2:Node ):Float\r\n\t{\r\n\t\tvar l_dx:Int = _intAbs( p_node1.x - p_node2.x );\r\n\t\tvar l_dy:Int = _intAbs( p_node1.y - p_node2.y );\r\n\t\tvar l_diag:Int = _intMin( l_dx, l_dy );\r\n\t\tvar l_straight:Int = l_dx + l_dy;\r\n\t\treturn ( _COST_ADJACENT * ( l_straight - ( 2 * l_diag ) ) ) + ( _COST_DIAGIONAL * l_diag );\r\n\t}\r\n\r\n\tprivate inline function _getCostProduct( p_node1:Node, p_node2:Node ):Float\r\n\t{\r\n\t\tvar l_dx1:Int = _intAbs( p_node1.x - _destNode.x );\r\n\t\tvar l_dy1:Int = _intAbs( p_node1.y - _destNode.y );\r\n\t\tvar l_dx2:Int = _intAbs( _startNode.x - _destNode.x );\r\n\t\tvar l_dy2:Int = _intAbs( _startNode.y - _destNode.y );\r\n\t\tvar l_cross:Float = _intAbs( ( l_dx1 * l_dy2 ) - ( l_dx2 * l_dy1 ) ) * .01;\r\n\t\treturn _getCostDiagonal( p_node1, p_node2 ) + l_cross;\r\n\t}\r\n\r\n\tprivate inline function _getCostEuclidian( p_node1:Node, p_node2:Node ):Float\r\n\t{\r\n\t\tvar l_dx:Int = _intAbs( p_node1.x - p_node2.x );\r\n\t\tvar l_dy:Int = _intAbs( p_node1.y - p_node2.y );\r\n\t\treturn Math.sqrt( ( l_dx * l_dx ) + ( l_dy * l_dy ) ) * _COST_ADJACENT;\r\n\t}\r\n\r\n\tprivate inline function _getCostManhattan( p_node1:Node, p_node2:Node ):Float\r\n\t{\r\n\t\tvar l_dx:Int = p_node1.x - p_node2.x;\r\n\t\tvar l_dy:Int = p_node1.y - p_node2.y;\r\n\t\treturn ( ( l_dx > 0 ? l_dx : -l_dx ) + ( l_dy > 0 ? l_dy : -l_dy ) ) * _COST_ADJACENT;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates an A Star path between two nodes on a boolean map\r\n\t * @param\tp_start\tThe starting node\r\n\t * @param\tp_dest\tThe destination node\r\n\t * @param\tp_heuristic\tThe method of A Star used\r\n\t * @param\tp_isDiagonalEnabled\tSet to true to ensure only up, left, down, right movements are allowed\r\n\t * @param\tp_isMapDynamic\tSet to true to force fresh lookups from IMap.isWalkable() for each node's isWalkable property (e.g. for a dynamically changing map)\r\n\t * @return\tAn array of coordinates from start to destination, or null if no path was found within the time limit\r\n\t */\r\n\tpublic function createPath( p_start:Coordinate, p_dest:Coordinate, ?p_heuristic:EHeuristic, p_isDiagonalEnabled:Bool = true, p_isMapDynamic:Bool = false ):Array<Coordinate>\r\n\t{\r\n\t\tif ( p_heuristic == null )\r\n\t\t{\r\n\t\t\tp_heuristic = EHeuristic.PRODUCT;\r\n\t\t}\r\n\t\t_info =\r\n\t\t{\r\n\t\t\theuristic:p_heuristic,\r\n\t\t\ttimeElapsed:0,\r\n\t\t\tpathLength:0,\r\n\t\t\tisDiagonalEnabled:p_isDiagonalEnabled\r\n\t\t};\r\n\t\tif ( !_map.isWalkable( p_start.x, p_start.y ) || !_map.isWalkable( p_dest.x, p_dest.y ) || p_start.isEqualTo( p_dest ) )\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t_openList = new Array<Node>();\r\n\t\t_closedList = new Array<Node>();\r\n\t\t_startNode = _nodes[p_start.x][p_start.y];\r\n\t\t_destNode = _nodes[p_dest.x][p_dest.y];\r\n\t\t_startNode.g = 0;\r\n\t\t_startNode.f = _getCost( _startNode, _destNode, p_heuristic );\r\n\t\t_openList.push( _startNode );\r\n\t\treturn _searchPath( p_heuristic, p_isDiagonalEnabled, p_isMapDynamic );\r\n\t}\r\n\r\n\tprivate inline function _getPath():Array<Coordinate>\r\n\t{\r\n\t\tvar l_path:Array<Coordinate> = new Array<Coordinate>();\r\n\t\tvar l_node:Node = _destNode;\r\n\t\tl_path[0] = l_node.clone();\r\n\t\tdo\r\n\t\t{\r\n\t\t\tl_node = l_node.parent;\r\n\t\t\tl_path.unshift( l_node.clone() );\r\n\t\t\tif ( l_node == _startNode )\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile ( true );\r\n\t\treturn l_path;\r\n\t}\r\n\r\n\tprivate function _searchPath( p_heuristic:EHeuristic, p_isDiagonalEnabled:Bool = true, p_isMapDynamic:Bool = false ):Array<Coordinate>\r\n\t{\r\n\t\tvar l_minX:Int, l_maxX:Int, l_minY:Int, l_maxY:Int;\r\n\t\tvar l_isWalkable:Bool;\r\n\t\tvar l_g:Float, l_f:Float, l_cost:Float;\r\n\t\tvar l_nextNode:Node = null;\r\n\t\tvar l_currentNode:Node = _startNode;\r\n\t\tvar l_startTime = Timer.stamp();\r\n\t\t_isCompleted = false;\r\n\t\twhile ( !_isCompleted )\r\n\t\t{\r\n\t\t\tl_minX = l_currentNode.x - 1 < 0 ? 0 : l_currentNode.x - 1;\r\n\t\t\tl_maxX = l_currentNode.x + 1 >= _cols ? _cols - 1 : l_currentNode.x + 1;\r\n\t\t\tl_minY = l_currentNode.y - 1 < 0 ? 0 : l_currentNode.y - 1;\r\n\t\t\tl_maxY = l_currentNode.y + 1 >= _rows ? _rows - 1 : l_currentNode.y + 1;\r\n\t\t\tfor ( l_iy in l_minY...( l_maxY + 1 ) )\r\n\t\t\t{\r\n\t\t\t\tfor ( l_ix in l_minX...( l_maxX + 1 ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tl_nextNode = _nodes[l_ix][l_iy];\r\n\t\t\t\t\tl_isWalkable = ( !p_isMapDynamic && l_nextNode.isWalkable ) || ( p_isMapDynamic && _map.isWalkable( l_ix, l_iy ) );\r\n\t\t\t\t\tif ( ( l_nextNode == l_currentNode ) || !l_isWalkable )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tl_cost = _COST_ADJACENT;\r\n\t\t\t\t\tif ( !( ( l_currentNode.x == l_nextNode.x ) || ( l_currentNode.y == l_nextNode.y ) ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( !p_isDiagonalEnabled  )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tl_cost = _COST_DIAGIONAL;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tl_g = l_currentNode.g + l_cost;\r\n\t\t\t\t\tl_f = l_g + _getCost( l_nextNode, _destNode, p_heuristic );\r\n\t\t\t\t\tif ( ( _openList.indexOf( l_nextNode ) != -1 ) || ( _closedList.indexOf( l_nextNode ) != -1 ) )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif ( l_nextNode.f > l_f )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tl_nextNode.f = l_f;\r\n\t\t\t\t\t\t\tl_nextNode.g = l_g;\r\n\t\t\t\t\t\t\tl_nextNode.parent = l_currentNode;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tl_nextNode.f = l_f;\r\n\t\t\t\t\t\tl_nextNode.g = l_g;\r\n\t\t\t\t\t\tl_nextNode.parent = l_currentNode;\r\n\t\t\t\t\t\t_openList.push( l_nextNode );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t_info.timeElapsed = Std.int( ( Timer.stamp() - l_startTime ) * 1000 );\r\n\t\t\t\tif ( _info.timeElapsed > _timeOutDuration )\r\n\t\t\t\t{\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t_closedList.push( l_currentNode );\r\n\t\t\tif ( _openList.length == 0 )\r\n\t\t\t{\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t_openList.sort( _sort );\r\n\t\t\tl_currentNode = _openList.shift();\r\n\t\t\tif ( l_currentNode == _destNode )\r\n\t\t\t{\r\n\t\t\t\t_isCompleted = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\t_info.timeElapsed = Std.int( ( Timer.stamp() - l_startTime ) * 1000 );\r\n\t\tvar l_path = _getPath();\r\n\t\t_info.pathLength = l_path.length;\r\n\t\treturn l_path;\r\n\t}\r\n\t\r\n\tprivate function _sort( p_x:Node, p_y:Node ):Int\r\n\t{\r\n\t\treturn ( p_x.f > p_y.f ) ? 1 : ( p_x.f < p_y.f ) ? -1 : 0;\r\n\t}\r\n\t\r\n\tprivate inline function _intAbs( p_value:Int ):Int\r\n\t{\r\n\t\treturn ( p_value < 0 ) ? -p_value : p_value;\r\n\t}\r\n\r\n\tprivate inline function _intMin( p_v1:Int, p_v2:Int ):Int\r\n\t{\r\n\t\treturn ( p_v1 < p_v2 ) ? p_v1 : p_v2;\r\n\t}\r\n\r\n\t/**\r\n\t * A string to interpret the success of the latest path created\r\n\t * @return\tInformation string\r\n\t */\r\n\tpublic function getInfo():String\r\n\t{\r\n\t\treturn _isCompleted ? \"Success using \" + _info.heuristic + ( !_info.isDiagonalEnabled ? \" (and diagonals disabled )\" : \"\" ) + \" with a path length of \" + _info.pathLength + \" taking \" + _info.timeElapsed + \"ms\" : \"Fail\";\r\n\t}\r\n}\r\n","package pixi.display;\n\nimport flump.*;\nimport flump.DisplayObjectKey;\nimport flump.library.*;\nimport flump.library.MovieSymbol;\nimport pixi.display.FlumpResource;\nimport pixi.extras.MovieClip;\nimport pixi.core.display.Container;\nimport pixi.core.display.DisplayObject;\nimport pixi.core.math.Point;\nimport pixi.core.ticker.Ticker;\n\n\n@:access(pixi.display.FlumpResource)\nclass FlumpMovie extends Container implements IFlumpMovie {\n\n\tpublic var player:MoviePlayer;\n\tprivate var symbol:MovieSymbol;\n\tprivate var layers = new Map<Layer, PixiLayer>();\n\tprivate var layerLookup = new Map<String, Container>();\n\tprivate var movieChildren = new Map<DisplayObjectKey, DisplayObject>();\n\tprivate var displaying = new Map<Layer, DisplayObjectKey>();\n\tprivate var ticker:Ticker = untyped __js__ (\"PIXI.ticker.shared\");\n\tprivate var master:Bool;\n\n\tprivate var resource:FlumpResource;\n\tprivate var resourceId:String;\n\t\n\n\tpublic function new(symbolId:String, resourceId:String = null){\n\t\tsuper();\n\t\tthis.resourceId = resourceId;\n\n\t\tif(resourceId == null){\n\t\t\tresource = FlumpResource.getResourceForMovie(symbolId);\n\t\t\tif(resource == null) throw(\"Flump movie does not exist: \" + symbolId);\n\t\t}else{\n\t\t\tresource = FlumpResource.get(resourceId);\n\t\t\tif(resource == null) throw(\"Flump resource does not exist: \" + resourceId);\n\t\t}\n\n\t\tthis.symbol = resource.library.movies.get(symbolId);\n\t\t\n\t\tplayer = new MoviePlayer(symbol, this);\t\n\t\tthis.loop = true;\n\n\t\tmaster = true;\n\t\tonce(\"added\", onAdded);\n\t}\n\n\n\tprivate function disableAsMaster(){\n\t\tmaster = false;\n\t\toff(\"added\", onAdded);\n\t}\n\n\n\t/////////////////////////////////////////////////////\n\t//\n\t//   API\n\t//\n\t/////////////////////////////////////////////////////\n\n\tpublic var animationSpeed(default, default):Float = 1.0;\n\n\tpublic function getLayer(layerId:String):Container{\n\t\tif(layerLookup.exists(layerId) == false) throw(\"Layer \" + layerId + \"does not exist\");\n\t\treturn layerLookup[layerId];\n\t}\n\n\n\tpublic function getChildDisplayObject(layerId:String, keyframeIndex:UInt = 0):DisplayObject{\n\t\tvar key = player.getDisplayKey(layerId, keyframeIndex);\n\t\treturn movieChildren[key];\n\t}\n\n\n\tpublic function getChildMovie(layerId, keyframeIndex:UInt = 0):FlumpMovie{\n\t\tvar child = getChildDisplayObject(layerId, keyframeIndex);\n\t\tif(Std.is(child, FlumpMovie) == false) throw(\"Child on layer \" + layerId + \" at keyframeIndex \" + keyframeIndex + \" is not of type FlumpMovie!\");\n\t\treturn cast child;\n\t}\n\n\n\tpublic var symbolId(get, null):String;\n\tprivate function get_symbolId(){\n\t\treturn symbol.name;\n\t}\n\n\tpublic var loop(default, set):Bool;\n\tprivate function set_loop(value){\n\t\tif(value && player.playing) player.loop();\n\t\telse if(value == false && player.looping) player.play();\n\t\treturn loop = value;\n\t}\n\n\n\tpublic var onComplete(default, set):Void -> Void;\n\tprivate function set_onComplete(value){\n\t\treturn onComplete = value;\n\t}\n\n\tpublic var currentFrame(get, set):Int;\n\tprivate function set_currentFrame(value){\n\t\tplayer.currentFrame = value;\n\t\treturn value;\n\t}\n\tprivate function get_currentFrame():Int{\n\t\treturn player.currentFrame;\n\t}\n\n\tpublic var playing(get, null):Bool;\n\tprivate function get_playing(){\n\t\treturn player.playing || player.looping;\n\t}\n\n\n\tpublic var independantTimeline(get, set):Bool;\n\tprivate function get_independantTimeline(){\n\t\treturn player.independantTimeline;\n\t}\n\tprivate function set_independantTimeline(value:Bool){\n\t\tplayer.independantTimeline = value;\n\t\treturn value;\n\t}\n\n\n\tpublic var independantControl(get, set):Bool;\n\tprivate function get_independantControl(){\n\t\treturn player.independantControl;\n\t}\n\tprivate function set_independantControl(value:Bool){\n\t\tplayer.independantControl = value;\n\t\treturn value;\n\t}\n\n\n\tpublic var totalFrames(get, null):Int;\n\tprivate function get_totalFrames(){\n\t\treturn player.totalFrames;\n\t}\n\n\n\tpublic function stop():Void{\n\t\tplayer.stop();\n\t}\n\n\n\tpublic function play():Void{\n\t\tif(loop) player.loop();\n\t\telse player.play();\n\t}\n\n\n\tpublic function gotoAndStop(frameNumber:Int):Void{\n\t\tif(!loop){\n\t\t\tif(frameNumber > player.totalFrames-1) frameNumber = player.totalFrames - 1;\n\t\t\telse if(frameNumber < 0) frameNumber = 0;\n\t\t}\n\t\tplayer.goToFrame(frameNumber).stop();\n\t}\n\n\n\tpublic function gotoAndPlay(frameNumber:Int):Void{\n\t\tif(!loop){\n\t\t\tif(frameNumber > player.totalFrames-1) frameNumber = player.totalFrames - 1;\n\t\t\telse if(frameNumber < 0) frameNumber = 0;\n\t\t}\n\t\tif(loop) player.goToFrame(frameNumber).loop();\n\t\telse player.goToFrame(frameNumber).play();\n\t}\n\n\n\tpublic function getLabelFrame(label:String):UInt{\n\t\treturn player.getLabelFrame(label);\n\t}\n\n\n\t/////////////////////////////////////////////////////\n\t//\n\t//   Other\n\t//\n\t/////////////////////////////////////////////////////\n\n\tprivate function tick(){\n\t\tplayer.advanceTime(ticker.elapsedMS * animationSpeed);\n\t}\n\n\n\tprivate function onAdded(to){\n\t\tonce(\"removed\", onRemoved);\n\t\tticker.add(tick);\n\t}\n\n\n\tprivate function onRemoved(from){\n\t\tonce(\"added\", onAdded);\n\t\tticker.remove(tick);\n\t}\n\n\n\n\t/////////////////////////////////////////////////////\n\t//\n\t//   IFlumpMovie\n\t//\n\t/////////////////////////////////////////////////////\n\n\t\n\t\n\tprivate function createLayer(layer:Layer):Void{\n\t\tlayers[layer] = new PixiLayer();\n\t\tlayerLookup[layer.name] = layers[layer];\n\t\taddChild(layers[layer]);\n\t}\n\n\n\tprivate function getChildPlayer(keyframe:Keyframe):MoviePlayer{\n\t\tvar movie:FlumpMovie = cast movieChildren[keyframe.displayKey];\n\t\treturn movie.player;\n\t}\n\n\n\tprivate function createFlumpChild(displayKey:DisplayObjectKey):Void{\n\t\tmovieChildren[displayKey] = resource.createDisplayObject(displayKey.symbolId);\n\t}\n\n\n\tprivate function removeFlumpChild(layer:Layer, displayKey:DisplayObjectKey):Void{\n\t\tvar layer = layers[layer];\n\t\tlayer.removeChildren();\n\t}\n\n\n\tprivate function addFlumpChild(layer:Layer, displayKey:DisplayObjectKey):Void{\n\t\tvar layer = layers[layer];\n\t\tlayer.addChild( movieChildren[displayKey] );\n\t}\n\n\n\tprivate function onAnimationComplete():Void{\n\t\tif(onComplete != null) onComplete();\n\t}\n\n\n\tprivate function renderFrame(keyframe:Keyframe, x:Float, y:Float, scaleX:Float, scaleY:Float, skewX:Float, skewY:Float):Void{\n\t\tvar layer = layers[keyframe.layer];\n\t\tlayer.x = x;\n\t\tlayer.y = y;\n\t\tlayer.scale.x = scaleX;\n\t\tlayer.scale.y = scaleY;\n\t\tlayer.skew.x = skewX;\n\t\tlayer.skew.y = skewY;\n\t\tlayer.pivot.x = keyframe.pivot.x;\n\t\tlayer.pivot.y = keyframe.pivot.y;\n\t}\n\n\n\tprivate function labelPassed(label:Label){\n\t\temit(\"labelPassed\", label.name);\n\t}\n\t\n\toverride public function destroy(): Void {\n\t\tstop();\n\t\tonComplete = null;\n\t\tfor (layer in layers) layer.removeChildren();\n\t\tsymbol = null;\n\t\tplayer = null;\n\t\tsuper.destroy(true);\n\t}\n\n\n}","package pixi.display;\n\nimport flump.library.FlumpLibrary;\nimport flump.library.SpriteSymbol;\nimport flump.library.MovieSymbol;\nimport flump.library.Point;\nimport pixi.core.math.shapes.Rectangle;\nimport pixi.core.display.DisplayObject;\nimport pixi.core.sprites.Sprite;\nimport pixi.core.textures.BaseTexture;\nimport pixi.core.textures.Texture;\nimport pixi.core.ticker.Ticker;\nimport pixi.loaders.Resource;\nimport pixi.loaders.Loader;\n\n\n@:access(pixi.display.FlumpMovie)\nclass FlumpResource{\n\t\n\tprivate var library:FlumpLibrary;\n\tprivate var textures:Map<String, Texture>;\n\tprivate var resourceId:String;\n\n\n\n\tprivate static var resources = new Map<String, FlumpResource>();\n\n\n\tpublic static function exists(resourceName:String){\n\t\treturn resources.exists(resourceName);\n\t}\n\n\n\tpublic static function destroy(resourceName:String){\n\t\tif(resources.exists(resourceName) == false) throw(\"Cannot destroy FlumpResource: \" + resourceName + \" as it does not exist.\");\n\t\t\n\t\tvar resource = resources[resourceName];\n\t\tfor(texture in resource.textures)texture.destroy();\n\t\tresource.library = null;\n\t\tresources.remove(resourceName);\n\t}\n\n\n\tpublic static function flumpParser(resource:Resource, next:Void->Void){\n\t\tif(resource.data == null || resource.isJson == false) return;\n\t\tif(!resource.data.hasField(\"md5\") || !resource.data.hasField(\"movies\") || !resource.data.hasField(\"textureGroups\") || !resource.data.hasField(\"frameRate\")) return;\n\t\t\n\t\tvar lib:FlumpLibrary = FlumpLibrary.create(resource.data);\n\t\tvar textures = new Map<String, Texture>();\n\t\t\n\t\tvar atlasLoader = new Loader();\n\t\tatlasLoader.baseUrl = ~/\\/(.[^\\/]*)$/i.replace(resource.url, \"\");\n\n\t\tfor(atlasSpec in lib.atlases){\n\t\t\tatlasLoader.add(atlasSpec.file, function(atlasResource){\n\t\t\t\tvar atlasTexture = new BaseTexture(atlasResource.data);\n\n\t\t\t\tfor(textureSpec in atlasSpec.textures){\n\t\t\t\t\tvar frame = new Rectangle(textureSpec.rect.x, textureSpec.rect.y, textureSpec.rect.width, textureSpec.rect.height);\n\t\t\t\t\tvar origin = new Point(textureSpec.origin.x, textureSpec.origin.y);\n\t\t\t\t\torigin.x = origin.x / frame.width;\n\t\t\t\t\torigin.y = origin.y / frame.height;\n\t\t\t\t\ttextures[textureSpec.symbol] = new Texture(atlasTexture, frame);\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tatlasLoader.once(\"complete\", function(loader:Loader){\n\t\t\tvar flumpResource = new FlumpResource(lib, textures, resource.name);\n\t\t\tif(resource.name != null) FlumpResource.resources[resource.name] = flumpResource;\n\t\t\tresource.data = flumpResource;\n\t\t\tnext();\n\t\t});\n\t\tatlasLoader.load();\n\t}\n\n\n\tprivate static function get(resourceName:String){\n\t\tif(!resources.exists(resourceName)) throw(\"Flump resource: \" + resourceName + \" does not exist.\");\n\t\treturn resources[resourceName];\n\t}\n\n\t\n\tprivate static function getResourceForMovie(symbolId:String):FlumpResource{\n\t\tfor(resource in resources){\n\t\t\tif(resource.library.movies.exists(symbolId)){\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\t\tthrow(\"Movie: \" + symbolId + \"does not exists in any loaded flump resources.\");\n\t}\n\n\n\tprivate static function getResourceForSprite(symbolId:String):FlumpResource{\n\t\tfor(resource in resources){\n\t\t\tif(resource.library.sprites.exists(symbolId)){\n\t\t\t\treturn resource;\n\t\t\t}\n\t\t}\n\t\tthrow(\"Sprite: \" + symbolId + \"does not exists in any loaded flump resources.\");\n\t}\n\t\n\n\n\tprivate function new(library:FlumpLibrary, textures:Map<String, Texture>, resourceId:String){\n\t\tthis.library = library;\n\t\tthis.textures = textures;\n\t\tthis.resourceId = resourceId;\n\t}\n\n\n\tprivate function createMovie(id:String):FlumpMovie{\n\t\tvar movie = new FlumpMovie(id, this.resourceId);\n\t\tmovie.disableAsMaster();\n\t\treturn movie;\n\t}\n\n\n\tprivate function createSprite(id:String):Sprite{\n\t\treturn new FlumpSprite(id, this.resourceId);\n\t}\n\n\n\tprivate function createDisplayObject(id:String):DisplayObject{\n\t\treturn library.movies.exists(id)\n\t\t? createMovie(id)\n\t\t: createSprite(id);\n\t}\n\n}","package pixi.display;\n\nimport flump.library.FlumpLibrary;\nimport pixi.core.sprites.Sprite;\n\n\n@:access(pixi.display.FlumpResource)\nclass FlumpSprite extends Sprite{\n\n\tpublic var symbolId:String;\n\tpublic var resourceId:String;\n\t\n\n\tpublic function new(symbolId:String, resourceId:String = null){\n\t\tthis.symbolId = symbolId;\n\t\tthis.resourceId = resourceId;\n\n\t\tvar resource:FlumpResource;\n\t\tif(resourceId != null){\n\t\t\tresource = FlumpResource.get(resourceId);\n\t\t\tif(resource == null) throw(\"Library: \" + resourceId + \"does has not been loaded.\");\n\t\t}else{\n\t\t\tresource = FlumpResource.getResourceForSprite(symbolId);\n\t\t}\n\n\t\tvar symbol = resource.library.sprites[symbolId];\n\t\tvar texture = resource.textures[symbol.texture];\n\t\tsuper(texture);\n\n\t\tpivot.x = symbol.origin.x;\n\t\tpivot.y = symbol.origin.y;\n\t}\n\n\n}","package pixi.display;\n\nimport pixi.core.display.Container;\nimport pixi.core.math.Point;\n\n\nclass PixiLayer extends Container{\n\n    public var skew = new Point();\n    \n    override public function updateTransform(){\n        untyped __js__('\n            if (!this.visible)\n            {\n                return;\n            }');\n\n\n        untyped __js__('\n             // create some matrix refs for easy access\n            var pt = this.parent.worldTransform;\n            var wt = this.worldTransform;\n\n            // temporary matrix variables\n            var a, b, c, d, tx, ty,\n                rotY = this.rotation + this.skew.y,\n                rotX = this.rotation + this.skew.x;\n        ');\n\n        untyped __js__('\n            // so if rotation is between 0 then we can simplify the multiplication process..\n            if (rotY % (Math.PI*2) || rotX % (Math.PI*2))\n            {\n                // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n                if (rotX !== this._cachedRotX || rotY !== this._cachedRotY)\n                {\n                    // cache new values\n                    this._cachedRotX = rotX;\n                    this._cachedRotY = rotY;\n\n                    // recalculate expensive ops\n                    this._crA = Math.cos(rotY);\n                    this._srB = Math.sin(rotY);\n\n                    this._srC = Math.sin(-rotX);\n                    this._crD = Math.cos(rotX);\n                }\n\n                // get the matrix values of the displayobject based on its transform properties..\n                a  = this._crA * this.scale.x;\n                b  = this._srB * this.scale.x;\n                c  = this._srC * this.scale.y;\n                d  = this._crD * this.scale.y;\n                tx = this.position.x;\n                ty = this.position.y;\n\n                // check for pivot.. not often used so geared towards that fact!\n                //if (this.pivot.x || this.pivot.y)\n                //{\n                    tx -= this.pivot.x * a + this.pivot.y * c;\n                    ty -= this.pivot.x * b + this.pivot.y * d;\n                //}\n\n                // concat the parent matrix with the objects transform.\n                wt.a  = a  * pt.a + b  * pt.c;\n                wt.b  = a  * pt.b + b  * pt.d;\n                wt.c  = c  * pt.a + d  * pt.c;\n                wt.d  = c  * pt.b + d  * pt.d;\n                wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n                wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n            }\n            else\n            {\n                // lets do the fast version as we know there is no rotation..\n                a  = this.scale.x;\n                d  = this.scale.y;\n\n                tx = this.position.x - this.pivot.x * a;\n                ty = this.position.y - this.pivot.y * d;\n\n                wt.a  = a  * pt.a;\n                wt.b  = a  * pt.b;\n                wt.c  = d  * pt.c;\n                wt.d  = d  * pt.d;\n                wt.tx = tx * pt.a + ty * pt.c + pt.tx;\n                wt.ty = tx * pt.b + ty * pt.d + pt.ty;\n            }\n        ');\n\n        untyped __js__('\n\n            // multiply the alphas..\n            this.worldAlpha = this.alpha * this.parent.worldAlpha;\n\n            // reset the bounds each time this is called!\n            this._currentBounds = null;\n        ');\n\n        untyped __js__('\n            for (var i = 0, j = this.children.length; i < j; ++i)\n            {\n                this.children[i].updateTransform();\n            }   \n        ');\n\n    }\n}","package pixi.loaders;\n\nimport flump.library.FlumpLibrary;\nimport pixi.display.FlumpResource;\nimport js.Browser;\nimport js.html.Image;\nimport pixi.core.math.Point;\nimport pixi.core.math.shapes.Rectangle;\nimport pixi.core.textures.Texture;\nimport pixi.core.textures.BaseTexture;\nimport pixi.core.ticker.Ticker;\nimport pixi.loaders.Loader;\nimport pixi.loaders.Resource;\n\nusing Reflect;\n\n\n@:access(pixi.display.FlumpResource)\nclass FlumpParser{\n\n\n\tpublic static function flumpParser(resource:Resource, next:Void->Void){\n\t\tif(resource.data == null || resource.isJson == false) return;\n\t\tif(!resource.data.hasField(\"md5\") || !resource.data.hasField(\"movies\") || !resource.data.hasField(\"textureGroups\") || !resource.data.hasField(\"frameRate\")) return;\n\t\t\n\t\tvar lib:FlumpLibrary = FlumpLibrary.create(resource.data);\n\t\tvar textures = new Map<String, Texture>();\n\t\t\n\t\tvar atlasLoader = new Loader();\n\t\tatlasLoader.baseUrl = ~/\\/(.[^\\/]*)$/i.replace(resource.url, \"\");\n\n\t\tfor(atlasSpec in lib.atlases){\n\t\t\tatlasLoader.add(atlasSpec.file, function(atlasResource){\n\t\t\t\tvar atlasTexture = new BaseTexture(atlasResource.data);\n\n\t\t\t\tfor(textureSpec in atlasSpec.textures){\n\t\t\t\t\tvar frame = new Rectangle(textureSpec.rect.x, textureSpec.rect.y, textureSpec.rect.width, textureSpec.rect.height);\n\t\t\t\t\tvar origin = new Point(textureSpec.origin.x, textureSpec.origin.y);\n\t\t\t\t\torigin.x = origin.x / frame.width;\n\t\t\t\t\torigin.y = origin.y / frame.height;\n\t\t\t\t\ttextures[textureSpec.symbol] = new Texture(atlasTexture, frame);\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\tatlasLoader.once(\"complete\", function(loader:Loader){\n\t\t\tvar flumpResource = new FlumpResource(lib, textures, resource.name);\n\t\t\tif(resource.name != null) FlumpResource.resources[resource.name] = flumpResource;\n\t\t\tresource.data = flumpResource;\n\t\t\tnext();\n\t\t});\n\t\tatlasLoader.load();\n\t}\n\n\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","package com.isartdigital.builder.game.sprites.buildings.const;\r\n\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass BuildingComponents\r\n{\r\n\tpublic static inline var ERASABLE:String = \"ERASABLE\";\r\n\tpublic static inline var MOVABLE:String = \"MOVABLE\";\r\n\tpublic static inline var UPGRADABLE:String = \"UPGRADABLE\";\r\n\tpublic static inline var COLLECTABLE:String = \"COLLECTABLE\";\r\n\tpublic static inline var PAINTABLE:String = \"PAINTABLE\";\r\n}","package com.isartdigital.builder.game.sprites.buildings.const;\r\n\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass BuildingEvents\r\n{\r\n\tpublic static inline var SELECTED:String = \"SELECTED\";\r\n\tpublic static inline var UNSELECTED:String = \"UNSELECTED\";\r\n\tpublic static inline var MOVE_CONFIRM:String = \"MOVE_CONFIRM\";\r\n\tpublic static inline var MOVE_DISABLE:String = \"MOVE_DISABLE\";\r\n}","package com.isartdigital.builder.game.sprites.buildings.const;\r\n\r\n/**\r\n * ...\r\n * @author Steven PUISAIS\r\n */\r\nclass BuildingNames\r\n{\r\n\tpublic static inline var BAR:String\t\t\t\t= \"bar\";\r\n\tpublic static inline var BROTHEL:String  \t\t= \"brothel\";\r\n\tpublic static inline var PYROTECHNICIAN:String \t= \"pyrotechnician\";\r\n\tpublic static inline var HOUSE:String \t\t\t= \"house\";\r\n\tpublic static inline var MAIN_SQUARE:String \t= \"main_square\";\r\n\tpublic static inline var PARK:String \t\t\t= \"park\";\r\n\tpublic static inline var ALTAR:String \t\t\t= \"altar\";\r\n\tpublic static inline var STATUE:String \t\t\t= \"statue\";\r\n\tpublic static inline var BIG_FLOWER_POT:String \t= \"big_flower_pot\";\r\n\tpublic static inline var FLOATING_FLOWER:String = \"floating_flower\";\r\n\tpublic static inline var HARBOR:String \t\t\t= \"harbor\";\r\n\tpublic static inline var CITY_HALL:String\t\t= \"city_hall\";\r\n\tpublic static inline var LANTERNS:String\t\t= \"lanterns\";\r\n\tpublic static inline var CHURCH:String\t\t\t= \"church\";\r\n\tpublic static inline var CANTINA:String\t\t\t= \"cantina\";\r\n\tpublic static inline var GIFTSHOP:String \t\t= \"giftShop\";\r\n}","package com.isartdigital.builder.game.sprites.buildings.exceptions;\r\n\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass BuildingExceptions\r\n{\r\n\tpublic static var configNotFound:String = 'Building name not found in building configuration (buildingsSetting.json)';\r\n\tpublic static var noHarvestFunctionality:String = 'You try to use harvest functionality on building that havent this functionality';\r\n}","package com.isartdigital.builder.game.type;\r\n\r\n/**\r\n * ...\r\n * @author Dorian MILLIERE\r\n */\r\nclass JsonNames\r\n{\r\n\tpublic static inline var LANTERN_PLACEMENT:String = \"json/lanternsPlacement.json\";\r\n\tpublic static inline var BUILDINGS_SETTINGS:String = \"json/buildingsSettings.json\";\r\n\tpublic static inline var BUILDINGS_DEFINITION:String = \"json/building.json\";\r\n\tpublic static inline var SHOP_SHEET:String = \"json/ShopSheet.json\";\r\n}","package com.isartdigital.builder.game.type;\r\n\r\n/**\r\n * ...\r\n * @author Dorian\r\n */\r\nclass ModelElementNames\r\n{\r\n\tpublic static inline var TILE:String = \"tile\";\r\n\tpublic static inline var BUILDING:String = \"building\";\r\n\tpublic static inline var BACKGROUND:String = \"background\";\r\n}","package com.isartdigital.builder.ui.hud;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass BaseBuildingHUDEvent\r\n{\r\n\tpublic static inline var UPGRADE_BUTTON:String = \"UPGRADE_BUTTON\";\r\n\tpublic static inline var PAINT_BUTTON:String = \"PAINT_BUTTON\";\r\n\tpublic static inline var MOVE_BUTTON:String = \"MOVE_BUTTON\";\r\n\tpublic static inline var DELETE_BUTTON:String = \"DELETE_BUTTON\";\r\n}","package com.isartdigital.builder.ui.screens;\r\n\r\n/**\r\n * ...\r\n * @author Flavien\r\n */\r\nclass ShopEvent\r\n{\r\n\tpublic static inline var SHOP_BUY_BUILDING:String = \"SHOP_BUY_BUILDING\";\r\n}","package com.isartdigital.utils.events;\r\n\r\n/**\r\n * @author Mathieu ANTHOINE\r\n */\r\n\r\nclass EventType \r\n{\r\n\t\r\n\tpublic static inline var GAME_LOOP:String = \"gameLoop\";\r\n\tpublic static inline var RESIZE:String = \"resize\";\r\n\t\r\n\tpublic static inline var ADDED:String = \"added\";\r\n\tpublic static inline var REMOVED:String = \"removed\";\r\n\t\r\n}","package com.isartdigital.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu Anthoine\r\n */\r\nclass FacebookEventType extends EventType\r\n{\r\n\r\n\tpublic static inline var CONNECTED:String = \"connected\";\r\n\tpublic static inline var NOT_AUTHORIZED:String = \"not_authorized\";\r\n\tpublic static inline var UNKNOWN:String = \"unknown\";\r\n\t\r\n}","package com.isartdigital.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass LoadEventType extends EventType\r\n{\r\n\r\n\tpublic static inline var COMPLETE:String = \"complete\";\r\n\tpublic static inline var LOADED:String = \"load\";\r\n\tpublic static inline var PROGRESS:String = \"progress\";\r\n\t\r\n}","package com.isartdigital.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass MouseEventType extends EventType\r\n{\r\n\t\r\n\tpublic static inline var MOUSE_MOVE:String = \"mousemove\";\r\n\tpublic static inline var MOUSE_DOWN:String = \"mousedown\";\r\n\tpublic static inline var MOUSE_OUT:String = \"mouseout\";\r\n\tpublic static inline var MOUSE_OVER:String = \"mouseover\";\r\n\tpublic static inline var MOUSE_UP:String = \"mouseup\";\r\n\tpublic static inline var MOUSE_UP_OUTSIDE:String = \"mouseupoutside\";\r\n\tpublic static inline var CLICK:String = \"click\";\r\n\t\r\n\tpublic static inline var RIGHT_DOWN:String = \"rightdown\";\r\n\tpublic static inline var RIGHT_UP:String = \"rightup\";\r\n\tpublic static inline var RIGHT_UP_OUTSIDE:String = \"rightupoutside\";\r\n\tpublic static inline var RIGHT_CLICK:String = \"rightclick\";\r\n\t\r\n}","package com.isartdigital.utils.events;\r\n\r\n/**\r\n * ...\r\n * @author Mathieu ANTHOINE\r\n */\r\nclass TouchEventType extends EventType\r\n{\r\n\r\n\tpublic static inline var TOUCH_START:String = \"touchstart\";\r\n\tpublic static inline var TOUCH_MOVE:String = \"touchmove\";\r\n\tpublic static inline var TOUCH_END:String = \"touchend\";\r\n\tpublic static inline var TOUCH_END_OUTSIDE:String = \"touchendoutside\";\r\n\tpublic static inline var TAP:String = \"tap\";\r\n\t\r\n}"],
"names":[],
"mappings":"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"
}